{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"MinJoker's Notebook","text":"<p>Quote</p> <p>\u4ff1\u5f80\u77e3\u3002\u7136\u800c\uff0c\u300c\u7f8e\u300d\u7684\u5386\u7a0b\u5374\u662f\u6307\u5411\u672a\u6765\u7684\u3002 <p>\u2014\u2014\u2014\u2014 \u674e\u6cfd\u539a \u00a0 \u00a0 </p></p>"},{"location":"link/","title":"Friends!!!","text":"<p> \u7ea6 44 \u4e2a\u5b57 </p> <p>Info</p> <p>\u4e00\u4e9b\u597d\u670b\u53cb\u4eec\u634f\uff01\u6b22\u8fce\u7559\u4e0b\u53cb\u94fe\u4ea4\u6362\uff01</p> <p> Isshiki\u4fee's Notebook \u4fee\u4f6c tql! </p> <p> Bowling's TechStack blgg \u6d47\u6d47 </p> <p> STDquantum's Blog \u795e\u5947\u7684\u5c0f\u7b11\uff01 </p> <p> Humble's Qzone \ud83d\ude0d\u5c0a\u5c0a\ud83d\ude0d </p>"},{"location":"bci/","title":"Brain-Computer Interface","text":"<p> \u7ea6 25 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u8fd9\u91cc\u7528\u6765\u5b58\u653e\u8111\u673a\u63a5\u53e3\u7684\u7b14\u8bb0\uff01</p>"},{"location":"bci/#_1","title":"\u6682\u505c\u4e2d","text":"<ul> <li>\u8111\u673a\u63a5\u53e3\u5bfc\u8bba</li> </ul>"},{"location":"bci/bciai/","title":"\u8111\u673a\u63a5\u53e3\u5bfc\u8bba","text":"<p> \u7ea6 172 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <ul> <li>\u4e66\u7c4d\u540d\u79f0\uff1a\u8111\u673a\u63a5\u53e3\u5bfc\u8bba</li> <li>\u4e66\u7c4d\u4fe1\u606f\uff1a<ul> <li>Rajesh P.N Rao \u8457\uff0c\u5f20\u8389 \u9648\u6c11\u94c0 \u8bd1</li> <li>\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e</li> <li>2016\u5e747\u6708\u7b2c1\u7248</li> </ul> </li> <li>\u5b66\u4e60\u65f6\u95f4\uff1a2023.08 - 2023.09</li> </ul> <p>\u4e00\u672c\u76f8\u5f53\u4e0d\u9519\u7684BCI\u5165\u95e8\u4e66\u7c4d\u3002</p> <p>\u6691\u671f\u5728\u5bfc\u5e08\u7684\u63a8\u8350\u4e0b\u5f00\u59cb\u9605\u8bfb\u8fd9\u672c\u4e66\uff0c\u4f46\u662f\u53d7\u9650\u4e8e\u65f6\u95f4\u7cbe\u529b\u7b49\u56e0\u7d20\uff0c\u76ee\u524d\u7684\u8bfb\u4e66\u7b14\u8bb0\u4ec5\u66f4\u65b0\u4e86\u8be5\u4e66\u7684\u7b2c\u4e00\u90e8\u5206\u300c\u80cc\u666f\u77e5\u8bc6\u300d\u3002</p> <p>\u540e\u7eed\u5185\u5bb9\u5c06\u7ee7\u7eed\u66f4\u65b0...</p> <ul> <li>\u4fe1\u53f7\u8bb0\u5f55\u4e0e\u523a\u6fc0\u5927\u8111\uff1a\u5bf9\u5e94\u4e66\u7c4d\u7b2c\u4e00\u90e8\u5206\u7b2c3\u7ae0</li> <li>\u4fe1\u53f7\u5904\u7406\uff1a\u5bf9\u5e94\u4e66\u7c4d\u7b2c\u4e00\u90e8\u5206\u7b2c4\u7ae0</li> <li>\u673a\u5668\u5b66\u4e60\uff1a\u5bf9\u5e94\u4e66\u7c4d\u7b2c\u4e00\u90e8\u5206\u7b2c5\u7ae0</li> </ul>"},{"location":"bci/bciai/ch3/","title":"\u4fe1\u53f7\u8bb0\u5f55\u4e0e\u523a\u6fc0\u5927\u8111","text":"<p> \u7ea6 2107 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"},{"location":"bci/bciai/ch3/#_2","title":"\u4fe1\u53f7\u8bb0\u5f55","text":""},{"location":"bci/bciai/ch3/#_3","title":"\u4fb5\u5165\u5f0f\u6280\u672f","text":"<p>\u4fb5\u5165\u5f0f\u6280\u672f\u7684\u5206\u7c7b</p> <ul> <li>\u57fa\u4e8e\u7535\u6781\uff1a<ul> <li>\u5355\u7535\u6781\u7ec6\u80de\u5916\u8bb0\u5f55</li> <li>\u591a\u7535\u6781\u9635\u5217\uff08MEA\uff09</li> <li>\u76ae\u8d28\u8111\u7535\u56fe\uff08ECoG\uff09</li> </ul> </li> <li>\u57fa\u4e8e\u5176\u4ed6\u6280\u672f\uff1a<ul> <li>\u7535\u538b\u654f\u611f\u71c3\u6599\u3001\u53cc\u5149\u5b50\u9499\u6210\u50cf</li> </ul> </li> </ul>"},{"location":"bci/bciai/ch3/#_4","title":"\u5355\u7535\u6781\u7ec6\u80de\u5916\u8bb0\u5f55","text":"<p>\u5355\u4e2a\u795e\u7ecf\u5143\u7684\u7ec6\u80de\u5916\u8bb0\u5f55\u662f\u4e00\u79cd\u6700\u5e38\u89c1\u7684\u4fb5\u5165\u5f0f\u6280\u672f\u3002\u5c06\u7aef\u90e8\u5c3a\u5bf8\u4e0d\u523010\u03bcm\u7684\u7531\u94a8\u6216\u8005\u94c2\u94f1\u5408\u91d1\u5236\u6210\u7684\u5fae\u7535\u6781\u63d2\u5165\u76ee\u6807\u8111\u533a\uff0c\u8c03\u6574\u63d2\u5165\u6df1\u5ea6\u76f4\u81f3\u8db3\u591f\u63a5\u8fd1\u5355\u4e2a\u795e\u7ecf\u5143\u7ec6\u80de\u4f53\uff0c\u4ee5\u91c7\u96c6\u7531\u7ec6\u80de\u52a8\u4f5c\u7535\u4f4d\u5f15\u8d77\u7684\u7535\u538b\u6ce2\u52a8\u3002</p> <p>\u7ec6\u80de\u5916\u8bb0\u5f55\u5230\u7684\u4fe1\u53f7\u5e45\u503c\u4e00\u822c\u4e0d\u52301mV\uff0c\u9700\u8981\u653e\u5927\u5668\u6765\u68c0\u6d4b\u4fe1\u53f7\u3002\u7535\u538b\u6ce2\u52a8\u4e0e\u52a8\u4f5c\u7535\u4f4d\u76f4\u63a5\u76f8\u5173\uff0c\u6240\u4ee5\u5373\u4f7f\u7535\u6781\u6ca1\u6709\u63d2\u5165\u7ec6\u80de\uff0c\u8bb0\u5f55\u7684\u4fe1\u53f7\u4e5f\u663e\u5f97\u548c\u52a8\u4f5c\u7535\u4f4d\u76f8\u5339\u914d\u3002</p> <p></p>"},{"location":"bci/bciai/ch3/#_5","title":"\u591a\u7535\u6781\u9635\u5217","text":"<p>\u591a\u7535\u6781\u9635\u5217\uff08MEA\uff09\u7531m\u00d7n\u4e2a\u5fae\u7535\u6781\u6392\u5217\u800c\u6210\uff0c\u5176\u4e2dm\u3001n\u7684\u53d6\u503c\u8303\u56f4\u901a\u5e38\u57281-10\u4e4b\u95f4\u3002\u591a\u7535\u6781\u9635\u5217\u57fa\u4e8e\u4e0e\u5355\u7535\u6781\u7ec6\u80de\u5916\u8bb0\u5f55\u76f8\u540c\u7684\u539f\u7406\u548c\u73b0\u8c61\u6765\u68c0\u6d4b\u52a8\u4f5c\u7535\u4f4d\u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u4e00\u4e9b\u7535\u6781\u4e0d\u80fd\u63d0\u4f9b\u53ef\u7528\u7684\u4fe1\u53f7\uff0c\u80fd\u591f\u540c\u65f6\u8bb0\u5f55\u7684\u795e\u7ecf\u5143\u6570\u91cf\u6bd4\u9635\u5217\u4e2d\u7535\u6781\u7684\u5b9e\u9645\u6570\u91cf\u5c1110%-50%\u3002</p> <ul> <li>\u4f18\u52bf\uff1a\u591a\u7535\u6781\u9635\u5217\u80fd\u540c\u65f6\u8bb0\u5f55\u51e0\u5341\u4e2a\u795e\u7ecf\u5143\u4ece\u800c\u63d0\u53d6\u590d\u6742\u7c7b\u578b\u7684\u4fe1\u606f\u3002</li> <li>\u5c40\u9650\uff1a\u591a\u7535\u6781\u9635\u5217\u8bb0\u5f55\u4fe1\u53f7\u7684\u8d28\u91cf\u4f1a\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u663e\u8457\u4e0b\u964d\uff0c\u690d\u5165\u8bbe\u5907\u957f\u671f\u5b58\u5728\u8111\u7ec4\u7ec7\u4e2d\uff0c\u5bb9\u6613\u5bfc\u81f4\u795e\u7ecf\u80f6\u8d28\u7ec6\u80de\u7b49\u975e\u795e\u7ecf\u5143\u7ec6\u80de\u5305\u88f9\u5e76\u5f62\u6210\u65e9\u671f\u75a4\u75d5\u7ec4\u7ec7\uff0c\u4ece\u800c\u5728\u9635\u5217\u5468\u56f4\u5f62\u6210\u7edd\u7f18\u62a4\u5957\u3002</li> </ul> <p>\u591a\u7535\u6781\u9635\u5217\u6700\u5e38\u89c1\u7684\u7c7b\u578b\u662f\u5fae\u4e1d\u3001\u7845\u57fa\u548c\u67d4\u6027\u9635\u5217\u3002</p> Michigan\u9635\u5217\u548cUtah\u9635\u5217 <ul> <li>Michigan\u9635\u5217\u5141\u8bb8\u6cbf\u7740\u6574\u4e2a\u7535\u6781\u8bb0\u5f55\u4fe1\u53f7\uff0c\u5728\u8bbe\u8ba1\u4e0a\u5141\u8bb8\u8f83\u9ad8\u7684\u81ea\u7531\u5ea6\u3002</li> <li>Utah\u9635\u5217\u4ec5\u7528\u7535\u6781\u7aef\u90e8\u8fdb\u884c\u8bb0\u5f55\uff0c\u6309\u7167\u8bbe\u5b9a\u7684\u5c3a\u5bf8\u548c\u53c2\u6570\u5236\u9020\uff0c\u753110\u00d710\u7684\u5bfc\u7535\u7845\u9488\u7ec4\u6210\u3002</li> </ul> \u67d4\u6027\u9635\u5217 <p>\u4f7f\u7528\u6750\u6599\u4e3a\u805a\u9170\u4e9a\u80fa\u3001\u805a\u5bf9\u4e8c\u7532\u82ef\u6216\u82ef\u5e76\u73af\u4e01\u70ef\u800c\u975e\u7845\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5339\u914d\u8111\u7ec4\u7ec7\u7684\u529b\u5b66\u6027\u80fd\uff0c\u964d\u4f4e\u9020\u6210\u526a\u5207\u8bf1\u5bfc\u708e\u75c7\u7684\u53ef\u80fd\u3002</p>"},{"location":"bci/bciai/ch3/#_6","title":"\u76ae\u8d28\u8111\u7535\u56fe","text":"<p>\u76ae\u8d28\u8111\u7535\u56fe\uff08ECoG\uff09\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u534a\u4fb5\u5165\u5f0f\u6280\u672f\uff0c\u7531\u76f4\u5f842-5mm\u3001\u7f51\u683c\u95f4\u8ddd10mm-1cm\u7684\u7535\u6781\u7ec4\u6210\u3002\u4e0e\u5355\u7535\u6781\u7ec6\u80de\u5916\u8bb0\u5f55\u548c\u591a\u7535\u6781\u9635\u5217\u4e0d\u540c\uff0cECoG\u7535\u6781\u8bb0\u5f55\u795e\u7ecf\u5143\u96c6\u7fa4\uff08\u51e0\u4e07\u4e2a\u795e\u7ecf\u5143\uff09\u4e00\u81f4\u6027\u6d3b\u52a8\u5f15\u8d77\u7684\u7535\u4f4d\u6ce2\u52a8\u3002</p> <p>\u7814\u7a76\u8005\u4eec\u4f7f\u7528\u5fae\u76ae\u8d28\u8111\u7535\u56fe\uff08microECoG\uff09\u6765\u6539\u5584ECoG\u9700\u8981\u8f83\u5927\u5c3a\u5bf8\u7535\u6781\uff08\u76f4\u5f84\u51e0\u6beb\u7c73\uff09\u7684\u7f3a\u70b9\uff0c\u8fd9\u79cd\u5fae\u7535\u6781\u76f4\u5f84\u4ec5\u6709\u96f6\u70b9\u51e0\u6beb\u7c73\uff0c\u7f51\u683c\u95f4\u8ddd\u4ec52-3\u6beb\u7c73\uff0c\u6bd4\u4f20\u7edf\u7684ECoG\u5177\u6709\u66f4\u9ad8\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u3002</p>"},{"location":"bci/bciai/ch3/#_7","title":"\u5176\u4ed6\u6280\u672f","text":"<ul> <li>\u7535\u538b\u654f\u611f\u6750\u6599\uff1a \u67d3\u6599\u901a\u8fc7\u6539\u53d8\u5176\u5438\u6536\u7387\u548c\u8367\u5149\u6765\u53cd\u6620\u7ec6\u80de\u819c\u7535\u4f4d\u53d8\u5316\uff0c\u4ece\u800c\u5c06\u67d3\u4e0a\u7535\u538b\u654f\u611f\u67d3\u6599\u7684\u795e\u7ecf\u5143\u7684\u7535\u6d3b\u52a8\u6210\u50cf\u3002</li> <li>\u53cc\u5149\u5b50\u9499\u6210\u50cf\uff1a \u57fa\u4e8e\u795e\u7ecf\u5143\u4e2d\u7535\u6d3b\u52a8\u901a\u5e38\u4e0e\u9499\u6d53\u5ea6\u53d8\u5316\u76f8\u5173\u7684\u4e8b\u5b9e\uff0c\u901a\u8fc7\u5bf9\u7535\u538b\u53d8\u5316\u5f15\u8d77\u7684\u9499\u79bb\u5b50\u6d3b\u52a8\u8fdb\u884c\u6210\u50cf\uff08\u7ea2\u5916\u6fc0\u5149\u626b\u63cf\u7cfb\u7edf\uff09\uff0c\u6765\u89c2\u5bdf\u5355\u4e2a\u795e\u7ecf\u5143\u7684\u7535\u6d3b\u52a8\u3002</li> </ul>"},{"location":"bci/bciai/ch3/#_8","title":"\u975e\u4fb5\u5165\u5f0f\u6280\u672f","text":"<p>\u975e\u4fb5\u5165\u5f0f\u6280\u672f\u7684\u5206\u7c7b</p> <ul> <li>\u76f4\u63a5\u6d4b\u91cf\uff08\u53cd\u6620\u795e\u7ecf\u5143\u6d3b\u52a8\uff09\uff1a<ul> <li>\u8111\u7535\u56fe\uff08EEG\uff09</li> <li>\u8111\u78c1\u56fe\uff08MEG\uff09</li> </ul> </li> <li>\u95f4\u63a5\u6d4b\u91cf\uff08\u53cd\u6620\u4ee3\u8c22\u6d3b\u52a8\uff09\uff1a<ul> <li>\u529f\u80fd\u6027\u78c1\u5171\u632f\u6210\u50cf\uff08fMRI\uff09</li> <li>\u529f\u80fd\u6027\u8fd1\u7ea2\u5916\u6210\u50cf\uff08fNRI\uff09</li> <li>\u6b63\u7535\u5b50\u53d1\u5c04\u65ad\u5c42\u6210\u50cf\uff08PET\uff09</li> </ul> </li> </ul>"},{"location":"bci/bciai/ch3/#_9","title":"\u8111\u7535\u56fe","text":"<p>\u8111\u7535\u56fe\uff08EEG\uff09\u662f\u4e00\u79cd\u6d41\u884c\u7684\u975e\u4fb5\u5165\u5f0f\u6280\u672f\uff0c\u901a\u8fc7\u653e\u7f6e\u5728\u5934\u76ae\u4e0a\u7684\u7535\u6781\u6765\u8bb0\u5f55\u5927\u8111\u4fe1\u53f7\u3002EEG\u4e3b\u8981\u91c7\u96c6\u5927\u8111\u76ae\u8d28\u4e2d\u7684\u7535\u6d3b\u52a8\uff0c\u5176\u4fe1\u53f7\u53cd\u6620\u4e86\u653e\u5c04\u72b6\u7684\u9762\u5411\u5934\u76ae\u7684\u4e0a\u5343\u4e2a\u795e\u7ecf\u5143\u4ea7\u751f\u7684\u7a81\u89e6\u540e\u7535\u4f4d\u7684\u603b\u548c\u3002EEG\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u8f83\u5dee\uff08\u57281cm\u00b2\u8303\u56f4\u5185\uff09\uff0c\u4f46\u65f6\u95f4\u5206\u8fa8\u7387\u8f83\u597d\uff08\u5728\u6beb\u79d2\u8303\u56f4\u5185\uff09\u3002</p> <p>EEG\u975e\u5e38\u9002\u5408\u6355\u6349\u5177\u6709\u7279\u5f81\u9891\u7387\u8303\u56f4\u548c\u7a7a\u95f4\u5206\u5e03\u7684\u201c\u8111\u7535\u6ce2\u201d\uff08\u4f8b\u5982\u7531\u795e\u7ecf\u5143\u96c6\u7fa4\u7684\u540c\u6b65\u6d3b\u52a8\u4ea7\u751f\uff09\uff0c\u5b83\u4eec\u5f80\u5f80\u4e0e\u5927\u8111\u7684\u4e0d\u540c\u529f\u80fd\u72b6\u6001\u76f8\u5bf9\u5e94\u3002</p> \u8111\u7535\u56fe\u7684\u5178\u578b\u5b9e\u9a8c\u8bbe\u7f6e <p>\u5728\u5178\u578b\u7684\u5b9e\u9a8c\u8bbe\u7f6e\u4e2d\uff0c\u6bcf\u4e2aEEG\u7535\u6781\u4e0e\u4e00\u4e2a\u5dee\u5206\u653e\u5927\u5668\u7684\u8f93\u5165\u76f8\u8fde\uff0c\u5176\u4ed6\u8f93\u5165\u4e0e\u53c2\u8003\u7535\u6781\uff08\u4f8b\u5982\u9f3b\u6839\u6216\u8005\u8fde\u63a5\u7684\u4e73\u7a81\uff09\u76f8\u8fde\uff0c\u4e3b\u52a8\u7535\u6781\u548c\u53c2\u8003\u7535\u6781\u4e4b\u95f4\u7684\u7535\u538b\u653e\u5927\u500d\u6570\u4e00\u822c\u4e3a1000-100000\u500d\u3002\u653e\u5927\u540e\u7684\u4fe1\u53f7\u7ecf\u8fc7\u4e00\u4e2a\u6297\u6df7\u53e0\u6ee4\u6ce2\u5668\u540e\uff0c\u518d\u7531A/D\u8f6c\u6362\u5668\u8fdb\u884c\u6570\u5b57\u5316\u5904\u7406\u3002\u6839\u636e\u5e94\u7528\u7684\u9700\u8981\uff0cA/D\u8f6c\u6362\u5668\u7684\u91c7\u6837\u9891\u7387\u6700\u9ad8\u53ef\u8fbe20kHz\uff08BCI\u5e94\u7528\u4e2d\u7684\u5178\u578b\u91c7\u6837\u9891\u7387\u5728256Hz-1kHz\uff09\u3002\u6570\u5b57\u5316\u540e\uff0cEEG\u4fe1\u53f7\u53ef\u4ee5\u518d\u7531\u4e00\u4e2a1-50Hz\u7684\u5e26\u901a\u6ee4\u6ce2\u5668\u5904\u7406\uff0c\u4ece\u800c\u53bb\u9664\u4fe1\u53f7\u4e2d\u5305\u542b\u5728\u975e\u5e38\u4f4e\u548c\u975e\u5e38\u9ad8\u9891\u7387\u8303\u56f4\u5185\u7684\u566a\u58f0\u548c\u52a8\u4f5c\u4f2a\u8ff9\u3002\u901a\u5e38\u518d\u7528\u4e00\u4e2a\u9677\u6ce2\u6ee4\u6ce2\u5668\u53bb\u9664\u4f9b\u7535\u7535\u6e90\uff08\u7f8e\u56fd\u4e3a60Hz\uff09\u6240\u5e26\u6765\u7684\u7684\u566a\u58f0\u3002</p> <p>\u8111\u78c1\u56fe\uff08MEG\uff09\u6bd4EEG\u6709\u66f4\u597d\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\uff0c\u4e14\u4e0e\u5934\u90e8\u7684\u51e0\u4f55\u7ed3\u6784\u65e0\u5173\uff1b\u4f46\u662fMEG\u4e5f\u66f4\u52a0\u6602\u8d35\u3001\u5e9e\u5927\u3001\u4e0d\u4fbf\u643a\uff0c\u4e14\u9700\u8981\u7535\u78c1\u5c4f\u853d\u5ba4\u3002</p>"},{"location":"bci/bciai/ch3/#_10","title":"\u95f4\u63a5\u6d4b\u91cf","text":"<p>\u529f\u80fd\u6027\u78c1\u5171\u632f\u6210\u50cf\uff08fMRI\uff09\u548c\u529f\u80fd\u6027\u8fd1\u7ea2\u5916\u6210\u50cf\uff08fNRI\uff09\u90fd\u662f\u901a\u8fc7\u68c0\u6d4b\u5728\u6267\u884c\u5177\u4f53\u4efb\u52a1\u65f6\u7279\u5b9a\u8111\u533a\u4e2d\u7531\u4e8e\u795e\u7ecf\u5143\u6d3b\u52a8\u589e\u5f3a\u800c\u4ea7\u751f\u7684\u8840\u6d41\u91cf\u53d8\u5316\uff08\u8840\u6c27\u6c34\u5e73\u53d8\u5316\uff09\uff09\u6765\u95f4\u63a5\u6d4b\u91cf\u795e\u7ecf\u5143\u6d3b\u52a8\u3002fMRI\u3001fNRI\u4e0eEEG\u3001MEG\u76f8\u6bd4\uff0c\u5177\u6709\u66f4\u597d\u5730\u7a7a\u95f4\u5206\u8fa8\u7387\uff0c\u4f46\u662f\u65f6\u95f4\u5206\u8fa8\u7387\u8f83\u5dee\u3002</p> More about fMRI &amp; fNRI <ul> <li>fMRI\u57fa\u4e8e\u53bb\u6c27\u5408\u8840\u7ea2\u86cb\u767d\u6bd4\u6c27\u5408\u8840\u7ea2\u86cb\u767d\u66f4\u6709\u78c1\u6027\u8fd9\u4e00\u4e8b\u5b9e\uff0c\u80fd\u591f\u5bf9\u5927\u8111\u6df1\u5ea6\u533a\u57df\u8fdb\u884c\u6210\u50cf\uff0c\u53d7\u8bd5\u8005\u9700\u8981\u8eba\u5728MR\u626b\u63cf\u5668\u4e2d\u3002</li> <li>fNRI\u57fa\u4e8e\u6709\u6c27\u6216\u65e0\u6c27\u65f6\u8840\u7ea2\u86cb\u767d\u5bf9\u8fd1\u7ea2\u5916\u5149\u5438\u6536\u7387\u4e0d\u540c\u8fd9\u4e00\u4e8b\u5b9e\uff0c\u53ea\u80fd\u68c0\u6d4b\u9760\u8fd1\u9885\u9aa8\u7684\u795e\u7ecf\u5143\u6d3b\u52a8\uff0c\u53d7\u8bd5\u8005\u884c\u52a8\u4e0d\u53d7\u9650\u5236\uff0c\u4e0d\u6613\u53d7\u808c\u7535\u4f2a\u8ff9\u7684\u5f71\u54cd\uff08\u56e0\u4e3afNRI\u662f\u5149\u5b66\u6d4b\u91cf\u800c\u975e\u7535\u78c1\u6d4b\u91cf\uff09\u3002</li> </ul> <p>\u6b63\u7535\u5b50\u53d1\u5c04\u65ad\u5c42\u6210\u50cf\uff08PET\uff09\u662f\u4e00\u79cd\u6bd4\u8f83\u8001\u7684\u6280\u672f\u3002PET\u68c0\u6d4b\u5e26\u653e\u5c04\u6027\u6807\u8bb0\u548c\u4ee3\u8c22\u6d3b\u8dc3\u7684\u5316\u5408\u7269\uff08\u901a\u8fc7\u6ce8\u5c04\u5230\u8840\u6db2\u4e2d\u4f20\u9001\u5230\u5927\u8111\uff09\u7684\u653e\u5c04\u91cf\u3002</p>"},{"location":"bci/bciai/ch3/#_11","title":"\u523a\u6fc0\u5927\u8111","text":""},{"location":"bci/bciai/ch3/#_12","title":"\u4fb5\u5165\u5f0f\u6280\u672f","text":"<ul> <li>\u5fae\u7535\u6781\uff1a \u795e\u7ecf\u5143\u7535\u523a\u6fc0\u6240\u91c7\u7528\u7684\u7535\u6781\u4e0e\u795e\u7ecf\u5143\u4fe1\u53f7\u8bb0\u5f55\u7684\u7535\u6781\u76f8\u540c\u3002</li> <li>\u76f4\u63a5\u76ae\u8d28\u7535\u523a\u6fc0\uff08DCES\uff09\uff1a \u534a\u4fb5\u5165\u5f0f\u7684\u5927\u8111\u523a\u6fc0\u65b9\u5f0f\u91c7\u7528ECoG\u4e2d\u5728\u76ae\u8d28\u8868\u9762\u4f7f\u7528\u7684\u7535\u6781\u3002 \u4e34\u5e8a\u4e2dDCES\u5e38\u7528\u4e8e\u786e\u5b9a\u795e\u7ecf\u5916\u79d1\u75c5\u4eba\u5927\u8111\u4e2d\u7684\u611f\u77e5\u3001\u8fd0\u52a8\u3001\u8bb0\u5fc6\u548c\u8bed\u8a00\u529f\u80fd\u6240\u5bf9\u5e94\u7684\u8111\u533a\uff0c\u5176\u5728BCI\u4e2d\u63d0\u4f9b\u76f4\u63a5\u53cd\u9988\u7684\u53ef\u80fd\u6027\u6709\u5f85\u8ba8\u8bba\u3002</li> <li>\u5149\u523a\u6fc0\uff1a<ul> <li>\u53cc\u5149\u5b50\u6fc0\u5149\u7167\u5c04\uff1a \u7cbe\u786e\u805a\u7126\u7684\u6fc0\u5149\u7167\u5c04\u80fd\u4f7f\u7279\u5b9a\u5355\u795e\u7ecf\u5143\u5174\u594b\uff08\u673a\u7406\u5c1a\u4e0d\u660e\u786e\uff09\u3002</li> <li>\u5149\u611f\u57fa\u56e0\u523a\u6fc0\uff1a \u501f\u52a9\u57fa\u56e0\u64cd\u4f5c\u4ec5\u4f7f\u67d0\u4e9b\u795e\u7ecf\u5143\u76f8\u5e94\u7167\u5c04\u3002\u5149\u9057\u4f20\u5b66\u662f\u4e00\u79cd\u6709\u524d\u666f\u7684\u65b0\u5174\u6280\u672f\uff0c\u4f46\u5176\u5728BCI\u4e2d\u7684\u5e94\u7528\u6709\u5f85\u66f4\u6df1\u5165\u7684\u7814\u7a76\uff0c\u76ee\u524d\u5c40\u9650\u4e8e\u79bb\u4f53\u5b9e\u9a8c\u3002</li> </ul> </li> </ul>"},{"location":"bci/bciai/ch3/#_13","title":"\u975e\u4fb5\u5165\u5f0f\u6280\u672f","text":"<ul> <li>\u7ecf\u9885\u78c1\u523a\u6fc0\uff08TMS\uff09\uff1a \u4f9d\u8d56\u4e8e\u7535\u78c1\u611f\u5e94\u539f\u7406\uff0c\u53ea\u9002\u7528\u4e8e\u6fc0\u6d3b\u5927\u8111\u8868\u5c42\u7684\u795e\u7ecf\u5143\u3002</li> <li>\u7ecf\u9885\u8d85\u58f0\uff1a \u4f4e\u5f3a\u5ea6\u7684\u8109\u51b2\u8d85\u58f0\u4e5f\u80fd\u5f71\u54cd\u795e\u7ecf\u6d3b\u52a8\uff08\u673a\u7406\u5c1a\u4e0d\u660e\u786e\uff09\uff0c\u5374\u4e0d\u53d1\u751f\u70ed\u6548\u5e94\u6216\u7ec4\u7ec7\u635f\u4f24\uff08\u9ad8\u5f3a\u5ea6\u7684\u4f1a\u53d1\u751f\uff09\u3002 \u8109\u51b2\u8d85\u58f0\u6ce2\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u4f18\u4e8eTMS\uff0c\u5176\u80fd\u5426\u5728BCI\u4e2d\u4e3a\u7279\u5b9a\u8111\u533a\u63d0\u4f9b\u9488\u5bf9\u6027\u53cd\u9988\u6709\u5f85\u7814\u7a76\u3002</li> </ul>"},{"location":"bci/bciai/ch3/#_14","title":"\u540c\u6b65\u8bb0\u5f55\u548c\u523a\u6fc0","text":"<ul> <li>\u591a\u7535\u6781\u9635\u5217\uff1a \u5728\u591a\u7535\u6781\u9635\u5217\u4e2d\uff0c\u4e00\u4e9b\u7535\u6781\u53ef\u7528\u4e8e\u8bb0\u5f55\uff0c\u5176\u4ed6\u7535\u6781\u53ef\u7528\u4e8e\u523a\u6fc0\u3002</li> <li>\u795e\u7ecf\u82af\u7247\uff1a \u4e00\u79cd\u72ec\u7acb\u7684\u88c5\u7f6e\uff0c\u5141\u8bb8\u586b\u5165\u82af\u7247\u540e\u7684\u53d7\u8bd5\u8005\u81ea\u7531\u8d70\u52a8\u4ee5\u53ca\u8fdb\u884c\u6b63\u5e38\u6d3b\u52a8\u3002</li> </ul>"},{"location":"bci/bciai/ch3/#_15","title":"\u5c0f\u7ed3","text":"<p>\u540e\u7eed\u7ae0\u8282\u4e2d\u5c06\u66f4\u8be6\u7ec6\u5730\u63a2\u8ba8\u8fd9\u4e9b\u6280\u672f\u5728BCI\u4e2d\u7684\u5e94\u7528\u3002</p>"},{"location":"bci/bciai/ch4/","title":"\u4fe1\u53f7\u5904\u7406","text":"<p> \u7ea6 2558 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>\u6458\u8981</p> <p>\u65e0\u8bba\u662f\u91c7\u7528\u4fb5\u5165\u5f0f\u8fd8\u662f\u975e\u4fb5\u5165\u5f0f\u6280\u672f\u8bb0\u5f55\u5230\u7684\u5927\u8111\u4fe1\u53f7\uff0c\u4e00\u822c\u90fd\u4f1a\u542b\u6709\u591a\u79cd\u566a\u58f0\u6216\u8005\u6765\u81ea\u591a\u4e2a\u795e\u7ecf\u5143\u7684\u6df7\u5408\u4fe1\u53f7\uff0c\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4ece\u539f\u59cb\u4fe1\u53f7\u4e2d\u63d0\u53d6\u6709\u7528\u4fe1\u53f7\u7684\u5e38\u7528\u65b9\u6cd5\u3002</p> <ul> <li>\u5bf9\u4e8e\u4fb5\u5165\u5f0f\u6280\u672f\uff0c\u950b\u7535\u4f4d\u5206\u7c7b\u5c06\u5355\u4e2a\u795e\u7ecf\u5143\u4ea7\u751f\u7684\u950b\u7535\u4f4d\u4ece\u6df7\u5408\u4fe1\u53f7\u4e2d\u63d0\u53d6\u51fa\u6765\uff1b</li> <li>\u5bf9\u4e8e\u975e\u4fb5\u5165\u5f0f\u6280\u672f\uff0c\u6709\u591a\u79cd\u7279\u5f81\u63d0\u53d6\u6280\u672f\u53ef\u7528\uff0c\u8fd9\u4e9b\u57fa\u4e8e\u9891\u57df\u3001\u65f6\u57df\u6216\u5c0f\u6ce2\u5206\u6790\u7684\u6280\u672f\u53ef\u4e0e\u7a7a\u95f4\u6ee4\u6ce2\u6280\u672f\u76f8\u7ed3\u5408\uff0c\u4ee5\u5b9e\u73b0\u964d\u7ef4\uff08PCA\uff09\u3001\u4ece\u6df7\u5408\u4fe1\u53f7\u4e2d\u5206\u79bb\u51fa\u6e90\u4fe1\u53f7\uff08ICA\uff09\u6216\u589e\u52a0\u8f93\u51fa\u7684\u4e0d\u540c\u7c7b\u522b\u4fe1\u53f7\u7684\u53ef\u533a\u5206\u5ea6\uff08CSP\uff09\uff1b</li> <li>\u5176\u4e2d\u90e8\u5206\u6280\u672f\u8fd8\u80fd\u7528\u4e8e\u53bb\u9664\u6e90\u4e8e\u5927\u8111\u5916\u90e8\u7684\u4f2a\u8ff9\uff1b</li> </ul> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u6ca1\u6709\u4e00\u79cd\u6700\u4f73\u6280\u672f\u666e\u9002\u4e8e\u6240\u6709BCI\u5e94\u7528\uff0c\u9700\u8981\u6839\u636e\u7279\u5b9a\u7684BCI\u8303\u5f0f\u548c\u4efb\u52a1\u7c7b\u578b\u6765\u9009\u62e9\u3002</p>"},{"location":"bci/bciai/ch4/#_2","title":"\u950b\u7535\u4f4d\u5206\u7c7b","text":"<p>\u7528\u4e8eBCI\u7684\u4fb5\u5165\u5f0f\u6280\u672f\u901a\u5e38\u4f9d\u8d56\u4e8e\u7531\u5fae\u7535\u6781\u9635\u5217\u8bb0\u5f55\u5230\u7684\u950b\u7535\u4f4d\uff0c\u8fd9\u4e9b\u4fe1\u53f7\u901a\u5e38\u662f\u7535\u6781\u9644\u8fd1\u6570\u4e2a\u795e\u7ecf\u5143\u6240\u4ea7\u751f\u7684\u795e\u7ecf\u6df7\u5408\u4fe1\u53f7\u3002\u4f20\u7edf\u7684BCI\u8f93\u5165\u4fe1\u53f7\u5f62\u5f0f\u671f\u671b\u662f\u6765\u81ea\u5355\u4e2a\u795e\u7ecf\u5143\u7684\u950b\u7535\u4f4d\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7\u950b\u7535\u4f4d\u5206\u7c7b\u5c06\u5355\u4e2a\u795e\u7ecf\u5143\u4ea7\u751f\u7684\u950b\u7535\u4f4d\u4ece\u6df7\u5408\u4fe1\u53f7\u4e2d\u63d0\u53d6\u51fa\u6765\u3002</p> <p>\u950b\u7535\u4f4d\u5206\u7c7b\u5177\u6709\u4ee5\u4e0b\u51e0\u79cd\u5e38\u7528\u65b9\u6cd5\uff1a</p> <ul> <li>\u4f9d\u636e\u5e45\u503c\u5e45\u5ea6\u7684\u5206\u7c7b</li> <li>\u7a97\u578b\u9274\u522b\u5668\uff08\u4eba\u5de5\uff09</li> <li>\u81ea\u52a8\u5f52\u7c7b\uff08\u6700\u65b0\u7684\u8d8b\u52bf\uff09\uff0c\u4f9d\u636e\u950b\u7535\u4f4d\u6ce2\u5f62\u7684\u7279\u5f81\uff08\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\uff1a\u5c0f\u6ce2\u5206\u6790\u3001\u4e3b\u6210\u5206\u5206\u6790\u7b49\uff09</li> </ul>"},{"location":"bci/bciai/ch4/#_3","title":"\u9891\u57df\u5206\u6790","text":"<p>\u8bf8\u5982EEG\u7684\u975e\u4fb5\u5165\u5f0f\u6280\u672f\u57fa\u4e8e\u80fd\u53cd\u6620\u6570\u5343\u4e2a\u795e\u7ecf\u5143\u6d3b\u52a8\u7684\u4fe1\u53f7\uff0c\u8fd9\u4e9b\u4fe1\u53f7\u80fd\u6355\u6349\u5177\u6709\u7279\u5b9a\u9891\u7387\u8303\u56f4\u7684\u201c\u8111\u7535\u6ce2\u201d\uff0c\u56e0\u6b64\u5bf9\u4fe1\u53f7\u8fdb\u884c\u9891\u57df\u5206\u6790\u7279\u522b\u6709\u7528\u3002</p>"},{"location":"bci/bciai/ch4/#_4","title":"\u5085\u91cc\u53f6\u5206\u6790","text":"<p>\u5085\u91cc\u53f6\u5206\u6790\u7684\u57fa\u672c\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u4fe1\u53f7\u5206\u89e3\u4e3a\u4e0d\u540c\u9891\u7387\u7684\u6b63\u5f26\u548c\u4f59\u5f26\u6ce2\u7684\u52a0\u6743\u548c\uff0c\u5e45\u503c $a_n$ \u548c $b_n$ \u80fd\u7531\u8f93\u5165\u4fe1\u53f7\u8ba1\u7b97\u5f97\u5230\u3002\u4fe1\u53f7\u5206\u89e3\u4f7f\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u57fa\u4e8e\u9891\u7387\u7684\u591a\u79cd\u7c7b\u578b\u7684\u6ee4\u6ce2\u5904\u7406\u3002</p> \u65f6\u57df\u4fe1\u53f7 $s(t)$ \u7684\u5085\u91cc\u53f6\u7ea7\u6570\u5c55\u5f00 <p>$$ s(t) = \\frac{a_0}{2} + \\sum_{n=1}^\\infty a_0 cos(2\\pi nft) + \\sum_{n=1}^\\infty b_0 sin(2\\pi nft) $$</p> <p>$$ a_n = \\frac{2}{T} \\int_{-T/2}^{T/2} {s(t) cos(2\\pi nft) dt} $$</p> <p>$$ b_n = \\frac{2}{T} \\int_{-T/2}^{T/2} {s(t) sin(2\\pi nft) dt} $$</p> <p>$$ \\frac{a_0}{2} = \\frac{1}{T} \\int_{-T/2}^{T/2} {s(t) dt} $$</p> \u590d\u6570\u5f62\u5f0f\u7684\u5085\u91cc\u53f6\u53d8\u6362\u53ca\u53cd\u53d8\u6362 <p>$$ c_n =  \\begin{cases} \\frac{a_n - j b_n}{2} &amp; n &gt; 0 \\cr \\frac{a_0}{2} &amp; n = 0 \\cr \\frac{a_n + j b_n}{2} &amp; n &lt; 0 \\end{cases} $$</p> <p>$$ c_n = \\frac{1}{T} \\int_{-T/2}^{T/2} {s(t) e^{-jn\\omega t} dt} $$</p> <p>$$ s(t) = \\sum_{n = -\\infty}^{+\\infty} c_n e^{-jn\\omega t} $$</p>"},{"location":"bci/bciai/ch4/#_5","title":"\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362","text":"<p>BCI\u5e94\u7528\u4e2d\uff0c\u901a\u5e38\u662f\u5728\u79bb\u6563\u65f6\u95f4\u95f4\u9694\u5bf9\u5927\u8111\u4fe1\u53f7\u8fdb\u884c\u91c7\u6837\uff0c\u76f8\u5e94\u7684\u53ef\u4ee5\u4f7f\u7528\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\uff08DFT\uff09\u3002</p> <p>\u8bb8\u591aBCI\u7cfb\u7edf\u4ece\u4e00\u6bb5\u65f6\u95f4\u95f4\u9694\u5185\u5927\u8111\u4fe1\u53f7\u7684\u529f\u7387\u8c31\u4e2d\u63d0\u53d6\u7279\u5f81\uff0c\u8ba1\u7b97\u4fe1\u53f7\u7684\u529f\u7387\u8c31 $P(n)$ \u5373\u8ba1\u7b97\u4fe1\u53f7\u5e45\u503c\u7684\u5e73\u65b9\u3002</p> \u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\u53ca\u529f\u7387\u8c31 <p>$$ C(n) = \\frac{1}{T} \\sum_{t=0}^{T-1} S(t) e^{-jn\\omega t} \\quad n = 0,\\cdots,T-1 $$</p> <p>$$ P(n) = Re(C(n)^2) + Im(C(n)^2) $$</p>"},{"location":"bci/bciai/ch4/#_6","title":"\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362","text":"<p>DFT\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(T^2)$ \uff0c\u5f53\u6570\u636e\u91cf\u8f83\u5927\u65f6\u8fd0\u7b97\u901f\u5ea6\u5f88\u4e0d\u7406\u60f3\u3002\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\uff08FFT\uff09\u662f\u8ba1\u7b97DFT\u7684\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(T\\log T)$ \u3002</p> <p>\u6700\u901a\u7528\u7684FFT\u7b97\u6cd5\u662f<code>Cooley-Tukey FFT\u7b97\u6cd5</code>\uff0c\u91c7\u7528\u4e86\u201c\u5206\u800c\u6cbb\u4e4b\u201d\u7684\u7b56\u7565\uff0c\u7528\u9012\u5f52\u7684\u65b9\u6cd5\u5c06\u4e00\u4e2aDFT\u5206\u6210\u8bb8\u591a\u66f4\u5c0f\u578b\u7684DFT\u3002</p> <p>FFT\u662f\u5c06\u65f6\u53d8\u4fe1\u53f7\u53d8\u6362\u5230\u9891\u57df\u7684\u6700\u5e38\u7528\u65b9\u6cd5\u3002</p>"},{"location":"bci/bciai/ch4/#_7","title":"\u5c0f\u6ce2\u5206\u6790","text":"<p>\u81ea\u7136\u754c\u7684\u4fe1\u53f7\u51e0\u4e4e\u90fd\u662f\u975e\u5e73\u7a33\u7684\uff0c\u4f46\u662f\u5085\u91cc\u53f6\u53d8\u6362\u5904\u7406\u975e\u5e73\u7a33\u4fe1\u53f7\u65f6\u6548\u679c\u8f83\u5dee\uff0c\u5b83\u53ea\u80fd\u83b7\u53d6\u4fe1\u53f7\u603b\u4f53\u4e0a\u5305\u542b\u54ea\u4e9b\u9891\u7387\u7684\u6210\u5206\uff0c\u4f46\u662f\u5bf9\u5404\u6210\u5206\u51fa\u73b0\u7684\u65f6\u523b\u5e76\u65e0\u6240\u77e5\u3002</p> \u65f6\u9891\u76f8\u5dee\u5f88\u5927\u7684\u4e24\u4e2a\u4fe1\u53f7\uff0c\u53ef\u80fd\u62e5\u6709\u4e00\u6837\u7684\u5085\u91cc\u53f6\u9891\u8c31\u56fe <p></p> <p>\u4e00\u79cd\u7b80\u5355\u53ef\u884c\u7684\u4f18\u5316\u65b9\u6cd5\u662f\u52a0\u7a97\uff0c\u5728\u77ed\u65f6\u7a97\u5185\uff08\u8fd1\u4f3c\u5e73\u7a33\uff09\u8fdb\u884c\u5085\u91cc\u53f6\u5206\u6790\uff0c\u8fd9\u5c31\u662f\u77ed\u65f6\u5085\u91cc\u53f6\u5206\u6790\uff08STFT\uff09\u3002\u4f46\u662fSTFT\u5728\u9009\u62e9\u7a97\u53e3\u5bbd\u5ea6\u65f6\u5f88\u96be\u534f\u8c03\u65f6\u95f4\u5206\u8fa8\u7387\u548c\u9891\u7387\u5206\u8fa8\u7387\u4e4b\u95f4\u7684\u77db\u76fe\u3002</p> <p>\u5c0f\u6ce2\u53d8\u6362\uff08WT\uff09\u53ef\u4ee5\u66f4\u597d\u5730\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>\u5c0f\u6ce2\u53d8\u6362\u7684\u57fa\u51fd\u6570\u4e0d\u518d\u662f\u6b63\u5f26\u548c\u4f59\u5f26\u51fd\u6570\uff0c\u800c\u662f\u6709\u9650\u957f\u7684\u4f1a\u8870\u51cf\u7684\u5c0f\u6ce2\u57fa\u3002\u5c0f\u6ce2\u51fd\u6570\u7531\u4e00\u4e2a\u6bcd\u5c0f\u6ce2\u901a\u8fc7\u4f38\u7f29\u548c\u5e73\u79fb\u5f97\u5230\u3002\u5c3a\u5ea6 $\\alpha$ \u63a7\u5236\u5c0f\u6ce2\u51fd\u6570\u7684\u4f38\u7f29\uff0c\u5e73\u79fb\u91cf $\\tau$ \u63a7\u5236\u5c0f\u6ce2\u51fd\u6570\u7684\u5e73\u79fb\uff0c\u5c3a\u5ea6\u5bf9\u5e94\u9891\u7387\uff0c\u5e73\u79fb\u91cf\u5bf9\u5e94\u65f6\u95f4\u3002</p> <p>$$ WT(\\alpha, \\tau) = \\frac{1}{\\sqrt[]{\\alpha}} \\int_{-\\infty}^{+\\infty} {f(t) \\times \\psi(\\frac{t-\\tau}{\\alpha}) dt} $$</p> <p>\u5c0f\u6ce2\u5206\u6790\u4fe1\u53f7\u5904\u7406\u4e0d\u4ec5\u53ef\u4ee5\u77e5\u9053\u4fe1\u53f7\u7531\u600e\u6837\u9891\u7387\u7684\u6210\u5206\uff0c\u800c\u4e14\u77e5\u9053\u5176\u5728\u65f6\u57df\u4e0a\u5bf9\u5e94\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u5085\u91cc\u53f6\u53d8\u6362\u53ea\u80fd\u5f97\u5230\u4e00\u4e2a\u9891\u8c31\uff0c\u800c\u5c0f\u6ce2\u53d8\u6362\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65f6\u9891\u8c31\u3002</p> <p></p> <p>\u6b64\u5916\uff0c\u5c0f\u6ce2\u53d8\u6362\u5728\u5904\u7406\u7a81\u53d8\u4fe1\u53f7\u65f6\u4e5f\u4f18\u4e8e\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u56e0\u4e3a\u5085\u91cc\u53f6\u53d8\u6362\u5b58\u5728\u5409\u5e03\u65af\u6548\u5e94\uff0c\u5bf9\u7a81\u53d8\u4fe1\u53f7\u7684\u62df\u5408\u6548\u679c\u4e0d\u591f\u7406\u60f3\u3002</p> <p>\u4f46\u662f\uff0c\u5c0f\u6ce2\u5206\u6790\u7684\u96be\u70b9\u5728\u4e8e\u5bfb\u627e\u6bcd\u5c0f\u6ce2\uff08\u5c3a\u5ea6\u51fd\u6570\uff09\uff0c\u8fd9\u662f\u6784\u9020\u5c0f\u6ce2\u53d8\u6362\u7684\u5173\u952e\u6240\u5728\u3002</p>"},{"location":"bci/bciai/ch4/#_8","title":"\u65f6\u57df\u5206\u6790","text":""},{"location":"bci/bciai/ch4/#hjorth","title":"Hjorth\u53c2\u6570","text":"<p>Hjorth\u53c2\u6570\u5bf9\u4e8e\u8ba1\u7b97\u65f6\u53d8\u4fe1\u53f7\u7684\u4e09\u4e2a\u91cd\u8981\u7279\u5f81\u63d0\u4f9b\u4e86\u4e00\u79cd\u5feb\u901f\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e09\u4e2a\u7279\u5f81\u4e3a\uff1a\u5e73\u5747\u529f\u7387\u3001\u5747\u65b9\u6839\u9891\u7387\u4ee5\u53ca\u5747\u65b9\u6839\u9891\u7387\u5c55\u5f00\u3002</p> \u4e09\u4e2aHjorth\u53c2\u6570 <p>$$ A = a_0 $$</p> <p>$$ M = \\sqrt[]{\\frac{a_2}{a_0}} $$</p> <p>$$ C = \\sqrt[]{\\frac{a_4}{a_0}} $$</p> <p>\u5176\u4e2d\uff0c$a_0$ \u8868\u793a\u6240\u6d4b\u91cf\u65f6\u6bb5\u5185\u4fe1\u53f7\u7684\u65b9\u5dee\uff08\u76f8\u5f53\u4e8e\u5e73\u5747\u529f\u7387\uff09\uff0c$a_2$ \u8868\u793a\u4fe1\u53f7\u4e00\u9636\u5bfc\u6570\u7684\u65b9\u5dee\uff0c$a_4$ \u8868\u793a\u4fe1\u53f7\u4e8c\u9636\u5bfc\u6570\u7684\u65b9\u5dee\u3002</p> <p>\u57fa\u4e8e\u65b9\u5dee\u7684Hjorth\u53c2\u6570\u6bd4\u5176\u4ed6\u65b9\u6cd5\u62e5\u6709\u66f4\u5feb\u7684\u8ba1\u7b97\u901f\u5ea6\uff0c\u56e0\u800c\u5176\u5728EEG\u5206\u6790\u4e2d\u5e94\u7528\u5f97\u5341\u5206\u666e\u904d\uff0c\u9002\u7528\u4e8e\u9700\u8981\u5feb\u901f\u6301\u7eed\u5730\u83b7\u53d6\u65f6\u53d8\u4fe1\u53f7\u7279\u5f81\u7684\u5e94\u7528\u573a\u5408\u3002</p>"},{"location":"bci/bciai/ch4/#_9","title":"\u5206\u5f62\u7ef4\u6570","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u4fe1\u53f7\u8868\u73b0\u51fa\u81ea\u76f8\u4f3c\u6027\uff0c\u5219\u8ba4\u4e3a\u5b83\u662f\u5206\u5f62\u7684\u3002\u5206\u5f62\u7ef4\u6570\u662f\u5bf9\u8fd9\u79cd\u76f8\u4f3c\u6027\u7684\u5b9a\u91cf\u6d4b\u91cf\u3002\u5e38\u7528\u4e8e\u5927\u8111\u4fe1\u53f7\uff08\u5c24\u5176\u662fEEG\uff09\u7684\u5206\u5f62\u7ef4\u6570\u6d4b\u91cf\u57fa\u4e8e<code>Higuchi</code>\u63d0\u51fa\u7684\u65b9\u6cd5\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u4ea7\u751f\u7684\u5206\u5f62\u7ef4\u6570D\u57281~2\u4e4b\u95f4\uff0c\u5bf9\u4e8e\u7b80\u5355\u66f2\u7ebf\uff08\u4f8b\u5982\u5e73\u5766\uff09\uff0cD\u63a5\u8fd1\u4e8e1\uff0c\u5bf9\u4e8e\u904d\u5e03\u6574\u4e2a\u4e8c\u7ef4\u5e73\u9762\u7684\u9ad8\u5ea6\u4e0d\u89c4\u5219\u66f2\u7ebf\uff0cD\u63a5\u8fd1\u4e8e2\u3002</p> <p>\u8bf8\u5982EEG\u7684\u5927\u8111\u4fe1\u53f7\u7684\u5206\u5f62\u7ef4\u6570D\u4e00\u822c\u57281.4~1.7\u4e4b\u95f4\uff0c\u503c\u8d8a\u5927\u8868\u660e\u53d1\u751f\u4e86\u9ad8\u950b\u7535\u4f4d\u7684\u6d3b\u52a8\uff0c\u4f8b\u5982\u766b\u75eb\u3002\u5728\u5178\u578b\u7684BCI\u5e94\u7528\u4e2d\uff0c\u4f7f\u7528\u6ed1\u7a97\u8ba1\u7b97D\u503c\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u63cf\u7ed8\u65f6\u53d8\u8111\u4fe1\u53f7\u201c\u590d\u6742\u5ea6\u201d\u7684\u5c40\u90e8\u7279\u5f81\u3002</p>"},{"location":"bci/bciai/ch4/#_10","title":"\u81ea\u56de\u5f52\u6a21\u578b","text":"<p>\u81ea\u56de\u5f52\u6a21\u578b\uff08AR\uff09\u57fa\u4e8e\u8fd9\u6837\u7684\u4e8b\u5b9e\uff1a\u81ea\u7136\u4fe1\u53f7\u5728\u65f6\u95f4\u4e0a\u6709\u76f8\u5173\u8054\u7684\u8d8b\u52bf\uff0c\u56e0\u6b64\u5e38\u5e38\u80fd\u591f\u5229\u7528\u4e4b\u524d\u7684\u4e00\u4e9b\u6d4b\u91cf\u503c\u6765\u9884\u6d4b\u4e0b\u4e00\u4e2a\u6d4b\u91cf\u503c\u3002</p> <p>\u4f20\u7edf\u7684AR\u6a21\u578b\u57fa\u4e8e\u4e4b\u524d\u7684\u6d4b\u91cf\u503c\u5e76\u5229\u7528\u4e00\u7ec4\u7cfb\u6570 $a_i$ \u6765\u9884\u6d4b\u5f53\u524d\u7684\u4fe1\u53f7\u503c $x_i$ \uff1a</p> <p>$$ x_i = \\sum_{i=1}^p a_i x_{t-i} + \\epsilon $$</p> <p>\u4f20\u7edf\u7684AR\u6a21\u578b\u5047\u8bbe\u4fe1\u53f7\u7684\u7edf\u8ba1\u7279\u6027\u662f\u5e73\u7a33\u7684\uff0c\u4f46\u662f\u5927\u8111\u4fe1\u53f7\u662f\u975e\u5e73\u7a33\u7684\uff0c\u56e0\u800c\u9700\u8981\u4e00\u7ec4\u65f6\u53d8\u7684\u7cfb\u6570 $a_{i,  t}$ \uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u81ea\u9002\u5e94\u81ea\u56de\u5f52\uff08AAR\uff09\u6a21\u578b\uff1a</p> <p>$$ x_i = \\sum_{i=1}^p a_{i,  t} x_{t-i} + \\epsilon _t $$</p> <p>\u7528\u5361\u5c14\u66fc\u6ee4\u6ce2\u7b49\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u65f6\u66f4\u65b0\u65f6\u53d8\u7cfb\u6570 $a_{i,  t}$ \u3002\u7531\u4e8e\u7cfb\u6570\u968f\u65f6\u95f4\u800c\u53d8\u5316\uff0c\u5b83\u5305\u542b\u4e86\u4fe1\u53f7\u7684\u5c40\u90e8\u7edf\u8ba1\u7ed3\u6784\uff0c\u5728BCI\u4e2d\u53ef\u4ee5\u7528\u4f5c\u8fdb\u4e00\u6b65\u5904\u7406\u7684\u7279\u5f81\u3002</p>"},{"location":"bci/bciai/ch4/#_11","title":"\u8d1d\u53f6\u65af\u6ee4\u6ce2","text":"<p>\u524d\u9762\u8ba8\u8bba\u7684\u65f6\u57df\u65b9\u6cd5\u4e0d\u80fd\u660e\u786e\u4fdd\u6301\u5bf9\u5728\u65f6\u57df\u8ba1\u7b97\u7684\u4fe1\u53f7\u7279\u6027\u7684\u4e0d\u786e\u5b9a\u6027\u4f30\u8ba1\u3002\u5728BCI\u4e2d\uff0c\u4fdd\u6301\u5bf9\u4fe1\u53f7\u4e0d\u786e\u5b9a\u6027\u7684\u8868\u793a\u662f\u5f88\u91cd\u8981\u7684\u3002\u8d1d\u53f6\u65af\u6ee4\u6ce2\u6280\u672f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5bf9\u4fe1\u53f7\u7279\u6027\u53ca\u5176\u4e0d\u786e\u5b9a\u6027\u8fdb\u884c\u4f30\u8ba1\u7684\u7edf\u8ba1\u4e0a\u5408\u7406\u7684\u65b9\u6cd5\u3002</p> <p>\u9996\u5148\u7ed9\u51fa\u6982\u7387\u4e0e\u7edf\u8ba1\u5b66\u4e2d\u4e00\u6761\u91cd\u8981\u7684\u5b9a\u7406\uff0c\u5373\u8d1d\u53f6\u65af\u5b9a\u7406\uff08\u8d1d\u53f6\u65af\u6cd5\u5219\uff09\uff1a</p> <p>$$ P(x|y) = \\frac{P(y|x) P(x)}{P(y)} $$</p> <p>\u5176\u4e2d\uff0c$P(x|y)$ \u79f0\u4e3a\u7ed9\u5b9a $y$ \u6761\u4ef6\u4e0b $x$ \u7684\u540e\u9a8c\u6982\u7387\uff0c$P(y|x)$ \u79f0\u4e3a\u4f3c\u7136\u51fd\u6570\uff0c$P(x)$ \u662f $x$ \u7684\u5148\u9a8c\u6982\u7387\u3002</p> <p>\u8d1d\u53f6\u65af\u5b9a\u7406\u5bf9\u4fe1\u53f7\u7279\u6027\u7684\u7edf\u8ba1\u4f30\u8ba1\u6709\u7740\u6df1\u8fdc\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u5b83\u6307\u51fa\u4e86\u6d4b\u91cf\u503c $P(y|x)$ \u5982\u4f55\u80fd\u4e0e\u5148\u9a8c\u77e5\u8bc6 $P(x)$ \u76f8\u7ed3\u5408\u3002\u4ee5EEG\u4e3a\u4f8b\uff0c$y$ \u4e3aEEG\u6d4b\u91cf\u503c\uff0c$x$ \u4e3a\u53ef\u5f15\u8d77\u5927\u8111\u53cd\u5e94\u7684\u523a\u6fc0\uff0c\u5148\u9a8c\u6982\u7387 $P(x)$ \u53ef\u7531\u5b9e\u9a8c\u5458\u4e8b\u5148\u7ed9\u5b9a\u3002\u7814\u7a76\u4eba\u5458\u611f\u5174\u8da3\u7684\u662f\u627e\u5230\u4ea7\u751f\u6d4b\u91cf\u5230\u7684EEG\u4fe1\u53f7\u7684\u539f\u56e0\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u4f30\u8ba1\u540e\u9a8c\u6982\u7387 $P(x|y)$  \u3002</p> <p>\u7136\u540e\u6211\u4eec\u901a\u8fc7\u4e00\u5806\u567c\u91cc\u556a\u5566\u7684\u5206\u6790\u5373\u53ef\u5f97\u5230\u4e00\u822c\u5f62\u5f0f\u7684\u8d1d\u53f6\u65af\u6ee4\u6ce2\uff08\u66f4\u65b0\u89c4\u5219\uff09\uff1a</p> <p>$$ P(x_t|y_1,\\cdots,y_t) = \\alpha P(y_t|x_t) \\sum_{x_{t-1}} P(x_t|x_{t-1}) P(x_{t-1}|y_1,\\cdots,y_{t-1}) $$</p> <p>$$ \\alpha = 1/P(y_t|y_1,\\cdots,y_{t-1}) $$</p> <p>\u8d1d\u53f6\u65af\u6ee4\u6ce2\u5668\u8bf4\u660e\u4e86\u5e94\u5982\u4f55\u5c06\u65b0\u7684\u6d4b\u91cf\u503c $y_t$ \u4e0e\u4e4b\u524d\u7684\u540e\u9a8c\u6982\u7387 $P(x_{t-1}|y_1,\\cdots,y_{t-1})$ \u76f8\u7ed3\u5408\uff0c\u4ee5\u6c42\u5f97 $t$ \u65f6\u523b\u540e\u9a8c\u6982\u7387\u7684\u5206\u5e03\u3002\u5e38\u7528\u7684\u7edf\u8ba1\u6ee4\u6ce2\u65b9\u6cd5\uff0c\u5982\u5361\u5c14\u66fc\u6ee4\u6ce2\u548c\u7c92\u5b50\u6ee4\u6ce2\uff0c\u90fd\u662f\u4e0a\u5f0f\u7684\u7279\u6b8a\u60c5\u51b5\u3002</p> <p>\u5728\u66f4\u4e00\u822c\u7684\u60c5\u51b5\u4e0b\uff0c\u8d1d\u53f6\u65af\u6ee4\u6ce2\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u5728\u52a8\u6001\u8d1d\u53f6\u65af\u7f51\u683c\uff08DBN\uff09\u4e2d\u505a\u6982\u7387\u63a8\u65ad\u3002DBN\u662f\u4e00\u79cd\u56fe\u6a21\u578b\uff0c\u5176\u4e2d\u7684\u8282\u70b9\u4ee3\u8868\u968f\u673a\u53d8\u91cf\uff08\u5373\u524d\u6587\u4e2d\u7684\u72b6\u6001 $x_t$ \u548c\u89c2\u6d4b\u503c $y_t$\uff09\uff0c\u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u7bad\u5934\u4ee3\u8868\u6761\u4ef6\u6982\u7387\uff08\u5373\u524d\u6587\u4e2d\u7684 $P(x_t|x_{t-1})$ \u548c $P(y_t|x_t)$\uff09\u3002</p>"},{"location":"bci/bciai/ch4/#_12","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2","text":"<p>\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u662f\u8d1d\u53f6\u65af\u6ee4\u6ce2\u4e2d\u6700\u77e5\u540d\u7684\u7b97\u6cd5\uff0c\u5b83\u662f\u5728\u5047\u8bbe\u52a8\u6001\u6982\u7387\u548c\u6d4b\u91cf\u6982\u7387\u5747\u4e3a\u7ebf\u6027\u9ad8\u65af\u6a21\u578b\u7684\u57fa\u7840\u4e0a\u5bfc\u51fa\u7684\u3002</p> <p>\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u53ef\u7b80\u5316\u4e3a\u5982\u4e0b\u6240\u793a\u7684\u65b9\u7a0b\u6765\u9012\u5f52\u66f4\u65b0\u6bcf\u4e2a $t$ \u65f6\u523b\u4e0b\u7684\u5747\u503c $\\hat x_t$ \u548c\u534f\u65b9\u5dee $S_t$ \uff1a</p> \u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u66f4\u65b0\u65b9\u7a0b <p>$$ \\hat x_t = \\overline x_t + K_t (y_t - B \\overline x_t) $$</p> <p>$$ S_t = (B^T R^{-1} B + M_t^{-1}) ^ {-1} $$</p> <p>$$ \\overline x_t = A \\hat x_{t-1} $$</p> <p>$$ M_t = A S_{t-1} A^T + Q $$</p> <p>\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u5c06\u73af\u5883\u7684\u9690\u85cf\u72b6\u6001\u90fd\u4f30\u8ba1\u4e3a\u7528\u5747\u503c\u548c\u65b9\u5dee\uff08\u534f\u65b9\u5dee\uff09\u5b9a\u4e49\u7684\u9ad8\u65af\u5206\u5e03\u3002\u5176\u5de5\u4f5c\u8fc7\u7a0b\u4e3a\uff1a\u5728\u6d4b\u91cf $y_t$ \u4e4b\u524d\uff0c\u5148\u9884\u6d4b\u5747\u503c $\\overline x_t$ \u548c\u534f\u65b9\u5dee $M_t$ \uff0c\u5b83\u4eec\u7531\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u5728 $t-1$ \u65f6\u523b\u4f30\u8ba1\u7684\u5747\u503c\u548c\u534f\u65b9\u5dee\u8ba1\u7b97\u5f97\u5230\uff0c\u7136\u540e\u8ba1\u7b97\u9884\u6d4b\u8bef\u5dee $(y_t - B \\overline x_t)$ \uff0c\u5c06\u6821\u6b63\u9879 $K_t (y_t - B \\overline x_t)$ \u4e0e\u4e4b\u524d\u7684\u9884\u6d4b\u5747\u503c $\\overline x_t$ \u76f8\u52a0\u5373\u53ef\u5f97\u5230\u65b0\u7684\u4f30\u8ba1\u503c $\\hat x_t$ \u3002\u4e0b\u56fe\u8bf4\u660e\u4e86\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u7684\u9884\u6d4b-\u6821\u6b63\u5468\u671f\uff1a</p> <p></p>"},{"location":"bci/bciai/ch4/#_13","title":"\u7c92\u5b50\u6ee4\u6ce2","text":"<p>\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u5047\u8bbe\u5176\u52a8\u6001\u548c\u6d4b\u91cf\u8fc7\u7a0b\u4e3a\u7ebf\u6027\u7684\uff0c\u5e76\u670d\u4ece\u9ad8\u65af\u5206\u5e03\u3002\u57fa\u4e8e\u8fd9\u79cd\u7b80\u5316\u7684\u5047\u8bbe\u80fd\u5bfc\u51fa\u8d1d\u53f6\u65af\u6ee4\u6ce2\u4e2d\u66f4\u65b0\u65b9\u7a0b\u7684\u89e3\u6790\u8868\u8fbe\u5f0f\uff0c\u4f46\u5728\u8bb8\u591a\u5b9e\u9645\u60c5\u51b5\u4e0b\u8fd9\u79cd\u5047\u8bbe\u53ef\u80fd\u5e76\u4e0d\u9002\u7528\u3002</p> <p>\u7c92\u5b50\u6ee4\u6ce2\u662f\u4e00\u79cd\u9002\u7528\u4e8e\u5206\u6790\u975e\u7ebf\u6027\u975e\u9ad8\u65af\u8fc7\u7a0b\u7684\u65b9\u6cd5\u3002\u7c92\u5b50\u6ee4\u6ce2\u901a\u8fc7\u4e00\u7fa4\u6837\u672c\uff08\u7c92\u5b50\uff09\u6765\u903c\u8fd1\u540e\u9a8c\u6982\u7387 $P(x_t|y_1,\\cdots,y_t)$ \uff0c\u5177\u4f53\u8fc7\u7a0b\u662f\u201c\u6d4b\u91cf-\u52a0\u6743-\u91cd\u91c7\u6837-\u9884\u6d4b\u201d\u7684\u5468\u671f\u91cd\u590d\u3002</p> <p>\u5f53\u6837\u672c\u6570\u8d8b\u4e8e\u65e0\u7a77\u5927\u65f6\uff0c\u7c92\u5b50\u6ee4\u6ce2\u7b97\u6cd5\u8ba1\u7b97\u51fa\u7684\u6837\u672c\u80fd\u6b63\u786e\u8868\u793a\u540e\u9a8c\u6982\u7387 $P(x_t|y_1,\\cdots,y_t)$ \u3002\u5b9e\u9645\u4e0a\uff0c\u4f7f\u7528\u7684\u6837\u672c\u6570\u53d6\u51b3\u4e8e\u7279\u5b9a\u7684\u5e94\u7528\u53ca\u53ef\u83b7\u5f97\u7684\u8ba1\u7b97\u80fd\u529b\uff0c\u6837\u672c\u6570\u4e00\u822c\u57281000~5000\u4e4b\u95f4\u3002</p>"},{"location":"bci/bciai/ch4/#_14","title":"\u7a7a\u95f4\u6ee4\u6ce2","text":"<p>\u7a7a\u57df\u6ee4\u6ce2\u5c06\u4e0d\u540c\u4f4d\u7f6e\uff08\u901a\u9053\uff0cchannel\uff09\u8bb0\u5f55\u7684\u5927\u8111\u4fe1\u53f7\u901a\u8fc7\u51e0\u79cd\u65b9\u5f0f\u8fdb\u884c\u4fe1\u53f7\u8f6c\u6362\u3002\u4e0b\u9762\u8ba8\u8bba\u4e00\u4e9b\u5e38\u7528\u7684\u7a7a\u57df\u6ee4\u6ce2\u65b9\u6cd5\u3002</p>"},{"location":"bci/bciai/ch4/#_15","title":"\u53cc\u6781\u3001\u62c9\u666e\u62c9\u65af\u548c\u5171\u540c\u5e73\u5747\u53c2\u8003","text":"<ul> <li> <p>\u53cc\u6781\u6ee4\u6ce2\uff1a \u8ba1\u7b97\u53cc\u6781\u4fe1\u53f7 $\\widetilde s_{i,j}=s_i-s_j$ \uff0c\u7528\u4ee5\u7a81\u663e\u4e24\u4e2a\u611f\u5174\u8da3\u7684\u7535\u6781\uff08\u7b2c $i$ \u901a\u9053\u548c\u7b2c $j$ \u901a\u9053\uff09\u4e4b\u95f4\u7684\u7535\u4f4d\u5dee\u3002</p> </li> <li> <p>\u62c9\u666e\u62c9\u65af\u6ee4\u6ce2\uff1a \u7528\u7b2c $i$ \u4e2a\u7535\u6781\u7684\u4fe1\u53f7\u51cf\u53bb\u56db\u4e2a\u6b63\u4ea4\u7684\u6700\u8fd1\u90bb\u7535\u6781\u4fe1\u53f7\u7684\u5e73\u5747\u503c\uff0c\u7528\u4ee5\u53bb\u9664\u6240\u611f\u5174\u8da3\u7684\u7535\u6781\u4e0a\u5b58\u5728\u7684\u4e00\u4e9b\u666e\u904d\u6d3b\u52a8\uff0c\u589e\u5f3a\u7b2c $i$ \u4e2a\u7535\u6781\u7684\u5c40\u90e8\u6d3b\u52a8\u3002 $$ \\widetilde s_i = s_i - \\frac{1}{4} \\sum_{i\\in \\theta} s_i $$</p> </li> <li> <p>\u5171\u540c\u5e73\u5747\u53c2\u8003\uff08CAR\uff09\uff1a \u7528\u7b2c $i$ \u4e2a\u7535\u6781\u7684\u4fe1\u53f7\u51cf\u53bb\u5176\u4ed6\u6240\u6709\u4fe1\u53f7\u7684\u5e73\u5747\u503c\uff0c\u4ee5\u589e\u5f3a\u7b2c $i$ \u4e2a\u7535\u6781\u4e0a\u7684\u5c40\u90e8\u6d3b\u52a8\u3002 $$ \\widetilde s_i = s_i - \\frac{1}{N} \\sum_{i=1}^N s_i $$</p> </li> </ul> \u4e09\u79cd\u57fa\u672c\u7684\u7a7a\u95f4\u6ee4\u6ce2\u6280\u672f\u793a\u4f8b <p> </p>"},{"location":"bci/bciai/ch4/#_16","title":"\u4e3b\u6210\u5206\u5206\u6790","text":"<p>\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u7528\u4e8e\u6570\u636e\u964d\u7ef4\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u5728\u539f\u6709\u7279\u5f81\u7a7a\u95f4\u4e2d\u5206\u5e03\u7684\u6570\u636e\u6620\u5c04\u5230\u65b0\u7684\u7ef4\u6570\u66f4\u4f4e\u7684\u7279\u5f81\u7a7a\u95f4\uff0c\u5b9e\u73b0\u964d\u79e9\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5c31\u662f\u5c06\u539f\u5750\u6807\u65cb\u8f6c\u53d8\u6362\u5230\u6700\u5927\u65b9\u5dee\u7684\u65b9\u5411\u4e0a\uff0c\u5373\u4f7f\u5f97\u5728\u65b0\u5750\u6807\u7cfb\u4e2d\uff0c\u67d0\u51e0\u6839\u5750\u6807\u8f74\u4e0a\u6570\u636e\u5206\u5e03\u7684\u65b9\u5dee\u8f83\u5927\uff0c\u6211\u4eec\u8ba4\u4e3a\u5728\u8fd9\u4e9b\u7279\u5f81\uff08\u4e3b\u6210\u5206\uff09\u4e0a\uff0c\u4e0d\u540c\u6570\u636e\u7684\u533a\u5206\u5ea6\u8f83\u9ad8\uff0c\u5982\u679c\u539f\u6570\u636e\u662f\u5197\u4f59\u7684\uff0c\u90a3\u4e48\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u4ec5\u4fdd\u7559\u4e00\u4e9b\u65b9\u5dee\u5927\u7684\u65b9\u5411\uff0c\u820d\u5f03\u65b9\u5dee\u5c0f\u7684\u65b9\u5411\uff0c\u4f7f\u6570\u636e\u7ef4\u6570\u663e\u8457\u964d\u4f4e\u3002</p> <p>PCA\u7684\u5177\u4f53\u64cd\u4f5c\u5173\u952e\u5728\u4e8e\u5bfb\u627e\u6570\u636e\u65b9\u5dee\u6700\u5927\u7684\u65b9\u5411\u3002\u8fd0\u7528\u7ebf\u6027\u4ee3\u6570\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u6570\u636e\u534f\u65b9\u5dee\u77e9\u9635 $A$ \u7684\u7279\u5f81\u5411\u91cf\u6765\u6c42\u89e3\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u4f4e\u7ef4\u4e14\u4e0d\u76f8\u5173\u7684\u5411\u91cf $a$\uff08$a$ \u7684\u7ef4\u6570\u5c0f\u4e8e\u7b49\u4e8e\u8f93\u5165 $x$ \u7684\u7ef4\u6570\uff09\uff0c\u8be5\u5411\u91cf\u53ef\u4ee5\u4f5c\u4e3a\u6709\u6548\u7684\u201c\u7279\u5f81\u5411\u91cf\u201d\u7528\u4e8eBCI\u7684\u5206\u7c7b\u6216\u8005\u5176\u4ed6\u7c7b\u578b\u7684\u5206\u6790\u3002</p> PCA\u7684\u7ebf\u6027\u4ee3\u6570\u8fc7\u7a0b <p>$$ \\begin{aligned} var(v) &amp; = \\frac{1}{N} \\sum_{i=1}^N \\Vert (x_i - \\overline x)^T v \\Vert ^2 \\cr &amp; = \\frac{1}{N} \\sum_{i=1}^N v^T (x_i-\\overline x) (x_i-\\overline x)^T v \\cr &amp; = v^T (\\frac{1}{N} \\sum_{i=1}^N (x_i-\\overline x) (x_i-\\overline x)^T) v \\cr &amp; = v^T A v \\end{aligned} $$</p> <p>\u901a\u8fc7\u6700\u5927\u5316 $v^T A v$ \u4f7f $var(v)$ \u8fbe\u5230\u6700\u5927\uff0c\u5176\u7ea6\u675f\u6761\u4ef6\u4e3a $v$ \u662f\u5355\u4f4d\u5411\u91cf\uff0c\u5373 $v^T v = 1$ \u3002\u53ef\u4ee5\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u6765\u8fdb\u884c\u8ba1\u7b97\uff1a\u627e\u5230\u80fd\u4f7f $v^T A v - \\lambda (v^T v - 1)$ \u8fbe\u5230\u6700\u5927\u7684\u5411\u91cf $v_1$ \uff0c\u5f0f\u4e2d $\\lambda$ \u662f\u901a\u8fc7\u4f18\u5316\u8ba1\u7b97\u5f97\u5230\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u3002\u8bbe\u8be5\u8868\u8fbe\u5f0f\u5173\u4e8e $v$ \u7684\u5bfc\u6570\u4e3a $0$ \uff0c\u5219\u53ef\u5f97\uff1a</p> <p>$$ A v = \\lambda v $$</p> <p>\u8fd9\u5c31\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u5173\u4e8e\u77e9\u9635 $A$ \u7684\u7ecf\u5178\u7684\u7279\u5f81\u5411\u91cf-\u7279\u5f81\u503c\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64\u4e3a\u5bfb\u627e\u6570\u636e\u4e2d\u65b9\u5dee\u6700\u5927\u7684\u65b9\u5411\uff0c\u53ea\u987b\u8ba1\u7b97\u51fa $A$ \u7684\u7279\u5f81\u5411\u91cf $v_1, \\cdots, v_m$\uff08\u4e3b\u6210\u5206\u5411\u91cf\uff09\uff0c\u7531\u8fd9\u4e9b\u5411\u91cf\u53ef\u4ee5\u5f20\u6210\u8f93\u5165\u7a7a\u95f4\u7684\u4e00\u4e2a\u4f4e\u7ef4\u5b50\u7a7a\u95f4\u3002\u5bf9\u4e8e\u8f93\u5165 $x$ \uff0c\u7528\u8ba1\u7b97\u5f97\u5230\u7684 $m$ \u7ef4\u8868\u8fbe\u5f0f\u6765\u8868\u793a\u8f93\u5165\u5373\u53ef\u5b9e\u73b0\u964d\u7ef4\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06\u8f93\u5165\u6295\u5f71\u5230 $m$ \u4e2a\u4e3b\u6210\u5206\u5411\u91cf\u4e0a\u6765\u5b9e\u73b0\uff1a</p> <p>$$ a = \\begin{bmatrix} (x-\\overline x)^T v_1 \\cr \\vdots \\cr (x-\\overline x)^T v_m \\end{bmatrix} $$</p>"},{"location":"bci/bciai/ch4/#_17","title":"\u72ec\u7acb\u5206\u91cf\u5206\u6790","text":"<p>\u72ec\u7acb\u5206\u91cf\u5206\u6790\uff08ICA\uff09\u4e5f\u662f\u4e00\u79cd\u7ebf\u6027\u53d8\u6362\u8fc7\u7a0b\u3002\u4f46\u662fPCA\u53ea\u80fd\u4fdd\u8bc1\u53d8\u6362\u540e\u6570\u636e\u5177\u6709\u4e0d\u76f8\u5173\u6027\uff0c\u4f46\u662f\u65e0\u6cd5\u4fdd\u8bc1\u5176\u9ad8\u9636\u72ec\u7acb\u6027\uff0c\u800c\u6211\u4eec\u5e0c\u671b\u6570\u636e\u7684\u5404\u9636\u7edf\u8ba1\u91cf\u90fd\u80fd\u5229\u7528\u3002ICA\u7684\u76ee\u6807\u5c31\u662f\u5bfb\u627e\u4e00\u79cd\u65b9\u6cd5\u4f7f\u5f97\u53d8\u6362\u540e\u7684\u6570\u636e\u5177\u6709\u6700\u5f3a\u7684\u72ec\u7acb\u6027\u3002</p> <p>\u72ec\u7acb\u6027\u662f\u91cd\u8981\u7684\uff0c\u76f8\u6bd4\u4e0d\u76f8\u5173\u6027\uff0c\u72ec\u7acb\u6027\u548c\u771f\u5b9e\u7684\u4fe1\u53f7\u6e90\u5173\u7cfb\u5bc6\u5207\u3002\u5178\u578bBCI\u4e2d\u8bb0\u5f55\u5230\u7684\u4fe1\u53f7\uff0c\u662f\u5927\u8111\u4e2d\u4e00\u7ec4\u7edf\u8ba1\u72ec\u7acb\u7684\u4fe1\u53f7\u6e90\u7ebf\u6027\u6df7\u5408\u7684\u7ed3\u679c\uff0c\u7528 $x$ \u8868\u793a\u8bb0\u5f55\u5230\u7684\u4fe1\u53f7\uff0c $y$ \u8868\u793a\u9690\u542b\u7684\u72ec\u7acb\u6e90\u5411\u91cf\uff0c $M$ \u8868\u793a\u672a\u77e5\u7684\u6df7\u5408\u77e9\u9635\u3002\u6211\u4eec\u9700\u8981\u540c\u65f6\u4f30\u8ba1 $M$ \u548c $y$ \uff0c\u4ece\u800c\u5c06 $y$ \u8fd8\u539f\u3002</p> <p>$$ x = M y $$</p> <p>$W$ \u4e5f\u79f0\u4e3a\u89e3\u6df7\u77e9\u9635\uff0c\u56e0\u4e3a\u5b83\u8bd5\u56fe\u5c06\u6df7\u5408\u7684\u6e90\u5206\u79bb\u5f00\u3002\u72ec\u7acb\u5206\u91cf\u5206\u6790\u901a\u8fc7\u5bfb\u627e\u89e3\u6df7\u77e9\u9635\u6765\u6062\u590d\u9690\u542b\u7684\u6e90\u3002\u5f53 $a$ \u548c $x$ \u77e9\u9635\u5927\u5c0f\u76f8\u540c\u65f6\uff0c\u6700\u4f18\u7684 $W = M^{-1}$ \u3002</p> <p>$$ a = W x $$</p> PCA\u5e76\u4e0d\u8bd5\u56fe\u5bfb\u627e\u72ec\u7acb\u4fe1\u53f7\u6e90\uff0c\u4f46\u662fICA\u662f\u7684 <p></p> <p>\u76ee\u524d\u5b58\u5728\u591a\u79cd\u8ba1\u7b97 $W$ \u7684\u7b97\u6cd5\uff0c\u5176\u4e2d\u6700\u5e38\u7528\u7684\u662f<code>Bell-Sejnowski \"infomax\" \u7b97\u6cd5</code>\u4ee5\u53ca<code>FastICA</code>\u3002\u7531\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u53ef\u5f97\uff0c\u72ec\u7acb\u6e90\u4fe1\u53f7\u7684\u7ebf\u6027\u6df7\u5408\u51e0\u4e4e\u603b\u662f\u670d\u4ece\u9ad8\u65af\u5206\u5e03\uff0c\u4ece\u800cICA\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5408\u9002\u7684\u975e\u9ad8\u65af\u5206\u5e03\u4f5c\u4e3a\u5f85\u6c42\u7684 $P(a_i)$ \uff0c\u4ece\u5f97\u5230\u7684\u6700\u4f18\u5316\u51fd\u6570\u63a8\u5bfc\u51fa $W$ \u7684\u4f30\u7b97\u51c6\u5219\u3002</p> <p>\u65e0\u8bba\u662f\u5c06ICA\u7684\u8f93\u51fa\u5411\u91cf $a$ \u4f5c\u4e3a\u5206\u7c7b\u7684\u7279\u5f81\u5411\u91cf\u548c\u7528\u4e8e\u5206\u79bb\u51fa\u611f\u5174\u8da3\u7684\u5927\u8111\u8282\u5f8b\u4fe1\u53f7\uff0c\u8fd8\u662f\u53bb\u9664EEG\u4e2d\u7684\u808c\u7535\u4f2a\u8ff9\uff0cICA\u88ab\u8bc1\u660e\u53ef\u7528\u4e8eBCI\u7684\u591a\u4e2a\u7ec4\u6210\u90e8\u5206\u3002</p>"},{"location":"bci/bciai/ch4/#_18","title":"\u5171\u7a7a\u95f4\u6a21\u5f0f","text":"<p>\u5171\u7a7a\u95f4\u6a21\u5f0f\uff08CSP\uff09\u662f\u4e00\u79cd\u4e24\u5206\u7c7b\u4efb\u52a1\u4e0b\u7684\u7a7a\u57df\u6ee4\u6ce2\u7279\u5f81\u63d0\u53d6\u7b97\u6cd5\u3002</p> <p>\u4e0ePCA\u548cICA\u4e0d\u540c\uff0cCSP\u662f\u4e00\u79cd\u76d1\u7763\u65b9\u6cd5\uff0c\u5373\u8bad\u7ec3\u6570\u636e\u96c6\u88ab\u6807\u8bb0\u8fc7\uff0c\u6bcf\u4e2a\u6570\u636e\u5411\u91cf\u7684\u7c7b\u522b\u662f\u5df2\u77e5\u7684\u3002\u4f8b\u5982\uff0c\u5927\u8111\u4fe1\u53f7\u662f\u5728\u53d7\u8bd5\u8005\u6267\u884c\u4e24\u79cd\u4e0d\u540c\u7684\u4efb\u52a1\uff08\u624b\u548c\u811a\u7684\u8fd0\u52a8\u60f3\u8c61\uff09\u65f6\u91c7\u96c6\u7684\u3002CSP\u5bfb\u627e\u5408\u9002\u7684\u7a7a\u95f4\u6ee4\u6ce2\u5668\uff08\u7ebf\u6027\u4ee3\u6570\u8fc7\u7a0b\uff0c\u5229\u7528\u77e9\u9635\u7684\u5bf9\u89d2\u5316\uff09\uff0c\u4f7f\u4e24\u7c7b\u4fe1\u53f7\u7684\u65b9\u5dee\u503c\u5dee\u5f02\u6700\u5927\u5316\uff0c\u4ece\u800c\u5f97\u5230\u5177\u6709\u8f83\u9ad8\u533a\u5206\u5ea6\u7684\u7279\u5f81\u5411\u91cf\u3002</p> <p>CSP\u5df2\u7ecf\u6210\u4e3a\u57fa\u4e8eEEG\u7684BCI\u7684\u4e00\u79cd\u5e38\u7528\u6ee4\u6ce2\u65b9\u6cd5\uff0c\u5176\u5b9e\u8d28\u4e0a\u4f7f\u5f97BCI\u6240\u4f7f\u7528\u7279\u5f81\u7684\u53ef\u533a\u5206\u5ea6\u6700\u5927\u5316\u3002</p>"},{"location":"bci/bciai/ch4/#_19","title":"\u4f2a\u8ff9\u53bb\u9664\u6280\u672f","text":"\u4ec0\u4e48\u662f\u4f2a\u8ff9 <p>BCI\u4e2d\u7684\u4f2a\u8ff9\u6765\u81ea\u4e8e\u5927\u8111\u5916\u90e8\u4e0d\u9700\u8981\u7684\u4fe1\u53f7\uff0c\u5e38\u89c1\u7684\u4f2a\u8ff9\u53ef\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a</p> <ul> <li>\u6765\u81ea\u4e8e\u4eba\u4f53\u5916\u7684\u4f2a\u8ff9\uff1a\u598250/60Hz\u7535\u529b\u5de5\u9891\u566a\u58f0\uff1b</li> <li>\u6765\u81ea\u4e8e\u4eba\u4f53\u5185\u7684\u4f2a\u8ff9\uff1a \u53ef\u80fd\u5305\u62ec\u4ee5\u4e0b\u51e0\u7c7b\uff1a<ul> <li>\u547c\u5438\u548c\u5fc3\u8df3\u4ea7\u751f\u7684\u8282\u5f8b\u6027\u4f2a\u8ff9\uff08\u540e\u8005\u79f0\u4e3a\u5fc3\u7535\u4f2a\u8ff9\u6216ECG\u4f2a\u8ff9\uff09\uff1b</li> <li>\u76ae\u80a4\u7535\u4f20\u5bfc\u7684\u6539\u53d8\uff08\u51fa\u6c57\u7b49\u4ea7\u751f\u7684\u7ed3\u679c\uff09\u5f15\u8d77\u7684\u4fe1\u53f7\u7578\u53d8\u6216\u8870\u51cf\uff1b</li> <li>\u773c\u52a8\u6216\u7728\u773c\u4ea7\u751f\u7684\u4f2a\u8ff9\uff08\u79f0\u4e3a\u773c\u7535\u4f2a\u8ff9\u6216EOG\u4f2a\u8ff9\uff0c\u8868\u73b0\u4e3a\u5728EEG\u7b49\u5927\u8111\u4fe1\u53f73~4Hz\u9891\u5e26\u8303\u56f4\u5185\u7684\u9ad8\u5e45\u5ea6\u504f\u5dee\uff09\uff1b</li> <li>\u808c\u8089\u4ea7\u751f\u7684\u4f2a\u8ff9\uff08\u79f0\u4e3a\u808c\u7535\u4f2a\u8ff9\u6216EMG\u4f2a\u8ff9\uff0c\u51fa\u73b0\u572830Hz\u6216\u66f4\u9ad8\u7684\u9891\u5e26\u8303\u56f4\uff09\uff1b</li> </ul> </li> </ul> <p>\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u91cd\u8981\u7684\u4f2a\u8ff9\u53bb\u9664\u65b9\u6cd5\uff1a</p> <ul> <li> <p>\u9608\u503c\u6cd5\uff1a \u901a\u8fc7\u8bbe\u5b9a\u9608\u503c\u6765\u820d\u5f03\u4efb\u4f55\u53d7\u6c61\u67d3\u7684\u6570\u636e\u3002 \u9608\u503c\u6cd5\u7684\u4e3b\u8981\u7f3a\u70b9\u5728\u4e8e\u5e76\u4e0d\u662f\u6240\u6709\u53d7\u6c61\u67d3\u7684\u6570\u636e\u90fd\u5e94\u5f53\u88ab\u820d\u5f03\u3002</p> </li> <li> <p>\u5e26\u963b\u548c\u9677\u6ce2\u6ee4\u6ce2\uff1a \u5e26\u963b\u6ee4\u6ce2\u4f7f\u4fe1\u53f7\u4e2d\u7279\u5b9a\u9891\u5e26\u7684\u5206\u91cf\u5f97\u5230\u8870\u51cf\uff0c\u800c\u4f7f\u5176\u4f59\u5206\u91cf\u901a\u8fc7\u3002 \u5177\u4f53\u64cd\u4f5c\u4e0a\uff0c\u9996\u5148\u5c06\u4fe1\u53f7\u53d8\u6362\u5230\u9891\u57df\uff0c\u6ee4\u9664\u9009\u62e9\u7684\u9891\u5e26\uff0c\u5e76\u53cd\u53d8\u6362\u56de\u65f6\u57df\u3002\u5e38\u7528\u7684\u5e26\u963b\u6ee4\u6ce2\u5668\u7684\u963b\u5e26\u8bbe\u7f6e\u572859 ~ 61Hz\uff08\u7f8e\u56fd\uff09\uff0c\u7528\u4e8e\u6ee4\u9664\u7535\u529b\u5de5\u9891\u566a\u58f0\uff1b\u53e6\u4e00\u79cd\u5e26\u963b\u6ee4\u6ce2\u5668\u7684\u963b\u5e26\u8bbe\u7f6e\u5728\u8f83\u4f4e\u7684\u9891\u6bb5\uff08\u59821 ~ 4Hz\uff09\uff0c\u53ef\u4ee5\u7528\u4e8e\u6ee4\u9664EEG\u4e2d\u7684EOG\u4f2a\u8ff9\uff1b\u4f4e\u901a\u6ee4\u6ce2\u6709\u65f6\u4e5f\u7528\u4e8e\u6ee4\u9664EMG\u4f2a\u8ff9\u3002 \u4f46\u662f\uff0c\u53ea\u6709\u5f53\u611f\u5174\u8da3\u7684\u5927\u8111\u4fe1\u53f7\u9891\u5e26\u4e0e\u4f2a\u8ff9\u6240\u5904\u9891\u5e26\u4e0d\u540c\u65f6\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u624d\u9002\u7528\u3002</p> </li> <li> <p>\u7ebf\u6027\u6a21\u578b\uff1a \u4f2a\u8ff9\u5bf9\u8bb0\u5f55\u7684\u5927\u8111\u4fe1\u53f7\u4ea7\u751f\u5f71\u54cd\uff0c\u5bf9\u8fd9\u4e9b\u5f71\u54cd\u8fdb\u884c\u5efa\u6a21\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u5f0f\u662f\u5047\u8bbe\u8fd9\u4e9b\u5f71\u54cd\u662f\u53ef\u53e0\u52a0\u7684\u3002 \u4f8b\u5982EEG\u4e2dEOG\u4f2a\u8ff9\u7684\u6ee4\u9664\uff1a $$ EEG_i^{true} (t) = EEG_i (t) - K \\cdot EOG(t) $$</p> </li> <li> <p>\u4e3b\u6210\u5206\u5206\u6790\uff1a PCA\u5df2\u88ab\u8bc1\u660e\u5bf9\u4e8e\u53bb\u9664EEG\u4e2d\u7684EOG\u4f2a\u8ff9\u662f\u6709\u6548\u7684\u3002 \u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5047\u8bbe\u4f2a\u8ff9\u548c\u5927\u8111\u4fe1\u53f7\u4e0d\u76f8\u5173\u53ef\u80fd\u5e76\u4e0d\u5408\u9002\uff0cPCA\u53ef\u80fd\u4e0d\u80fd\u7528\u4e8e\u5206\u79bb\u8fd9\u4e9b\u4f2a\u8ff9\u548c\u771f\u5b9e\u8111\u4fe1\u53f7\u3002</p> </li> <li> <p>\u72ec\u7acb\u5206\u91cf\u5206\u6790\uff1a ICA\u5bfb\u627e\u7684\u662f\u6570\u636e\u4e4b\u95f4\u7684\u72ec\u7acb\u6027\u800c\u4e0d\u662f\u4e0d\u76f8\u5173\u6027\uff0c\u4ece\u800c\u514b\u670d\u4e86PCA\u7684\u4e00\u4e9b\u7f3a\u70b9\u3002</p> </li> </ul>"},{"location":"bci/bciai/ch5/","title":"\u673a\u5668\u5b66\u4e60","text":"<p> \u7ea6 4005 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p> <p>\u6458\u8981</p> <p>\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a</p> <ul> <li> <p>\u76d1\u7763\u5b66\u4e60\uff1a \u7ed9\u5b9a\u8bad\u7ec3\u6570\u636e\u5305\u542b\u8f93\u5165\u4e0e\u76f8\u5e94\u8f93\u51fa\uff0c\u7b97\u6cd5\u7684\u76ee\u6807\u662f\u4ece\u8bad\u7ec3\u6570\u636e\u4e2d\u83b7\u5f97\u9690\u542b\u7684\u51fd\u6570\u5173\u7cfb\uff0c\u5e76\u636e\u6b64\u5c06\u65b0\u7684\u6d4b\u8bd5\u8f93\u5165\u6620\u5c04\u4e3a\u6b63\u786e\u7684\u8f93\u51fa\u3002\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a</p> <ul> <li>\u5206\u7c7b\uff1a \u8f93\u51fa\u662f\u79bb\u6563\u7684\uff0c\u5c06\u5927\u8111\u6d3b\u52a8\u6620\u5c04\u4e3a\u4e00\u7ec4\u7ed9\u5b9a\u7c7b\u522b\u4e2d\u7684\u4e00\u7c7b\uff1b</li> <li>\u56de\u5f52\uff1a \u8f93\u51fa\u662f\u8fde\u7eed\u7684\uff0c\u5c06\u795e\u7ecf\u6d3b\u52a8\u6620\u5c04\u4e3a\u8fde\u7eed\u7684\u8f93\u51fa\u4fe1\u53f7\uff1b</li> </ul> </li> <li> <p>\u65e0\u76d1\u7763\u5b66\u4e60\uff1a \u7ed9\u5b9a\u6570\u636e\u901a\u5e38\u7531\u9ad8\u7ef4\u5411\u91cf\u7684\u8f93\u5165\u7ec4\u6210\uff0c\u7b97\u6cd5\u7684\u76ee\u6807\u662f\u5728\u672a\u6807\u8bb0\u7684\u6570\u636e\u4e2d\u6316\u6398\u9690\u85cf\u7684\u7edf\u8ba1\u7ed3\u6784\uff0c\u901a\u8fc7\u5b66\u4e60\u6784\u5efa\u4e00\u79cd\u7d27\u51d1\u7684\u6216\u5bf9\u540e\u7eed\u5206\u6790\u6709\u7528\u7684\u7edf\u8ba1\u6a21\u578b\u3002</p> </li> </ul> <p>\u6784\u5efa\u4e00\u4e2aBCI\u4e00\u822c\u9700\u8981\u5c06\u5927\u8111\u4fe1\u53f7\u6620\u5c04\u4e3a\u5408\u9002\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u8fd9\u901a\u5e38\u5229\u7528\u5206\u7c7b\u6280\u672f\u6216\u8005\u56de\u5f52\u6280\u672f\u5b9e\u73b0\u3002</p> <p>\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u4e24\u79cd\u4e3b\u8981\u7684\u65e0\u76d1\u7763\u5b66\u4e60\u6280\u672f\uff08PCA\u548cICA\uff09\uff0c\u4e0b\u6587\u5c06\u7ee7\u7eed\u8ba8\u8bba\u5e38\u89c1\u7684\u76d1\u7763\u5b66\u4e60\u6280\u672f\u3002</p> <ul> <li>\u57fa\u4e8eEEG\u3001ECoG\u3001fMRI\u3001fNRI\u7b49\u7684BCI\u4e3b\u8981\u5229\u7528\u5206\u7c7b\u4ea7\u751f\u79bb\u6563\u7684\u63a7\u5236\u8f93\u51fa\u4fe1\u53f7\uff1b</li> <li>\u57fa\u4e8e\u795e\u7ecf\u5143\u8bb0\u5f55\u7684BCI\u4e3b\u8981\u5229\u7528\u56de\u5f52\u4ea7\u751f\u8fde\u7eed\u7684\u8f93\u51fa\u4fe1\u53f7\uff1b</li> </ul>"},{"location":"bci/bciai/ch5/#_2","title":"\u5206\u7c7b\u6280\u672f","text":""},{"location":"bci/bciai/ch5/#_3","title":"\u4e8c\u5206\u7c7b","text":"<p>\u5206\u7c7b\u5668\u7684\u4efb\u52a1\u662f\u4e3a $p$ \u7ef4\u7684\u7279\u5f81\u5411\u91cf $x$ \u5206\u914d\u7c7b\u522b\u6807\u7b7e $y\\in Y$ \u3002\u6700\u7b80\u5355\u7684\u60c5\u51b5\u5728\u4e24\u7c7b\uff08\u6807\u8bb0\u4e3a $-1$ \u548c $+1$\uff09\u4e4b\u95f4\u8fdb\u884c\u533a\u5206\uff0c\u5373\u4e8c\u5206\u7c7b\u3002</p> <p>\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u901a\u8fc7\u8bad\u7ec3\u6570\u636e\u8ba1\u7b97\u627e\u5230\u4e00\u4e2a\u8fb9\u754c\uff0c\u4ee5\u4f7f\u65b0\u7684\u6570\u636e\u80fd\u88ab\u6b63\u786e\u5206\u7c7b\u3002</p>"},{"location":"bci/bciai/ch5/#_4","title":"\u7ebf\u6027\u5224\u522b\u5206\u6790","text":"<p>\u7ebf\u6027\u5224\u522b\u5206\u6790\uff08LDA\uff09\u662f\u4e00\u4e2a\u7ebf\u6027\u4e8c\u5206\u7c7b\u5668\uff0c\u5c06 $p$ \u7ef4\u8f93\u5165\u5411\u91cf $x$ \u6620\u5c04\u5230\u4e00\u4e2a\u8d85\u5e73\u9762\uff0c\u8be5\u8d85\u5e73\u9762\u5c06\u8f93\u5165\u7a7a\u95f4\u5212\u5206\u4e3a\u4e24\u4e2a\u534a\u7a7a\u95f4\uff0c\u8d85\u5e73\u9762\u516c\u5f0f\u5982\u4e0b\uff1a</p> <p>$$ g(x) = w^T x + w_0 = 0 $$</p> <p>\u8fb9\u754c\u7531\u8d85\u5e73\u9762\u7684\u6cd5\u5411\u91cf $w$ \u548c\u9608\u503c $w_0$ \u6765\u8868\u793a\uff0c\u5b83\u4eec\u7531\u88ab\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\u51b3\u5b9a\u3002</p> <p>\u5bf9\u4e8e\u65b0\u7684\u8f93\u5165\u5411\u91cf $x\\in X^p$ \uff0c\u901a\u8fc7\u5982\u4e0b\u8ba1\u7b97\u5bf9\u5176\u8fdb\u884c\u4e8c\u5206\u7c7b\uff1a</p> <p>$$ y = sign(w^T x + w_0) $$</p> <p></p> <p>LDA\u5b9e\u73b0\u7b80\u5355\u3001\u8fd0\u7b97\u901f\u5ea6\u8f83\u5feb\uff0c\u5df2\u7ecf\u6210\u4e3aBCI\u7814\u7a76\u4e2d\u5e38\u7528\u7684\u5206\u7c7b\u5668\u3002\u5c3d\u7ba1\u7531\u4e8e\u5728LDA\u7684\u63a8\u5bfc\u4e2d\u505a\u4e86\u5f3a\u5047\u8bbe\uff0c\u8bf8\u5982\u975e\u9ad8\u65af\u5206\u5e03\u3001\u5f02\u5e38\u503c\u3001\u566a\u58f0\u7b49\u56e0\u7d20\u4f1a\u964d\u4f4eLDA\u7684\u6027\u80fd\uff0c\u4f46\u603b\u4f53\u4e0aLDA\u80fd\u4ea7\u751f\u597d\u7684\u5206\u7c7b\u7ed3\u679c\u3002</p> <p>LDA\u81f3\u5c11\u6709\u4ee5\u4e0b\u4e24\u79cd\u53d8\u5f0f\uff1a</p> <ul> <li> <p>\u6b63\u5219\u5316\u7ebf\u6027\u5224\u522b\u5206\u6790\uff08RDA\uff09\uff1a</p> <p>\u5c06LDA\u7684\u534f\u65b9\u5dee\u7528\u6b63\u5219\u5316\u5f62\u5f0f\u53d6\u4ee3\uff0c\u4ee5\u63d0\u5347\u6cdb\u5316\u80fd\u529b\u548c\u907f\u514d\u8fc7\u5ea6\u62df\u5408\u3002</p> </li> <li> <p>\u4e8c\u6b21\u5224\u522b\u5206\u6790\uff08QDA\uff09\uff1a</p> <p>\u4e0eLDA\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eQDA\u5141\u8bb8\u4e24\u7c7b\u6709\u4e0d\u540c\u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002</p> </li> </ul>"},{"location":"bci/bciai/ch5/#_5","title":"\u795e\u7ecf\u7f51\u7edc\u4e0e\u611f\u77e5\u5668","text":"<p>\u795e\u7ecf\u7f51\u7edc\uff08ANN\uff09\u53d7\u751f\u7269\u5b66\u4e2d\u795e\u7ecf\u7f51\u7edc\u7684\u542f\u53d1\uff0c\u529b\u56fe\u91cd\u5efa\u5927\u8111\u7f51\u7edc\u7684\u9002\u5e94\u80fd\u529b\uff0c\u4ee5\u4e00\u79cd\u5f3a\u5065\u7684\u65b9\u5f0f\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u5206\u7c7b\u3002</p> <p>\u4e00\u4e2a\u8457\u540d\u7684\u4f8b\u5b50\u662f\u611f\u77e5\u5668\uff08\u53ca\u591a\u5c42\u611f\u77e5\u5668\uff09\u3002\u5355\u5c42\u611f\u77e5\u5668\u8ba1\u7b97\u4e00\u4e2a\u8d85\u5e73\u9762\uff08\u7c7b\u4f3c\u4e8eLDA\uff09\uff1a</p> <p>$$ w^T x + w_0 = 0 $$</p> <p>$$ y = sign(w^T x + w_0) $$</p> <p>\u5176\u4e2d\uff0c\u5411\u91cf $w$ \u8868\u793a\u8fde\u63a5\u8f93\u5165\u4e0e\u795e\u7ecf\u5143\u7684\u201c\u7a81\u89e6\u6743\u503c\u201d\uff0c $-w_0$ \u8868\u793a\u795e\u7ecf\u5143\u7684\u653e\u7535\u9608\u503c\u3002</p> <p>\u5bf9\u6b64\u6709\u4e00\u4e2a\u201c\u795e\u7ecf\u201d\u89c6\u89d2\u7684\u89e3\u91ca\uff1a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u662f\u57fa\u4e8e\u5bf9\u8f93\u5165\u7684\u52a0\u6743\u548c\u8ba1\u7b97\uff0c\u4ee5\u53ca\u5bf9\u52a0\u6743\u548c\u4e0e\u9608\u503c\u7684\u6bd4\u8f83\u3002\uff08\u8fd9\u53ef\u89c6\u4e3a\u4ea7\u751f\u950b\u7535\u4f4d\u9608\u503c\u6a21\u578b\u7684\u4e00\u79cd\u7b80\u5316\u5f62\u5f0f\uff09</p> <p>\u611f\u77e5\u5668\u548cLDA\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6743\u503c\u548c\u9608\u503c\u53c2\u6570\u5982\u4f55\u9002\u5e94\u8f93\u5165\u3002\u53d7\u751f\u7269\u5b66\u542f\u53d1\uff0c\u611f\u77e5\u5668\u4ee5\u5728\u7ebf\u7684\u65b9\u5f0f\u8c03\u8282\u5176\u53c2\u6570\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u8f93\u5165 $x$ \u548c\u671f\u671b\u7684\u8f93\u51fa $y^d$ \uff0c\u5982\u679c\u8f93\u51fa\u8bef\u5dee $y-y^d$ \u4e3a\u6b63\uff0c\u90a3\u4e48\u6b63\u8f93\u5165\u7684\u6743\u503c\u51cf\u5c0f\uff0c\u8d1f\u8f93\u5165\u7684\u6743\u503c\u589e\u5927\uff0c\u5e76\u4e14\u9608\u503c\u589e\u5927\u3002\u8fd9\u79cd\u201c\u5b66\u4e60\u201d\u89c4\u5219\u7684\u51c0\u6548\u5e94\u662f\u51cf\u5c11\u5c06\u6765\u7c7b\u4f3c\u8f93\u5165\u6240\u4ea7\u751f\u7684\u8f93\u51fa\u8bef\u5dee\u3002</p> <p>\u591a\u5c42\u611f\u77e5\u5668\u662f\u611f\u77e5\u5668\u7684\u975e\u7ebf\u6027\u63a8\u5e7f\uff0c\u5176\u4f7f\u7528<code>sigmoid</code>\u8f6f\u9608\u503c\u975e\u7ebf\u6027\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u786c\u9608\u503c\u975e\u7ebf\u6027\u51fd\u6570\u6765\u8868\u793a\u5b83\u4eec\u7684\u795e\u7ecf\u5355\u5143\uff1a</p> <p>$$ y = sigmoid(w^T x + w_0) $$</p> <p>sigmoid\u51fd\u6570\u7684\u8f93\u51fa\u662f0~1\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u5176\u503c\u63a5\u8fd1\u4e8e0\u5219\u8868\u793a\u5c5e\u4e8e\u7c7b\u578b1\uff0c\u63a5\u8fd1\u4e8e1\u5219\u8868\u793a\u5c5e\u4e8e\u7c7b\u578b2 \u3002\u5173\u4e8esigmoid\u4ee5\u53ca\u795e\u7ecf\u7f51\u7edc\u7684\u66f4\u591a\u5185\u5bb9\uff0c\u53c2\u89c1\u4e0b\u6587\u201c\u795e\u7ecf\u7f51\u7edc\u4e0e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u201d\u90e8\u5206\u3002</p>"},{"location":"bci/bciai/ch5/#_6","title":"\u652f\u6301\u5411\u91cf\u673a","text":"<p>\u795e\u7ecf\u7f51\u7edc\u5f88\u5f3a\u5927\uff0c\u4f46\u662f\u5b58\u5728\u5bf9\u8bad\u7ec3\u6570\u636e\u8fc7\u5ea6\u62df\u5408\uff0c\u5bfc\u81f4\u5176\u6cdb\u5316\u80fd\u529b\u53d8\u5dee\u7684\u95ee\u9898\u3002\u8f83\u65b0\u7684\u6280\u672f\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u901a\u5e38\u6bd4\u795e\u7ecf\u7f51\u7edc\u66f4\u53d7\u9752\u7750\uff0c\u6210\u4e3a\u4f17\u591aBCI\u9009\u62e9\u7684\u5206\u7c7b\u7b97\u6cd5\u3002</p> <p>LDA\u548c\u611f\u77e5\u5668\u901a\u8fc7\u9009\u62e9\u8d85\u5e73\u9762\u6765\u5206\u79bb\u4e24\u7c7b\uff0c\u800c\u88ab\u9009\u62e9\u7684\u8d85\u5e73\u9762\u6709\u65e0\u6570\u79cd\u5408\u9002\u7684\u53ef\u80fd\uff0c\u53ef\u4ee5\u8bc1\u660e\u5728\u8fd9\u4e9b\u8d85\u5e73\u9762\u4e2d\uff0c\u9009\u62e9\u4e24\u7c7b\u4e4b\u95f4\u8ddd\u79bb\u6700\u5927\u7684\u8d85\u5e73\u9762\u80fd\u83b7\u5f97\u6700\u597d\u7684\u6cdb\u5316\u80fd\u529b\u3002SVM\u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u5206\u7c7b\u5668\u3002</p> <p></p> <p>\u7ebf\u6027SVM\u5df2\u7ecf\u6210\u529f\u7528\u4e8e\u5927\u91cfBCI\u5e94\u7528\u3002\u7ebf\u6027SVM\u5c31\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u5229\u7528\u6838\u6280\u5de7\uff08kernel trick\uff09\u6765\u6709\u6548\u5b9e\u73b0\u6570\u636e\u7684\u975e\u7ebf\u6027\u6620\u5c04\uff0c\u5c06\u6570\u636e\u6620\u5c04\u5230\u66f4\u9ad8\u7ef4\u7684\u7a7a\u95f4\u4e2d\uff0c\u4f7f\u6570\u636e\u7ebf\u6027\u53ef\u5206\u3002\uff08BCI\u4e2d\u6700\u5e38\u7528\u7684\u6838\u662f\u9ad8\u65af\u6838\u6216\u5f84\u5411\u57fa\u51fd\u6570\uff09</p>"},{"location":"bci/bciai/ch5/#_7","title":"\u96c6\u6210\u5206\u7c7b\u6280\u672f","text":"<p>\u5206\u7c7b\u7684\u96c6\u6210\u65b9\u6cd5\u7ed3\u5408\u591a\u4e2a\u5206\u7c7b\u5668\u7684\u8f93\u51fa\uff0c\u5f62\u6210\u4e00\u4e2a\u6bd4\u4efb\u610f\u5355\u4e00\u5206\u7c7b\u5668\u7684\u6cdb\u5316\u80fd\u529b\u66f4\u597d\u7684\u7efc\u5408\u5206\u7c7b\u5668\u3002</p>"},{"location":"bci/bciai/ch5/#bagging","title":"bagging\u4e0e\u968f\u673a\u68ee\u6797","text":"<p>bagging\u662f\u4e00\u79cd\u6700\u7b80\u5355\u7684\u96c6\u6210\u5b66\u4e60\u65b9\u6cd5\uff0c\u53ef\u6982\u62ec\u5982\u4e0b\uff1a</p> <ol> <li>\u5bf9\u7ed9\u5b9a\u6570\u636e\u96c6\u8fdb\u884c\u6709\u653e\u56de\u62bd\u6837\uff08\u610f\u5473\u7740\u540c\u4e00\u4e2a\u8bad\u7ec3\u96c6\u4e2d\u6837\u672c\u53ef\u80fd\u91cd\u590d\uff09\uff0c\u4ea7\u751fm\u4e2a\u65b0\u7684\u8bad\u7ec3\u96c6\uff1b</li> <li>\u8bad\u7ec3m\u4e2a\u5206\u7c7b\u5668\uff0c\u6bcf\u4e2a\u5206\u7c7b\u5668\u5bf9\u5e94\u4e00\u4e2a\u65b0\u4ea7\u751f\u7684\u8bad\u7ec3\u96c6\uff1b</li> <li>\u901a\u8fc7m\u4e2a\u5206\u7c7b\u5668\u5bf9\u65b0\u7684\u8f93\u5165\u8fdb\u884c\u5206\u7c7b\uff0c\u9009\u62e9\u83b7\u5f97\u6700\u591a\u201c\u6295\u7968\u201d\u7684\u7c7b\u522b\uff1b</li> </ol> <p>\u8003\u8651 $N^{'} = N$ \u8fd9\u4e00\u5178\u578b\u60c5\u51b5\uff08$N^{'}$ \u6307\u7684\u662f\u6bcf\u4e2a\u8bad\u7ec3\u96c6\u7684\u62bd\u6837\u6837\u672c\u6570\uff09\uff0c\u8fd9\u6837\u4ea7\u751f\u7684\u6837\u672c\u96c6\u88ab\u79f0\u4f5c<code>bootstrap\u6837\u672c</code>\u3002</p> <p>\u968f\u673a\u68ee\u6797\u53ef\u80fd\u662f\u5f53\u4eca\u6700\u6d41\u884c\u7684bagging\u6280\u672f\uff0c\u5176\u540d\u5b57\u6e90\u4e8e\u5b83\u4eec\u7531\u8bb8\u591a\u51b3\u7b56\u6811\u5206\u7c7b\u5668\u7ec4\u6210\u3002\u5728\u968f\u673a\u68ee\u6797\u4e2d\uff0c\u8f93\u5165\u5411\u91cf\u9996\u5148\u68ee\u6797\u4e2d\u7684\u6bcf\u4e00\u68f5\u6811\uff0c\u6bcf\u68f5\u6811\u9884\u6d4b\u4e00\u4e2a\u8f93\u51fa\u7c7b\u522b\uff0c\u68ee\u6797\u9009\u62e9\u83b7\u5f97\u6811\u6295\u7968\u6700\u591a\u7684\u7c7b\u522b\u4f5c\u4e3a\u5176\u8f93\u51fa\u3002</p> <p>\u7531\u4e8e\u968f\u673a\u68ee\u6797\u5728\u5177\u6709\u5927\u91cf\u8f93\u5165\u53d8\u91cf\u7684\u5927\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u826f\u597d\uff0c\u4f7f\u5f97\u5b83\u8fd1\u5e74\u6765\u6108\u52a0\u6d41\u884c\u3002\u4f46\u662f\u968f\u673a\u68ee\u6797\u5728BCI\u4e2d\u7684\u5e94\u7528\u4f9d\u7136\u76f8\u5bf9\u8f83\u5c11\u3002</p>"},{"location":"bci/bciai/ch5/#boosting","title":"boosting","text":"<p>boosting\u5bfb\u627e\u4e00\u7cfb\u5217\u5206\u7c7b\u5668\uff0c\u8fd9\u4e9b\u5206\u7c7b\u5668\u7ed9\u4e88\u9884\u6d4b\u9519\u8bef\u7684\u6570\u636e\u70b9\u7684\u6743\u91cd\u9ad8\u4e8e\u9884\u6d4b\u6b63\u786e\u7684\uff0c\u7531\u6b64\u53ef\u4ee5\u627e\u5230\u65b0\u7684\u5206\u7c7b\u5668\uff0c\u5bf9\u5f53\u524d\u5206\u7c7b\u5668\u4e0d\u80fd\u5f88\u597d\u5206\u7c7b\u7684\u6570\u636e\u70b9\u80fd\u8fdb\u884c\u66f4\u597d\u7684\u5206\u7c7b\u3002</p> <p>boosting\u4e0ebagging\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u7684\u65b0\u5206\u7c7b\u5668\u4f9d\u8d56\u4e8e\u4e4b\u524d\u5206\u7c7b\u5668\u7684\u8868\u73b0\u3002</p> <p>boosting\u5bf9\u89e3\u51b3\u5f31\u5206\u7c7b\u5668\u95ee\u9898\uff08\u8fd9\u4e9b\u5f31\u5206\u7c7b\u5668\u7684\u8868\u73b0\u53ef\u80fd\u4ec5\u6bd4\u968f\u673a\u7684\u7ed3\u679c\u597d\u4e00\u4e9b\uff09\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u57fa\u4e8e\u5f31\u5206\u7c7b\u5668\u6784\u5efa\u51fa\u5f3a\u5206\u7c7b\u5668\uff0c\u4ee5\u63d0\u9ad8\u51c6\u786e\u5ea6\u3002</p> <p>\u6216\u8bb8\u6700\u6709\u540d\u7684boosting\u7b97\u6cd5\u662f<code>AdaBoost</code>\u3002</p>"},{"location":"bci/bciai/ch5/#_8","title":"\u591a\u5206\u7c7b","text":"<p>\u4e0a\u8ff0\u8ba8\u8bba\u7684\u5206\u7c7b\u5668\u90fd\u662f\u4e8c\u5206\u7c7b\u7684\uff0c\u800c\u5728BCI\u5e94\u7528\u4e2d\uff0c\u671f\u671b\u7684\u8f93\u51fa\u4fe1\u53f7\u4e2a\u6570\u901a\u5e38\u5927\u4e8e\u4e8c\uff0c\u8fd9\u5c31\u9700\u8981\u4f7f\u7528\u591a\u5206\u7c7b\u65b9\u6cd5\u3002</p> <p>\u591a\u5206\u7c7b\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u7c7b\u5668\u7ed3\u5408\u7684\u65b9\u6cd5\u5f97\u5230\uff1a</p> <ul> <li>\u8bad\u7ec3\u82e5\u5e72\u4e2a\u4e8c\u5206\u7c7b\u5668\uff0c\u5e76\u4f7f\u7528\u591a\u6570\u6295\u7968\u673a\u5236\uff0c\u6bcf\u4e2a\u4e8c\u5206\u7c7b\u5668\u7528\u4e8e\u4e00\u4e2a\u4e24\u7c7b\u7ec4\u5408\uff1b</li> <li>\u91c7\u53d6\u4e00\u5bf9\u591a\u7684\u7b56\u7565\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\uff0c\u8bad\u7ec3\u4e00\u4e2a\u72ec\u7acb\u7684\u5206\u7c7b\u5668\u6765\u5206\u79bb\u8be5\u7c7b\u6570\u636e\u548c\u5176\u4ed6\u7c7b\u522b\u7684\u6570\u636e\uff1b</li> </ul>"},{"location":"bci/bciai/ch5/#_9","title":"\u6700\u8fd1\u90bb","text":"<p>\u6700\u8fd1\u90bb\uff08NN\uff09\u662f\u6700\u7b80\u5355\u7684\u591a\u5206\u7c7b\u6280\u672f\u4e4b\u4e00\uff0c\u8f93\u5165\u88ab\u7b80\u5355\u6307\u5b9a\u4e3a\u5176\u6700\u8fd1\u90bb\u7684\u7c7b\u522b\u3002</p> <p>NN\u5206\u7c7b\u5b58\u5728\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u5b83\u5bf9\u566a\u58f0\u548c\u5f02\u5e38\u503c\u5f88\u654f\u611f\uff0c\u8fd9\u79cd\u6280\u672f\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528k-\u6700\u8fd1\u90bb\uff08k-NN\uff09\u6765\u53d8\u5f97\u66f4\u52a0\u7a33\u5065\u3002\u5728k-NN\u4e2d\uff0c\u8f93\u5165\u88ab\u6307\u5b9a\u4e3ak\u4e2a\u6700\u8fd1\u90bb\u4e2d\u6700\u666e\u904d\u7684\u4e00\u79cd\u7c7b\u522b\u3002</p> <p></p> <p>k-NN\u6280\u672f\u5b58\u5728\u7684\u4e00\u4e2a\u6f5c\u5728\u95ee\u9898\u662f\u5b83\u504f\u5411\u4e8e\u8bad\u7ec3\u96c6\u4e2d\u6700\u591a\u6837\u672c\u6240\u5c5e\u7684\u7c7b\u522b\uff0c\u5176\u6709\u4e00\u79cd\u53d8\u5f0f\uff0c\u628a\u8ddd\u79bb\u548c\u7c7b\u522b\u540c\u65f6\u7eb3\u5165\u8003\u8651\uff0c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p>"},{"location":"bci/bciai/ch5/#_10","title":"\u5b66\u4e60\u77e2\u91cf\u91cf\u5316","text":"<p>\u5b66\u4e60\u77e2\u91cf\u91cf\u5316\uff08LVQ\uff09\u4e2d\uff0c\u5206\u7c7b\u57fa\u4e8e\u6807\u7b7e $Y_i\\in [1,\\cdots ,N_y]$ \u6807\u8bb0\u7684\u7279\u5f81\u5411\u91cf $\\lbrace m_i, Y_i \\rbrace_{i=1}^N$\uff08\u4e5f\u79f0\u4e3a\u7801\u672c\u5411\u91cf\uff0clodebook vector\uff09\u6784\u6210\u7684\u5c0f\u96c6\u5408\u3002\u65b0\u6837\u672c\u7684\u5206\u7c7b\u901a\u8fc7\u5c06\u4e0e\u5b83\u8ddd\u79bb\u6700\u8fd1\u7684\u7801\u672c\u5411\u91cf $m_k$ \u7684\u6807\u7b7e $Y_k$ \u8d4b\u4e88\u6837\u672c\u5b9e\u73b0\u3002</p> <p>LVQ\u4e2d\u7684\u6bcf\u4e2a\u7801\u672c\u5411\u91cf\u7684\u8d21\u732e\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u5728BCI\u4e2d\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u9700\u8981\u5bf9\u4e0d\u540c\u7279\u5f81\u4f5c\u52a0\u6743\u5904\u7406\uff0c\u8fd9\u5c31\u9700\u8981\u4f7f\u7528LVQ\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u5373\u533a\u5206\u654f\u611fLVQ\uff08DSLVQ\uff09\uff0c\u5728\u8ba1\u7b97\u201c\u8ddd\u79bb\u201d\u65f6\u8fdb\u884c\u52a0\u6743\u3002</p>"},{"location":"bci/bciai/ch5/#_11","title":"\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668","text":"<p>\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u662f\u4e00\u79cd\u57fa\u4e8e\u5f3a\u72ec\u7acb\u6027\uff08\u6734\u7d20\uff09\u5047\u8bbe\u8d1d\u53f6\u65af\u51c6\u5219\u7684\u6982\u7387\u5206\u7c7b\u5668\u3002\u5047\u8bbe\u76ee\u6807\u662f\u8981\u6839\u636e\u8f93\u5165\u8ba1\u7b97\u5f97\u5230\u7684\u5927\u91cf\u7279\u5f81 $F_1, F_2, \\cdots , F_n$ \u786e\u5b9a\u7279\u5b9a\u8f93\u5165\u7684\u6240\u5c5e\u7c7b\u522b\uff08\u4ece $N$ \u79cd\u53ef\u80fd\u7684\u7c7b\u522b\u4e2d\u9009\u62e9\uff09\u3002\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u9009\u62e9\u5177\u6709\u6700\u5927\u540e\u9a8c\u6982\u7387\u7684\u7c7b\u522b $i$ \uff1a</p> <p>$$ \\begin{aligned} P(C = i \\vert F_1, F_2, \\cdots , F_n) &amp; = \\frac{P(C=i) P(F_1, F_2, \\cdots , F_n | C=i)}{P(F_1, F_2, \\cdots , F_n)} \\cr &amp; = \\frac{P(C=i) P(F_1 | C=i)P(F_2 | C=i)\\cdots P(F_n | C=i)}{P(F_1,F_2,\\cdots ,F_n)} \\cr &amp; \\propto P(C=i) P(F_1 | C=i)P(F_2 | C=i)\\cdots P(F_n | C=i) \\end{aligned} $$</p>"},{"location":"bci/bciai/ch5/#_12","title":"\u5206\u7c7b\u6027\u80fd\u7684\u8bc4\u4f30","text":""},{"location":"bci/bciai/ch5/#roc","title":"\u6df7\u6dc6\u77e9\u9635\u4e0eROC\u66f2\u7ebf","text":"<p>\u5bf9\u4e8e $N_y \\times N_y$ \u7684\u6df7\u6dc6\u77e9\u9635 $M$ \uff0c\u884c\u8868\u793a\u771f\u5b9e\u7684\u7c7b\u6807\u7b7e\uff0c\u5217\u8868\u793a\u5206\u7c7b\u5668\u7684\u8f93\u51fa\u3002$M$ \u7684\u5bf9\u89d2\u5143\u7d20\u8868\u793a\u6b63\u786e\u5206\u7c7b\u7684\u6837\u672c\uff0c\u975e\u5bf9\u89d2\u5143\u7d20 $M_{ij}$ \u7ed9\u51fa\u4e86\u6709\u591a\u5c11\u7c7b $i$ \u7684\u6837\u672c\u88ab\u8bef\u5206\u7c7b\u4e3a $j$ \u3002</p> <p>\u4e24\u7c7b\u95ee\u9898\u7684\u6df7\u6dc6\u77e9\u9635\u5982\u4e0b\uff1a</p> <p>$$ \\begin{array}{lll} {\\qquad}&amp;{\u6b63}&amp;{\u8d1f}\\cr \\hline {\u6b63}&amp;{\u771f\u9633\u6027\uff08TP\uff09}&amp;{\u5047\u9634\u6027\uff08FN\uff09}\\cr {\u8d1f}&amp;{\u5047\u9633\u6027\uff08FP\uff09}&amp;{\u771f\u9634\u6027\uff08TN\uff09} \\end{array} $$</p> <p>ROC\u66f2\u7ebf\uff08\u201c\u53d7\u8bd5\u8005\u64cd\u4f5c\u7279\u5f81\u201d\u66f2\u7ebf\uff09\u662f\u771f\u9633\u6027\u6bd4\u4f8b\u548c\u5047\u9633\u6027\u6bd4\u4f8b\u7684\u5bf9\u6bd4\u56fe\uff0c\u80fd\u53cd\u6620\u654f\u611f\u6027\u4e0e\u7279\u5f02\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6a2a\u5750\u6807\u4e3a\u5047\u9633\u6027\u7387\uff08$1-$\u7279\u5f02\u6027\uff09\uff0c\u7eb5\u5750\u6807\u4e3a\u771f\u9633\u6027\u7387\uff08\u654f\u611f\u5ea6\uff09\u3002</p> <p>\u6839\u636e\u66f2\u7ebf\u7684\u4f4d\u7f6e\uff0c\u628a\u6574\u4e2a\u56fe\u5206\u6210\u4e24\u90e8\u5206\uff0c\u66f2\u7ebf\u4e0b\u65b9\u90e8\u5206\u7684\u9762\u79ef\uff08AUC\uff09\u8d8a\u5927\uff0c\u8868\u793a\u9884\u6d4b\u51c6\u786e\u6027\u8d8a\u9ad8\uff1b\u66f2\u7ebf\u8d8a\u63a5\u8fd1\u5de6\u4e0a\u89d2\uff0c\u9884\u6d4b\u51c6\u786e\u6027\u8d8a\u9ad8\u3002</p>"},{"location":"bci/bciai/ch5/#kappa","title":"\u5206\u7c7b\u6b63\u786e\u7387\u4e0eKappa\u7cfb\u6570","text":"<p>\u5206\u7c7b\u6b63\u786e\u7387\uff08ACC\uff09\u5b9a\u4e49\u4e3a\u6b63\u786e\u5206\u7c7b\u7684\u6837\u672c\u6570\u4e0e\u6837\u672c\u603b\u6570\u7684\u6bd4\u503c\u3002\u5b9a\u4e49\u9519\u8bef\u7387 $err = 1 - ACC$ \u3002\u5f53\u6bcf\u4e00\u7c7b\u7684\u6837\u672c\u6570\u76ee\u76f8\u540c\u65f6\uff0c\u673a\u4f1a\u6c34\u5e73\uff08\u968f\u673a\uff09 $ACC_0 = 1/N_Y$ ,\u5176\u4e2d $N_Y$ \u8868\u793a\u7c7b\u522b\u6570\u3002</p> <p>kappa\u7cfb\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p>$$ \\kappa = \\frac{ACC - ACC_0}{1 - ACC_0} $$</p> <p>kappa\u7cfb\u6570\u4e0e\u6bcf\u7c7b\u6837\u672c\u7684\u6570\u76ee\u548c\u7c7b\u522b\u6570\u65e0\u5173\u3002$\\kappa = 0$ \u610f\u5473\u7740\u673a\u4f1a\u6c34\u5e73\u7684\u8868\u73b0\uff0c$\\kappa = 1$ \u610f\u5473\u7740\u6700\u597d\u7684\u5206\u7c7b\uff0c$\\kappa &lt; 0$ \u610f\u5473\u7740\u5206\u7c7b\u6027\u80fd\u5dee\u4e8e\u673a\u4f1a\u6c34\u5e73\u3002</p>"},{"location":"bci/bciai/ch5/#_13","title":"\u4fe1\u606f\u4f20\u8f93\u7387","text":"<p>\u4e3a\u6bd4\u8f83BCI\u6027\u80fd\uff0c\u540c\u65f6\u8003\u8651BCI\u7684\u6b63\u786e\u7387\u548c\u901f\u5ea6\u662f\u975e\u5e38\u91cd\u8981\uff0c\u53ef\u4ee5\u5229\u7528\u4fe1\u606f\u8bba\u7684\u6982\u5ff5\uff0c\u6839\u636e\u6bd4\u7279\u7387\u6216\u8005\u4fe1\u606f\u4f20\u8f93\u7387\uff08ITR\uff09\u6765\u91cf\u5316BCI\u7684\u6027\u80fd\u3002</p> <p>$$ B = log_2 (N) + P log_2 (P) + (1-P) log_2 (1-P) / (N-1) $$</p> <p>\u73b0\u5b9e\u60c5\u51b5\u4e0b\u867d\u7136\u4e0d\u4e00\u5b9a\u603b\u80fd\u6ee1\u8db3\u63a8\u5bfc $B$ \u6240\u505a\u5f97\u5047\u8bbe\u6761\u4ef6\uff0c\u4f46\u662f $B$ \u63d0\u4f9b\u4e86\u4e00\u4e2a\u80fd\u591f\u83b7\u5f97\u7684\u6027\u80fd\u4e0a\u9650\u3002</p>"},{"location":"bci/bciai/ch5/#_14","title":"\u4ea4\u53c9\u9a8c\u8bc1","text":"<p>\u4ea4\u53c9\u9a8c\u8bc1\u7528\u4e8e\u5bf9\u9519\u8bef\u7387 $err$ \u7684\u4f30\u8ba1\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u7ed9\u5b9a\u7684\u8f93\u5165\u6570\u636e\u96c6\u7b80\u5355\u5730\u5212\u5206\u4e3a\u4e24\u4e2a\u5b50\u96c6\uff0c\u4e00\u4e2a\u5b50\u96c6\u7528\u4e8e\u8bad\u7ec3\uff0c\u53e6\u4e00\u4e2a\u5b50\u96c6\u7528\u4e8e\u6d4b\u8bd5\uff08hand out \u65b9\u6cd5\uff09\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u6570\u636e\u600e\u6837\u5212\u5206\u5f88\u654f\u611f\u3002</p> <p>\u4e00\u79cd\u66f4\u590d\u6742\u7684\u65b9\u6cd5\u662fK\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff1a\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3aK\u4e2a\u7ef4\u6570\u5927\u81f4\u76f8\u540c\u7684\u5b50\u96c6\uff0c\u5176\u4e2dK-1\u4e2a\u5b50\u96c6\u7528\u4e8e\u8bad\u7ec3\u5206\u7c7b\u5668\uff0c\u5269\u4e0b\u7684\u5b50\u96c6\u7528\u4e8e\u8bad\u7ec3\u3002\u5bf9\u5206\u7c7b\u5668\u8fdb\u884cK\u6b21\u8bad\u7ec3\u548c\u6d4b\u8bd5\uff0c\u4ea7\u751fK\u4e2a\u4e0d\u540c\u7684\u9519\u8bef\u7387\uff0c\u603b\u9519\u8bef\u7387\u53ef\u4ee5\u901a\u8fc7\u6c42\u5e73\u5747\u5f97\u5230\uff1a</p> <p>$$ err = \\frac{1}{K} \\sum_{k=1}^K err_k $$</p> <p>\u5728\u5f88\u591a\u7684\u5e94\u7528\u4e2d\uff0c\u4e00\u822c\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a\u4e09\u4e2a\u5b50\u96c6\uff1a\u4e00\u4e2a\u662f\u7528\u4e8e\u786e\u5b9a\u5206\u7c7b\u5668\u53c2\u6570\u7684\u8bad\u7ec3\u5b50\u96c6\uff0c\u4e00\u4e2a\u662f\u7528\u4e8e\u8c03\u6574\u5206\u7c7b\u5668\u53c2\u6570\u7684\u9a8c\u8bc1\u5b50\u96c6\uff0c\u4e00\u4e2a\u662f\u7528\u4e8e\u62a5\u544a\u4f18\u5316\u5206\u7c7b\u5668\u6027\u80fd\u7684\u6d4b\u8bd5\u5b50\u96c6\u3002\u867d\u7136\u8fd9\u4e9b\u8fc7\u7a0b\u8ba1\u7b97\u91cf\u5927\uff0c\u4f46\u5b83\u4eec\u5bf9\u4e8e\u63d0\u9ad8\u5206\u7c7b\u5668\u7684\u6cdb\u5316\u80fd\u529b\u8d77\u7740\u91cd\u8981\u4f5c\u7528\u3002</p>"},{"location":"bci/bciai/ch5/#_15","title":"\u56de\u5f52\u65b9\u6cd5","text":""},{"location":"bci/bciai/ch5/#_16","title":"\u7ebf\u6027\u56de\u5f52","text":"<p>\u7ebf\u6027\u56de\u5f52\u5047\u8bbe\u4ea7\u751f\u6570\u636e\u7684\u5411\u91cf\u51fd\u6570\u662f\u7ebf\u6027\u7684\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u8bf4\u660e\u7ebf\u6027\u56de\u5f52\uff0c\u8003\u8651\u8f93\u5165 $u$ \u662f $K$ \u7ef4\u5411\u91cf\u3001\u8f93\u51fa $v$ \u662f\u6807\u91cf\u503c\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u4e8e\u662f\u8f93\u51fa\u7531\u7ebf\u6027\u51fd\u6570\u7ed9\u51fa\uff1a</p> <p>$$ v = \\sum_{i=1}^K w_i u_i = w^T u $$</p> <p>\u4e0a\u5f0f\u4e2d\uff0c$w$ \u662f\u9700\u8981\u7531\u8bad\u7ec3\u6570\u636e\u6765\u786e\u5b9a\u7684\u201c\u6743\u201d\u5411\u91cf\u6216\u7ebf\u6027\u6ee4\u6ce2\u5668\u3002\u7ebf\u6027\u6700\u5c0f\u4e8c\u4e58\u56de\u5f52\u5bfb\u627e\u80fd\u51cf\u5c11\u6240\u6709\u8bad\u7ec3\u6837\u672c\u7684\u8f93\u51fa\u8bef\u5dee\u5e73\u65b9\u548c\u7684\u6743\u5411\u91cf $w$\uff1a</p> <p>$$ \\begin{aligned} E(w) &amp;= \\sum_m (d^m - v^m) ^2 \\cr &amp;= \\Vert d-Uw \\Vert ^2 \\end{aligned} $$</p> <p>\u4e0a\u5f0f\u4e2d\uff0c$d$ \u662f\u8bad\u7ec3\u8f93\u51fa\u5411\u91cf\uff0c$U$ \u662f\u8f93\u5165\u77e9\u9635\uff0c\u77e9\u9635\u7684\u884c\u662f\u6765\u81ea\u8bad\u7ec3\u96c6\u7684\u8f93\u5165\u5411\u91cf $u$\u3002\u4e3a\u51cf\u5c0f\u8bef\u5dee\uff0c\u5bf9\u5173\u4e8e $w$ \u7684 $E$ \u6c42\u5bfc\uff0c\u5e76\u5c06\u6c42\u5bfc\u7ed3\u679c\u7f6e\u4e3a $0$\uff0c\u5f97\u5230\uff1a</p> <p>$$ 2 \\cdot U^T (d-Uw) = 0 $$</p> <p>$$ U^T U w = U^T d $$</p> <p>$$ w = (U^T U) ^{-1} U^T d $$</p> <p>\u4f30\u8ba1\u6743\u5411\u91cf\u7684\u4e0a\u8ff0\u65b9\u6cd5\u6709\u65f6\u4e5f\u88ab\u79f0\u4e3a\u5e7f\u4e49\u9006\u6cd5\uff08\u77e9\u9635 $(U^T U)^{-1} U^T$ \u662f\u201c\u4f2a\u9006\u201d\u7684\uff09\u3002</p> <p>\u7ebf\u6027\u56de\u5f52\u5df2\u7ecf\u88ab\u8bc1\u660e\u5728\u5f88\u591a\u4fb5\u5165\u5f0fBCI\u4e2d\u975e\u5e38\u6709\u6548\u3002\u5b83\u901f\u5ea6\u5feb\u4e14\u6613\u4e8e\u8ba1\u7b97\uff0c\u4e3b\u8981\u7f3a\u70b9\u662f\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\u5bf9\u6a21\u578b\u8fc7\u4e8e\u7b80\u5316\uff0c\u6b64\u5916\uff0c\u5b83\u4e5f\u6ca1\u6709\u5728\u8f93\u51fa\u4e2d\u63d0\u4f9b\u4efb\u4f55\u5173\u4e8e\u4e0d\u786e\u5b9a\u6027\u7684\u4f30\u8ba1\u3002</p>"},{"location":"bci/bciai/ch5/#_17","title":"\u795e\u7ecf\u7f51\u7edc\u4e0e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5","text":"<p>\u795e\u7ecf\u7f51\u7edc\u662f\u7528\u4e8e\u975e\u7ebf\u6027\u51fd\u6570\u903c\u8fd1\u7684\u6d41\u884c\u7b97\u6cd5\u3002</p> <p>\u6211\u4eec\u5728\u8ba8\u8bba\u5206\u7c7b\u6280\u672f\u7684\u65f6\u5019\u6d89\u53ca\u4e86\u611f\u77e5\u5668\uff0c\u5b83\u662f\u4e00\u79cd\u795e\u7ecf\u7f51\u7edc\u3002\u9608\u503c\u51fd\u6570\u5bf9\u5206\u7c7b\u662f\u6709\u6548\u7684\uff0c\u4f46\u5bf9\u975e\u7ebf\u6027\u56de\u5f52\u662f\u65e0\u6548\u7684\uff0c\u5bf9\u56de\u5f52\u6765\u8bf4\uff0c\u6d41\u884c\u7684\u9009\u62e9\u662f<code>sigmoid</code>\u8f93\u51fa\u51fd\u6570\uff1a</p> <p>$$ v = g(w^T u) $$</p> <p>$$ g(x) = \\frac{1}{1+e^{-\\beta x}} $$</p> <p>sigmoid\u51fd\u6570\u53ef\u4ee5\u770b\u505a\u662f\u9608\u503c\u51fd\u6570\u66f4\u5e73\u6ed1\u7684\u7248\u672c\uff1a\u5b83\u5c06\u8f93\u5165\u538b\u7f29\u52300~1\u4e4b\u95f4\uff0c\u7528\u53c2\u6570 $\\beta$ \u63a7\u5236\u51fd\u6570\u7684\u659c\u7387\uff08$\\beta$ \u503c\u8d8a\u5927\uff0csigmoid\u51fd\u6570\u8d8a\u63a5\u8fd1\u9608\u503c\u51fd\u6570\uff09\u3002sigmoid\u51fd\u6570\u5bb9\u6613\u6c42\u5bfc\uff0c\u8fd9\u5728\u63a8\u5bfc\u53cd\u5411\u4f20\u64ad\u5b66\u4e60\u89c4\u5219\u65f6\u5c06\u53d8\u5f97\u5f88\u91cd\u8981\u3002</p> <p></p> <p>\u5bf9\u975e\u7ebf\u6027\u56de\u5f52\u6765\u8bf4\uff0c\u6211\u4eec\u611f\u5174\u8da3\u7684\u662f\u5305\u62ec\u591a\u5c42\u795e\u7ecf\u5143\u7684\u7f51\u7edc\uff0c\u7f51\u7edc\u4e2d\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u5c42\u795e\u7ecf\u5143\u7684\u8f93\u5165\u3002\u6700\u5e38\u89c1\u7684\u4e00\u79cd\u591a\u5c42\u7f51\u7edc\u662f\u5305\u62ec\u4e00\u4e2a\u8f93\u5165\u5c42\u3001\u4e00\u4e2a\u201c\u9690\u85cf\u201d\u5c42\u3001\u4e00\u4e2a\u8f93\u51fa\u5c42\u7684\u4e09\u5c42\u7f51\u7edc\uff0c\u81f3\u5c11\u5728\u7406\u8bba\u4e0a\u5df2\u7ecf\u8bc1\u660e\uff0c\u8fd9\u79cd\u7f51\u7edc\u80fd\u591f\u901a\u8fc7\u9690\u85cf\u5c42\u4e2d\u8db3\u591f\u591a\u7684\u795e\u7ecf\u5143\u903c\u8fd1\u4efb\u4f55\u975e\u7ebf\u6027\u51fd\u6570\u3002</p> <p>\u5047\u5b9a\u6709\u4e00\u4e2a\u7531sigmoid\u795e\u7ecf\u5143\u6784\u6210\u7684\u4e09\u5c42\u7f51\u7edc\uff0c\u77e9\u9635 $V$ \u8868\u793a\u8f93\u5165\u5c42\u5230\u9690\u85cf\u5c42\u7684\u6743\u91cd\uff0c\u77e9\u9635 $W$ \u8868\u793a\u9690\u85cf\u5c42\u5230\u8f93\u51fa\u5c42\u7684\u6743\u91cd\u3002\u8f93\u51fa\u5c42\u4e2d\u7b2c $i$ \u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u53ef\u8868\u793a\u4e3a\uff1a</p> <p>$$ v_i = g(\\sum_j W_{ji} g(\\sum_k V_{kj} u_k)) $$</p> <p></p> <p>\u548c\u7ebf\u6027\u56de\u5f52\u4e00\u6837\uff0c\u5176\u76ee\u6807\u4e5f\u662f\u8981\u51cf\u5c11\u8bad\u7ec3\u6570\u636e\u671f\u671b\u7684\u8f93\u51fa\u5411\u91cf\u4e0e\u7531\u7f51\u7edc\u4ea7\u751f\u7684\u5b9e\u9645\u8f93\u51fa\u5411\u91cf\u4e4b\u95f4\u7684\u8bef\u5dee\u3002\u5bf9\u8bad\u7ec3\u4e2d\u6bcf\u4e2a\u8f93\u5165\uff0c\u5176\u8bef\u5dee\u5982\u4e0b\uff1a</p> <p>$$ E(W,V) = \\frac{1}{2} \\sum_i (d_i - v_i) ^2 $$</p> <p>\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e24\u70b9\uff1a</p> <ol> <li>\u7531\u4e8esigmoid\u975e\u7ebf\u6027\u51fd\u6570\u7684\u5b58\u5728\uff0c\u4e0d\u80fd\u50cf\u7ebf\u6027\u56de\u5f52\u90a3\u6837\u76f4\u63a5\u901a\u8fc7\u5c06 $E$ \u7684\u5bfc\u6570\u7f6e\u96f6\u6765\u5bfc\u51fa\u6743\u91cd\u7684\u89e3\u6790\u8868\u8fbe\u5f0f\uff1b</li> <li>\u53ea\u77e5\u9053\u8f93\u51fa\u5c42\u7684\u8bef\u5dee\uff08\u4e0a\u5f0f\uff09\uff1b</li> </ol> <p>\u56e0\u6b64\u9700\u8981\u53cd\u5411\u4f20\u64ad\u8bef\u5dee\u4fe1\u606f\u5230\u7f51\u7edc\u7684\u66f4\u4f4e\u5c42\uff0c\u4ee5\u4fbf\u80fd\u77e5\u9053\u5b83\u4eec\u5bf9\u8f93\u51fa\u8bef\u5dee\u7684\u8d21\u732e\uff0c\u6210\u6bd4\u4f8b\u7684\u4fee\u6b63\u6743\u91cd\uff08\u201c\u4fe1\u4efb\u5206\u914d\u201d\u95ee\u9898\uff09\u3002\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u53ef\u4ee5\u4f5c\u4e3a\u8fd9\u4e24\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> \u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 <p>\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u8bd5\u56fe\u901a\u8fc7\u8ba9\u6743\u91cd $W$ \u548c $V$ \u7684\u51fd\u6570 $E$ \u7684\u68af\u5ea6\u4e0b\u964d\u6765\u51cf\u5c0f\u8f93\u51fa\u8bef\u5dee\u51fd\u6570 $E(W,V)$ \u3002\u8fd9\u610f\u5473\u7740\u66f4\u65b0\u4e0e $-\\frac{\\partial E}{\\partial W}$ \u548c $-\\frac{\\partial E}{\\partial V}$ \u6210\u6b63\u6bd4\u7684\u6743\u91cd\uff0c\u76f4\u5230\u6743\u91cd\u7684\u53d8\u5316\u53d8\u5c0f\uff0c\u8868\u660e\u5df2\u7ecf\u8fbe\u5230\u4e86\u8bef\u5dee\u51fd\u6570\u7684\u5c40\u90e8\u6700\u5c0f\u503c\u3002\u5229\u7528\u94fe\u5f0f\u6cd5\u5219\u80fd\u591f\u5f88\u5bb9\u6613\u5730\u5bfc\u51fa\u7528\u4e8e\u66f4\u65b0\u6743\u91cd $W$ \u5916\u5c42\u7684\u8868\u8fbe\u5f0f\uff1a</p> <p>$$ W_{ji} \\leftarrow W_{ji} - \\epsilon \\frac{\\mathrm{d} E}{\\mathrm{d} W_{ji}} $$</p> <p>$$ \\frac{\\mathrm{d} E}{\\mathrm{d} W_{ji}} = -(d_i - v_i) g \\prime (\\sum_m W_{mi}x_m) x_j $$</p> <p>\u4e0a\u5f0f\u4e2d\uff0c$\\leftarrow$ \u8868\u793a\u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u88ab\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u66ff\u4ee3\uff0c$\\epsilon$ \u662f\u201c\u5b66\u4e60\u7387\u201d\uff080~1\u4e4b\u95f4\u7684\u6b63\u6570\uff09\uff0c$g\\prime$ \u662fsigmoid\u51fd\u6570 $g$ \u7684\u5bfc\u6570\uff0c$x_j$ \u662f\u9690\u85cf\u5c42\u795e\u7ecf\u5143 $j$ \u7684\u8f93\u51fa\uff1a$x_j = g(\\displaystyle{\\sum_k} v_{kj}u_k)$ \u3002</p> <p>\u7528\u4e8e\u66f4\u65b0\u6743\u91cd $V$ \u5185\u5c42\u7684\u8868\u8fbe\u5f0f\u4e5f\u80fd\u5229\u7528\u94fe\u5f0f\u6cd5\u5219\u83b7\u5f97\uff1a</p> <p>$$ V_{kj} \\leftarrow V_{kj} - \\epsilon \\frac{\\mathrm{d} E}{\\mathrm{d} V_{kj}} $$</p> <p>$$ \\frac{\\mathrm{d} E}{\\mathrm{d} V_{kj}} = \\frac{\\mathrm{d} E}{\\mathrm{d} x_j} \\cdot \\frac{\\mathrm{d} x_j}{\\mathrm{d} V_{kj}} $$</p> <p>$$ \\frac{\\mathrm{d} E}{\\mathrm{d} V_{kj}} = [-\\sum_i (d_i - v_i) g\\prime (\\sum_m W_{mi}x_m) W_{ji}] \\cdot [g\\prime (\\sum_n V_{nj}u_n) u_k] $$</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8f93\u51fa\u8bef\u5dee $(d_i - v_i)$ \u5f71\u54cd\u4e86\u6743\u91cd\u5185\u5c42\u7684\u66f4\u65b0\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e00\u5c42\u4e2d\u901a\u8fc7\u5bf9sigmoid\u975e\u7ebf\u6027\u51fd\u6570\u6c42\u5bfc\u6765\u9002\u5f53\u8c03\u6574\u8f93\u51fa\u8bef\u5dee\u3002\u8bef\u5dee\u88ab\u53cd\u5411\u4f20\u64ad\u5230\u66f4\u4f4e\u5c42\uff0c\u56e0\u800c\u7b97\u6cd5\u7531\u6b64\u5f97\u540d\u3002</p> <p>\u5c3d\u7ba1\u8fd9\u79cd\u7f51\u7edc\u5bb9\u6613\u5bf9\u8bad\u7ec3\u6570\u636e\u8fc7\u5ea6\u62df\u5408\u800c\u5bfc\u81f4\u6cdb\u5316\u80fd\u529b\u5dee\uff0c\u8fd9\u79cd\u5b66\u4e60\u8fc7\u7a0b\u8fd8\u662f\u53ef\u4ee5\u63a8\u5e7f\u5230\u4efb\u610f\u6570\u91cf\u7684\u5c42\uff0c\u5305\u62ec\u542b\u6709\u5f88\u591a\u9690\u85cf\u5c42\u7684\u6df1\u5c42\u7f51\u7edc\u3002\u5927\u591a\u6570\u7684BCI\u5e94\u7528\u8d8b\u5411\u4e8e\u4f7f\u7528\u4e09\u5c42\u7f51\u7edc\uff0c\u5e76\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u51b3\u5b9a\u9690\u85cf\u5c42\u795e\u7ecf\u5143\u7684\u6570\u91cf\u3002</p>"},{"location":"bci/bciai/ch5/#_18","title":"\u5f84\u5411\u57fa\u51fd\u6570\u7f51\u7edc","text":"<p>\u8003\u8651\u524d\u9762\u8ba8\u8bba\u8fc7\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff1a</p> <p>$$ v = w^T u $$</p> <p>\u63d0\u9ad8\u8fd9\u79cd\u7ebf\u6027\u6a21\u578b\u529f\u6548\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u4e00\u7ec4 $M$ \u7ef4\u56fa\u5b9a\u7684\u975e\u7ebf\u6027\u57fa\u51fd\u6570\uff08\u201c\u7279\u5f81\u201d\uff09$\\varphi_i$ \uff0c\u5b83\u4eec\u662f\u7531\u8f93\u5165\u5411\u91cf\u5b9a\u4e49\u7684\uff1a</p> <p>$$ v = w^T \\varphi (u) $$</p> <p>\u4e0a\u5f0f\u4e2d\uff0c$\\varphi (u)$ \u4e3a $M$ \u7ef4\u5411\u91cf $[\\varphi_1(u),\\cdots,\\varphi_M(u)]^T$ \u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u8ba8\u8bba\u7684\u7ebf\u6027\u56de\u5f52\u4e2d\u6240\u7528\u7684\u65b9\u6cd5\u6765\u4f30\u8ba1\u7ed9\u5b9a\u7684\u4e00\u7ec4\u57fa\u51fd\u6570\u7684\u6743\u5411\u91cf $w$ \u3002\u5982\u679c\u6bcf\u4e2a\u57fa\u51fd\u6570 $\\varphi_i$ \u4ec5\u4e0e\u5230\u201c\u4e2d\u5fc3\u201d $\\mu_i$ \u7684\u5f84\u5411\u8ddd\u79bb\uff08\u5982\u6b27\u6c0f\u8ddd\u79bb\uff09\u6709\u5173\uff0c\u90a3\u4e48 $\\mu_i(u) = f(\\Vert u-\\mu_i \\Vert)$ \uff0c\u751f\u6210\u7684\u6a21\u578b\u79f0\u4e3a\u5f84\u5411\u57fa\u51fd\u6570\uff08RBF\uff09\u7f51\u7edc\u3002</p> <p>RBF\u7f51\u7edc\u53ef\u4ee5\u770b\u505a\u4e09\u5c42\u795e\u7ecf\u5143\u7f51\u7edc\uff0c\u5176\u4e2d\u8f93\u5165\u5c42\u4e0e\u9690\u85cf\u5c42\u4e4b\u95f4\u7684\u8fde\u63a5\u5b58\u50a8\u7740\u5747\u503c $\\mu_i$ \uff0c\u9690\u85cf\u5c42\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u4e3a $\\mu_i(u)$ \uff0c\u7f51\u7edc\u7684\u8f93\u51fa $v$ \u662f\u9690\u85cf\u5c42\u795e\u7ecf\u5143\u8f93\u51fa\u7684\u7ebf\u6027\u52a0\u6743\u7ec4\u5408\uff1a</p> <p>$$ v = \\sum_{i=1}^M w_i \\varphi_i(u) = w^T \\varphi(u) $$</p> <p>\u5e38\u7528\u7684\u57fa\u51fd\u6570\u662f\u201c\u9ad8\u65af\u6838\u201d\uff1a</p> <p>$$ \\varphi_i(u) = \\mathrm{exp} (-\\Vert u-u_i \\Vert ^2 / 2\\sigma^2) $$</p>"},{"location":"bci/bciai/ch5/#_19","title":"\u9ad8\u65af\u8fc7\u7a0b","text":"<p>\u524d\u9762\u8ba8\u8bba\u7684\u56de\u5f52\u65b9\u6cd5\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u5b83\u4eec\u65e0\u6cd5\u4f30\u8ba1\u8f93\u51fa\u9884\u6d4b\u503c\u7684\u7f6e\u4fe1\u5ea6\u3002\u9ad8\u65af\u8fc7\u7a0b\uff08GP\uff09\u56de\u5f52\u4e3a\u5176\u8f93\u51fa\u7ed3\u679c\u63d0\u4f9b\u4e86\u4e0d\u786e\u5b9a\u6027\u7684\u6d4b\u91cf\u3002\u8be5\u65b9\u6cd5\u8fd8\u5177\u6709\u975e\u53c2\u6570\u5316\u7684\u4f18\u70b9\uff0c\u5373\u8be5\u6a21\u578b\u7ed3\u6784\u80fd\u968f\u7740\u6570\u636e\u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u800c\u4e0d\u4f1a\u4fdd\u6301\u56fa\u5b9a\uff0c\u4ee5\u9002\u5e94\u6570\u636e\u7684\u590d\u6742\u5ea6\u3002</p> \u9ad8\u65af\u8fc7\u7a0b\u5b9e\u4f8b <p>\u5047\u8bbe\u6211\u4eec\u4f7f\u7528\u524d\u9762\u8ba8\u8bbaRBF\u7f51\u7edc\u65f6\u4f7f\u7528\u7684\u6a21\u578b\uff1a</p> <p>$$ v = w^T \\varphi(u) $$</p> <p>\u7136\u800c\uff0c\u73b0\u5728\u91c7\u7528\u4e00\u79cd\u6982\u7387\u65b9\u6cd5\uff0c\u5047\u8bbe $w$ \u670d\u4ece\u4ee5\u4e0b\u5206\u5e03\uff1a</p> <p>$$ p(w) = G(w \\vert 0, \\sigma^2 I) $$</p> <p>\u4e0a\u5f0f\u4e2d\uff0c$G$ \u8868\u793a\u5e73\u5747\u503c\u4e3a $0$ \uff0c\u534f\u65b9\u5dee\u4e3a $\\sigma^2 I$ \u7684\u591a\u53d8\u91cf\u9ad8\u65af\u5206\u5e03\u3002</p> <p>\u7ed9\u5b9a\u4e00\u7ec4\u8f93\u5165\u6570\u636e\u70b9 $u_1, \\cdots, u_N$ \uff0c\u8003\u8651\u8f93\u51fa\u503c $v(u_1), \\cdots, v(u_N)$ \u7684\u8054\u5408\u5206\u5e03\u3002\u7528\u5411\u91cf $\\nu$ \u8868\u793a $[v(u_1), \\cdots, v(u_N)]^T$ \uff0c\u516c\u5f0f\u53ef\u91cd\u5199\u4e3a\uff1a</p> <p>$$ \\nu = \\varPhi w $$</p> <p>\u4e0a\u5f0f\u4e2d\uff0c$\\varPhi$ \u4e3a\u77e9\u9635\uff0c\u5176\u5143\u7d20\u4e3a $\\varPhi_{ji} = \\varphi_i(u_j)$ \u3002</p> <p>\u7531\u4e8e $\\nu$ \u662f\u9ad8\u65af\u5206\u5e03\u53d8\u91cf\uff08\u7531 $w$ \u7684\u5143\u7d20\u7ed9\u51fa\uff09\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u56e0\u6b64 $\\nu$ \u4e5f\u662f\u670d\u4ece\u9ad8\u65af\u5206\u5e03\u7684\uff0c\u5b83\u53ef\u7531\u4e0b\u9762\u516c\u5f0f\u7ed9\u51fa\u7684\u5747\u503c\u548c\u534f\u65b9\u5dee\u6765\u5b8c\u5168\u5b9a\u4e49\uff1a</p> <p>$$ \\mathrm{mean} (v) = E(\\varPhi w) = \\varPhi E(w) = 0 $$</p> <p>$$ \\mathrm{cov} (v) = E(v v^T) = \\varPhi E(w w^T) \\varPhi^T = \\sigma^2 \\varPhi \\varPhi^T = K $$</p> <p>\u4e0a\u5f0f\u4e2d\uff0c$K$ \u79f0\u4e3aGram\u77e9\u9635\uff0c\u5176\u5143\u7d20\u4e3a\uff1a</p> <p>$$ K_{ij} = k(u_i,u_j) = \\sigma^2 \\varphi(u_i)^T \\varphi(u_j) $$</p> <p>\u51fd\u6570 $k(u_i,u_j)$ \u79f0\u4e3a\u6838\u51fd\u6570\u3002</p> <p>\u4ee5\u4e0a\u5173\u4e8e $\\nu$ \u7684\u6a21\u578b\u662f\u9ad8\u65af\u8fc7\u7a0b\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5b83\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u5173\u4e8e\u51fd\u6570 $v(u)$ \u7684\u6982\u7387\u5206\u5e03\uff0c\u8fd9\u4f7f\u5f97\u5bf9\u4efb\u610f $N$ \u503c\u5173\u4e8e $v(u_1), \\cdots, v(u_N)$ \u7684\u8054\u5408\u5206\u5e03\u90fd\u662f\u9ad8\u65af\u5206\u5e03\u3002\u5728\u5bf9\u51fd\u6570 $v(u)$ \u65e0\u4efb\u4f55\u5148\u9a8c\u77e5\u8bc6\u7684\u6761\u4ef6\u4e0b\uff0c\u5047\u8bbe\u5176\u5747\u503c\u4e3a $0$ \uff0c\u8fd9\u610f\u5473\u7740\u9ad8\u65af\u8fc7\u7a0b\u5b8c\u5168\u7531\u534f\u65b9\u5dee\u51fd\u6570 $K$ \u6216\u7b49\u6548\u7684\u6838\u51fd\u6570 $k(u_i,u_j)$ \u786e\u5b9a\u3002</p> <p>\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u7684\u6838\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u5047\u8bbe\u5b9a\u4e49\u4e8e\u8f93\u5165 $u$ \u7684\u57fa\u51fd\u6570 $\\varphi_i$ \u83b7\u53d6\uff0c\u4f46\u6838\u51fd\u6570\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u7531\u4e0b\u5f0f\u7ed9\u51fa\u7684\u9ad8\u65af\u6838\u51fd\u6570\uff1a</p> <p>$$ k(u_i,u_j) = \\mathrm{exp} (-\\Vert u-u_i \\Vert ^2 / 2\\sigma^2) $$</p> <p>\u6838\u51fd\u6570\u53ef\u4ee5\u770b\u505a\u5bf9\u4e24\u4e2a\u8f93\u5165\u4e4b\u95f4\u76f8\u4f3c\u5ea6\u7684\u6d4b\u91cf\uff0c\u5b83\u5f71\u54cd\u51fd\u6570\u7684\u5e73\u6ed1\u5ea6\u7b49\u5c5e\u6027\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4efb\u610f\u51fd\u6570\u90fd\u53ef\u4ee5\u7528\u4f5c\u6838\u51fd\u6570\uff0c\u53ea\u8981\u5bf9\u4e8e\u4efb\u610f\u8f93\u5165\u5176\u76f8\u5173\u77e9\u9635 $K$ \u662f\u534a\u6b63\u5b9a\u7684\u3002\u6838\u51fd\u6570\u7684\u9009\u62e9\u9700\u8981\u7531\u5e94\u7528\u6765\u51b3\u5b9a\uff0c\u800c\u9ad8\u65af\u6838\u51fd\u6570\u662f\u8f83\u4e3a\u666e\u904d\u7684\u9009\u62e9\u3002</p> <p>\u4e3a\u4e86\u5c06\u9ad8\u65af\u8fc7\u7a0b\u7528\u4e8e\u56de\u5f52\uff0c\u9700\u8981\u4e3a\u65b0\u7684\u8f93\u5165 $u_{N+1}$ \u9884\u6d4b\u5176\u8f93\u51fa $v_{N+1}$ \uff0c\u7ed9\u5b9a\u7684\u8bad\u7ec3\u6570\u636e\u7531\u5411\u91cf $\\nu_N = [v_1, \\cdots, v_N]^T$ \u8868\u793a\u7684\u8f93\u51fa\u7ec4\u6210\uff0c\u76f8\u5e94\u7684\u8f93\u5165\u4e3a $u_1, \\cdots, u_N$ \u3002\u671f\u671b\u7684\u540e\u9a8c\u5206\u5e03 $p(v_{N+1} \\vert \\nu_N, u_1, \\cdots, u_N)$ \u4e5f\u662f\u9ad8\u65af\u5206\u5e03\uff0c\u5176\u5747\u503c\u548c\u534f\u65b9\u5dee\u5982\u4e0b\uff1a</p> <p>$$ \\mathrm{mean} = k^T C_N^{-1} \\nu_N $$</p> <p>$$ \\mathrm{variance} = c - k^T C_N^{-1} k $$</p> <p>\u4e0a\u5f0f\u4e2d\uff0c$k$ \u662f\u5305\u542b\u5143\u7d20 $k(u_1,u_{N+1}), i=1,\\cdots,N$\uff08$k$ \u5b9e\u8d28\u4e0a\u6d4b\u91cf\u6bcf\u4e2a\u8bad\u7ec3\u8f93\u5165\u4e0e\u65b0\u8f93\u5165\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff09\u7684\u5411\u91cf\uff0c$C_N$ \u662f\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u5f53 $i\\not=j$ \u65f6\uff0c\u5176\u5143\u7d20\u7531 $C_N(u_i,u_j) = k(u_i,u_j)$ \u8868\u793a\uff0c\u5f53 $i=j$ \u65f6\uff0c\u5176\u5143\u7d20\u7531 $k(u_i,u_j) + \\lambda$ \u8868\u793a\uff0c\u5f0f\u4e2d $i,j=1,\\cdots,N$\uff08\u8fd9\u91cc $\\lambda$ \u662f\u4e0e\u8f93\u51fa\u4e0a\u7684\u566a\u58f0\u76f8\u5173\u7684\u53c2\u6570\uff09\u3002\u6807\u91cf\u503c $c$ \u5b9a\u4e49\u4e3a $c=k(u_{N+1},u_{N+1})+\\lambda$ \u3002</p> <p>\u4ece\u8fd9\u4e9b\u516c\u5f0f\u53ef\u4ee5\u770b\u51fa\uff0c\u8f93\u51fa $v_{N+1}$ \u7684\u540e\u9a8c\u5206\u5e03\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u8fc7\u53bb\u7684\u8bad\u7ec3\u8f93\u5165\u548c\u8f93\u51fa\uff08\u901a\u8fc7 $C_N$ \u4e0e $\\nu_N$\uff09\uff0c\u4e5f\u53d6\u51b3\u4e8e\u65b0\u7684\u8f93\u5165\uff08\u901a\u8fc7 $k$ \u4e0e $c$\uff09\u3002</p> <p>\u8be5\u6a21\u578b\u5177\u6709\u4e00\u4e2a\u4f18\u826f\u7279\u6027\uff1a\u4e0e\u8bad\u7ec3\u6570\u636e\u5bc6\u96c6\u7684\u533a\u57df\u76f8\u6bd4\uff0c\u5728\u8bad\u7ec3\u6570\u636e\u4e0d\u8db3\u6216\u8005\u4e0d\u5b58\u5728\u7684\u533a\u57df\uff0c\u8f93\u51fa\u9884\u6d4b\u503c\u7684\u65b9\u5dee\u8f83\u5927\uff0c\u53cd\u6620\u51fa\u66f4\u5927\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u8fd9\u4e2a\u7279\u6027\u5bf9\u4e8e\u9700\u8981\u63a7\u5236\u81ea\u52a8\u8bbe\u5907\u7684BCI\u5e94\u7528\u975e\u5e38\u6709\u7528\uff0c\u5f53\u9884\u6d4b\u503c\u7684\u4e0d\u786e\u5b9a\u6027\u8f83\u9ad8\u65f6\uff0cBCI\u53ef\u4ee5\u9009\u62e9\u4e0d\u6267\u884c\u547d\u4ee4\uff0c\u4ee5\u907f\u514d\u53d1\u751f\u53ef\u80fd\u7684\u707e\u96be\u6027\u4e8b\u6545\u3002\u4e00\u4e9bBCI\u5e38\u5e38\u4e0d\u5177\u5907\u8fd9\u6837\u7684\u80fd\u529b\uff0c\u5b83\u4eec\u4f7f\u7528\u65e0\u6cd5\u63d0\u4f9b\u8f93\u51fa\u4e0d\u786e\u5b9a\u6027\u4f30\u8ba1\u503c\u7684\u56de\u5f52\u6a21\u578b\uff0c\u5982\u795e\u7ecf\u7f51\u7edc\u3002</p>"},{"location":"cs/","title":"Computer Science","text":"<p> \u7ea6 36 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u8fd9\u91cc\u7528\u6765\u5b58\u653e\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7684\u7b14\u8bb0\uff01</p>"},{"location":"cs/#_1","title":"\u66f4\u65b0\u4e2d","text":"<ul> <li>\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5</li> <li>\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1</li> </ul>"},{"location":"cs/algorithm/fds/","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840","text":"<p> \u7ea6 121 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66\u300a\u6570\u636e\u7ed3\u6784\u57fa\u7840\u300b\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\u4f9d\u636e\u8bfe\u4ef6\u6574\u7406\uff0c\u5185\u5bb9\u6bd4\u8f83\u7b80\u7565\uff0c\u53ef\u4ee5\u7528\u4f5c\u590d\u4e60\u7684\u63d0\u7eb2</li> <li>\u53c2\u8003\u8d44\u6599\uff1a<ul> <li>\u56fe\u7075\u73ed\u5b66\u4e60\u6307\u5357</li> <li>\u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c</li> <li>OI Wiki</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u7b97\u6cd5\u5206\u6790\u57fa\u7840</li> <li>\u57fa\u7840\u6570\u636e\u7ed3\u6784</li> <li>\u6392\u5e8f\u4e0e\u54c8\u5e0c</li> <li>\u9898\u76ee\u96c6\u53ca\u5176\u89e3\u6790\uff0c\u9898\u76ee\u6765\u6e90\uff1a<ul> <li>\u8bfe\u7a0b\u914d\u5957 PTA \u4e60\u9898</li> <li>\u738b\u9053\u300a2023\u5e74\u6570\u636e\u7ed3\u6784\u8003\u7814\u590d\u4e60\u6307\u5bfc\u300b</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/exercise/","title":"\u9898\u76ee\u96c6","text":"<p> \u7ea6 3970 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p> <p>\u8fd9\u7bc7\u7b14\u8bb0\u6536\u96c6\u4e00\u4e9b\u503c\u5f97\u7559\u610f\u7684\u9898\u76ee\uff0c\u7528\u4e8e FDS \u5e94\u8bd5\uff0c\u9898\u76ee\u6765\u6e90\uff1a</p> <ul> <li>\u8bfe\u7a0b\u914d\u5957 PTA \u4e60\u9898\uff0c\u5305\u62ec Homework 1 ~ 15 \u548c Midterm Examination</li> <li>\u738b\u9053\u300a2023\u5e74\u6570\u636e\u7ed3\u6784\u8003\u7814\u590d\u4e60\u6307\u5bfc\u300b\uff0c\u4f5c\u4e3a\u8865\u5145</li> </ul>"},{"location":"cs/algorithm/fds/exercise/#_2","title":"\u7b97\u6cd5\u5206\u6790","text":"<ol> <li> <p>(HW1) The recurrent equations for the time complexities of program P1 and P2 are:    \u2003P1: $T(1)=1, T(N)=T(N/3)+1$    \u2003P2: $T(1)=1, T(N)=3T(N/3)+1$    Then the correct conclusion about their time complexities is:</p> <p> A. they are both $\\Omicron(\\log N)$ B. $\\Omicron(\\log N)$ for P1, $\\Omicron(N)$ for P2 C. they are both $\\Omicron(N)$ D. $\\Omicron(\\log N)$ for P1, $\\Omicron(N\\log N)$ for P2 </p> <p>\u4f7f\u7528\u4e3b\u5b9a\u7406\uff0cP1 \u7b26\u5408\u4e3b\u5b9a\u7406\u7b2c\u4e09\u79cd\u60c5\u51b5\uff08\u53d6 k = 1\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(\\log N)$\uff1bP2 \u7b26\u5408\u4e3b\u5b9a\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(N)$\u3002</p> </li> <li> <p>(HW1) The Fibonacci number sequence {$F_N$} is defined as: $F_0=0$, $F_1=1$, $F_N=F_{N-1}+F_{N-2}$, $N=2,3,...$ The time complexity of the function which calculates $F_N$ recursively is $\\Theta(N!)$. (TRUE of FALSE)</p> <p>\u8003\u8651\u5230\u9012\u5f52\u6811\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u9012\u5f52\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136\u6709\u4e0a\u754c $\\Omicron(2^N)$\u3002</p> <pre><code>int fibonacci(int n) {\n    if (n == 1 || n == 2) return 1;  /* count++ */\n    return fibonacci(n - 1) + fibonacci(n - 2);\n}\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7528 count \u6765\u6807\u8bb0 base case\uff0c\u663e\u7136 count \u7b49\u4e8e\u9012\u5f52\u6811\u7684\u53f6\u8282\u70b9\u6570\u3002\u7a0d\u52a0\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u9012\u5f52\u6811\u7684\u53f6\u8282\u70b9\u6570\u6070\u597d\u7b49\u4e8e\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7b2c n \u9879\u7684\u503c\uff0c\u5373 $f(n)=\\frac{1}{\\sqrt{5}}((\\frac{1+\\sqrt{5}}{2})^ n-(\\frac{1-\\sqrt{5}}{2})^ n)$\uff0c\u6240\u4ee5 $T(N)=\\Theta((\\frac{1+\\sqrt{5}}{2})^ N) \\approx \\Theta(1.618^ N)$\u3002</p> </li> <li> <p>(HW1) The Fibonacci number sequence {$F_N$} is defined as: $F_0=0$, $F_1=1$, $F_N=F_{N-1}+F_{N-2}$, $N=2,3,...$ The space complexity of the function which calculates $F_N$ recursively is:</p> <p> A. $\\Omicron(\\log N)$ B. $\\Omicron(N)$ C. $\\Omicron(F_N)$ D. $\\Omicron(N!)$ </p> <p>\u51fd\u6570\u8c03\u7528\u662f\u901a\u8fc7\u4e00\u79cd\u6808\u7ed3\u6784\u5b9e\u73b0\u7684\uff0c\u5bf9\u4e8e\u9012\u5f52\u800c\u8a00\uff0c\u8c03\u7528\u51fd\u6570\uff08\u5373\u201c\u9012\u201d\uff09\u65f6\u5165\u6808\uff0c\u8fd4\u56de\u51fd\u6570\uff08\u5373\u201c\u5f52\u201d\uff09\u65f6\u51fa\u6808\uff0c\u6240\u4ee5\u8ba1\u7b97\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u76f8\u5f53\u4e8e\u8ba1\u7b97\u6808\u4e2d\u6700\u591a\u6709\u591a\u5c11\u4e2a\u88ab\u8c03\u51fd\u6570\u3002</p> <p>\u5728\u8fd9\u4e2a\u9898\u76ee\u4e2d\uff0c\u6808\u4e2d\u88ab\u8c03\u51fd\u6570\u6570\u91cf\u6700\u5927\u503c\u6070\u597d\u7b49\u4e8e\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u52a0 2\uff0c\u4e5f\u5c31\u662f $N$\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N)$\u3002</p> </li> </ol>"},{"location":"cs/algorithm/fds/exercise/#_3","title":"\u6808\u548c\u961f\u5217","text":"<ol> <li> <p>(HW3) Represent a queue by a singly linked list. Given the current status of the linked list as <code>1-&gt;2-&gt;3</code> where <code>x-&gt;y</code> means <code>y</code> is linked after <code>x</code>. Now if <code>4</code> is enqueued and then a dequeue is done, the resulting status must be:</p> <p> A. <code>1-&gt;2-&gt;3</code> B. <code>2-&gt;3-&gt;4</code> C. <code>4-&gt;1-&gt;2</code> D. not unique </p> <p>\u5355\u5411\u94fe\u8868\u5b9e\u73b0\u7684\u961f\u5217\uff0c\u5165\u961f\u548c\u51fa\u961f\u4e00\u5b9a\u5206\u522b\u5728\u94fe\u8868\u7684\u5c3e\u548c\u5934\u8fdb\u884c\u3002</p> <p>\u961f\u5217\u7528 first \u548c last \u4e24\u4e2a\u6307\u9488\u6765\u6807\u8bb0\u5934\u548c\u5c3e\uff0c\u5047\u8bbe\u6211\u4eec\u628a\u5165\u961f\u548c\u51fa\u961f\u7684\u4f4d\u7f6e\u4e92\u6362\u4e00\u4e0b\uff1a\u5165\u961f\u5728\u94fe\u8868\u7684\u5934\u8fdb\u884c\uff0c\u8fd9\u5e76\u6ca1\u6709\u95ee\u9898\uff1b\u4f46\u51fa\u961f\u5728\u94fe\u8868\u7684\u5c3e\u8fdb\u884c\u5219\u4f1a\u51fa\u9519\uff0c\u5982\u679c\u6211\u4eec\u628a\u5c3e\u8282\u70b9\u5220\u9664\u4e86\uff0c\u90a3\u4e48 last \u5c31\u6ca1\u6709\u529e\u6cd5\u79fb\u52a8\u5230\u65b0\u7684\u5c3e\u8282\u70b9\uff0c\u8fd9\u662f\u94fe\u8868\u7684\u5355\u5411\u6027\u5bfc\u81f4\u7684\u3002</p> </li> <li> <p>(Midterm) If a stack is used to convert the infix expression <code>a+b*c+(d*e+f)*g</code> into a postfix expression, what will be in the stack (listing from bottom up) when <code>f</code> is read?</p> <p> A. +(*+ B. +(+ C. ++(+ D. abcde </p> <p>\u7528\u4e00\u4e2a\u7b26\u53f7\u6808\u6765\u5b9e\u73b0\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u7b54\u6848\u662f B\uff0c\u5177\u4f53\u6b65\u9aa4\u53c2\u89c1\u4e2d\u7f00\u3001\u540e\u7f00\u4e0e\u524d\u7f00\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5148\u5199\u51fa\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u518d\u5224\u65ad\u51fa\u7b54\u6848\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u624b\u6413\u4e2d\u7f00\u8f6c\u540e\u7f00\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u7ed9\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8865\u5168\u62ec\u53f7\uff1a<code>((a+(b*c))+(((d*e)+f)*g))</code></li> <li>\u4ece\u5185\u5230\u5916\uff0c\u9010\u5c42\u5c06\u62ec\u53f7\u5185\u7684\u8868\u8fbe\u5f0f\u8f6c\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u5e76\u53bb\u6389\u62ec\u53f7</li> <li>\u6700\u7ec8\u5f97\u5230\uff1a<code>abc*+de*f+g*+</code></li> </ol> <p>\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u624b\u6413\u4e2d\u7f00\u8f6c\u524d\u7f00\u540c\u6837\u9002\u7528\u3002\u7c7b\u4f3c\u5730\uff0c\u518d\u4ecb\u7ecd\u4e00\u79cd\u624b\u6413\u8868\u8fbe\u5f0f\u6811\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u7ed9\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8865\u5168\u62ec\u53f7\uff1a<code>((a+(b*c))+(((d*e)+f)*g))</code></li> <li>\u53bb\u6389\u6700\u5916\u5c42\u62ec\u53f7\uff0c\u62ec\u53f7\u5916\u7684 <code>+</code> \u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u5176\u5de6\u8fb9\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u4f5c\u4e3a\u53f3\u5b50\u6811</li> <li>\u91cd\u590d\u6b65\u9aa4 b. \u5373\u53ef\u5f97\u5230\u8868\u8fbe\u5f0f\u6811</li> </ol> </li> </ol>"},{"location":"cs/algorithm/fds/exercise/#_4","title":"\u6811","text":"<ol> <li> <p>(HW4) It is always possible to represent a tree by a one-dimensional integer array. (TRUE of FALSE)</p> <p>\u4e8c\u53c9\u6811\u53ef\u4ee5\u7528\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\uff0c\u800c\u4efb\u4f55\u6811\u90fd\u53ef\u4ee5\u8f6c\u53d8\u6210\u4e8c\u53c9\u6811\uff08\u4f7f\u7528 FirstChild-NextSibling \u8868\u793a\u6cd5\uff0c\u5e76\u65cb\u8f6c $45\\degree$ \u5373\u5f97\uff09\uff0c\u6240\u4ee5\u4efb\u4f55\u6811\u90fd\u53ef\u4ee5\u7528\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\u3002</p> </li> <li> <p>(HW4) If a general tree T is converted into a binary tree BT, then which of the following BT traversals gives the same sequence as that of the post-order traversal of T?</p> <p> A. pre-order B. in-order C. post-order D. level-order </p> <p>\u4e00\u822c\u6811 T \u8f6c\u53d8\u4e3a\u4e8c\u53c9\u6811 BT \u7684\u65b9\u6cd5\u5c31\u662f\u7528 FirstChild-NextSibling \u8868\u793a\u6cd5\u5e76\u987a\u65f6\u9488\u65cb\u8f6c $45\\degree$\uff0c\u800c\u7528 FisrtChild-NextSibling \u8868\u793a\u7684\u6811\u662f\u65e0\u6cd5\u5b9a\u4e49\u4e2d\u5e8f\u904d\u5386\u7684\u3002</p> <p>T \u7684\u5148\u5e8f\u904d\u5386\u548c BT \u7684\u5148\u5e8f\u904d\u5386\u662f\u4e00\u6837\u7684\uff0cT \u7684\u540e\u5e8f\u904d\u5386\u548c BT \u7684\u4e2d\u5e8f\u904d\u5386\u662f\u4e00\u6837\u7684\u3002</p> </li> <li> <p>(HW4) There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child. (TRUE of FALSE)</p> <p>\u5047\u8bbe\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff08\u53f6\u8282\u70b9\uff09\u4e2a\u6570\u4e3a $n_0$\uff0c\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\u4e2a\u6570\u4e3a $n_1$\uff0c\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\u4e2a\u6570\u4e3a $n_2$\uff0c\u5219\uff1a</p> <ul> <li>$n_0+n_1+n_2=2016$</li> <li>$n_0=n_2+1$\uff08\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff09</li> <li>$n_1=16$</li> </ul> <p>\u5f97\u5230 $2n_2=1999$\uff0c\u9664\u4e0d\u5c3d\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4e8c\u53c9\u6811\u3002</p> </li> <li> <p>(HW4) Given a tree of degree 3. Suppose that there are 3 nodes of degree 2 and 2 nodes of degree 3. Then the number of leaf nodes must be\uff1a</p> <p> A. 5 B. 6 C. 7 D. 8 </p> <p>\u8fd9\u9053\u9898\u4f7f\u7528\u7684\u5b9a\u7406\u53ef\u4ee5\u89c6\u4f5c\u4e8c\u53c9\u6811\u6027\u8d28 $n_0=n_2+1$ \u7684\u63a8\u5e7f\uff1a\u5bf9\u4e8e\u5ea6\u4e3a $d$ \u7684\u6811\uff0c$n_0=1+\\sum_{i=2}^ {d}((i-1)\\times n_i)$\u3002</p> <p>\u8bc1\u660e\u5982\u4e0b\uff1a</p> <ul> <li>$n=1+\\sum_{i=1}^ {d}(i\\times n_i)$\uff08$n$ \u4e3a\u6811\u4e2d\u7684\u8282\u70b9\u603b\u6570\uff0c\u7b49\u4e8e\u603b\u8fb9\u6570\u52a0 1\uff09</li> <li>$n=\\sum_{i=0}^ {d}n_i$</li> </ul> <p>\u8054\u7acb\u4e0a\u8ff0\u4e24\u5f0f\u5373\u53ef\u5f97\u8bc1\u3002</p> </li> <li> <p>(HW6) For a binary tree, if its pre-order travel sequence is {4,2,1,3,6,5,7}, and its in-order travel sequence is {1,2,3,4,5,6,7}, then which of the following statement is FALSE?</p> <p> A. This is a complete binary tree. B. 4 is the parent of 3. C. All the odd numbers are at leaf nodes. D. This is a binary search tree. </p> <p>\u8fd9\u9898\u9700\u8981\u6839\u636e\u5148\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u786e\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u7b54\u6848\u662f B\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u5148\u5e8f\u904d\u5386\u5e8f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9</li> <li>\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u4e2d\uff0c\u6839\u8282\u70b9\u5de6\u4fa7\u7684\u6570\u90fd\u5728\u5de6\u5b50\u6811\u4e2d\uff0c\u53f3\u4fa7\u7684\u6811\u90fd\u5728\u53f3\u5b50\u6811\u4e2d</li> <li>\u4ece\u800c\u4ece\u5148\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u4e2d\u5206\u522b\u63d0\u53d6\u51fa\u5de6/\u53f3\u5b50\u6811\u7684\u5148\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217</li> <li>\u91cd\u590d\u6b65\u9aa4\u524d\u4e09\u4e2a\u6b65\u9aa4\uff0c\u76f4\u5230\u5f97\u5230\u6700\u7ec8\u7684\u4e8c\u53c9\u6811</li> </ol> <p>\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u6839\u636e\u540e\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u786e\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u540c\u6837\u9002\u7528\uff08\u6ce8\u610f\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u6570\u662f\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\uff09\u3002</p> <p>\u7136\u800c\uff0c\u6839\u636e\u5148\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u7ed3\u679c\u662f\u4e0d\u8db3\u4ee5\u786e\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\uff0c\u4f46\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u6ee1\u4e8c\u53c9\u6811\uff0c\u5177\u4f53\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\u3002</p> </li> <li> <p>\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u5e8f\u5217\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u5206\u522b\u4e3a 1,2,3,4 \u548c 4,3,2,1\uff0c\u8be5\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u4e0d\u4f1a\u662f\uff08  \uff09\u3002</p> <p> A. 1,2,3,4 B. 2,3,4,1 C. 3,2,4,1 D. 4,3,2,1 </p> <p>\u8fd9\u9053\u9898\u76ee\u5f88\u5de7\u5999\uff0c\u56e0\u4e3a\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6070\u597d\u662f\u76f8\u53cd\u7684\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u5ea6\u4e3a 2 \u7684\u8282\u70b9\uff08\u5426\u5219\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u4e0d\u53ef\u80fd\u76f8\u53cd\uff09\u3002</p> <p>1 \u662f\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\uff0c\u800c\u5b83\u53ea\u80fd\u6709\u5de6\u5b50\u6811\u6216\u8005\u53f3\u5b50\u6811\uff0c\u56e0\u6b64\u4e00\u5b9a\u4f4d\u4e8e\u4e2d\u5e8f\u904d\u5386\u7684\u7b2c\u4e00\u4e2a\u6216\u8005\u6700\u540e\u4e00\u4e2a\uff0cABCD \u90fd\u6ee1\u8db3\uff1b\u518d\u8003\u8651\u4ee5 1 \u7684\u5b50\u8282\u70b9 2 \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\uff0c\u5176\u4e5f\u53ea\u80fd\u6709\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\uff0c\u56e0\u6b64\u4e00\u5b9a\u4f4d\u4e8e\u5b50\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u7b2c\u4e00\u4e2a\u6216\u6700\u540e\u4e00\u4e2a\uff0cABD \u6ee1\u8db3\uff0cC \u4e0d\u6ee1\u8db3\u3002</p> </li> <li> <p>\u82e5\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u5e8f\u5217\u4e3a a,e,b,d,c\uff0c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u4e3a b,c,d,e,a\uff0c\u5219\u6839\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff08  \uff09\u3002</p> <p> A. \u53ea\u6709 e B. \u6709 e\u3001b C. \u6709 e\u3001c D. \u65e0\u6cd5\u786e\u5b9a </p> <p>\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u65e0\u6cd5\u552f\u4e00\u786e\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u4f46\u80fd\u786e\u5b9a\u4e8c\u53c9\u6811\u4e2d\u8282\u70b9\u7684\u7956\u5148\u5173\u7cfb\u3002\u5f53\u4e24\u4e2a\u8282\u70b9\u7684\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u5206\u522b\u4e3a u,v \u548c v,u \u65f6\uff0cu \u662f v \u7684\u7956\u5148\u3002</p> <p>\u9996\u5148\uff0ca \u662f\u6839\u8282\u70b9\uff0ce \u662f a \u7684\u4e00\u4e2a\u5b50\u8282\u70b9\u3002\u7136\u540e\u89c2\u5bdf\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\uff0c\u53d1\u73b0 e \u662f b,d,c \u7684\u7956\u5148\uff0c\u6240\u4ee5\u6839\u8282\u70b9 a \u7684\u5b50\u8282\u70b9\u53ea\u6709 e \u4e00\u4e2a\u3002</p> </li> <li> <p>\u5148\u5e8f\u5e8f\u5217\u4e3a a,b,c,d \u7684\u4e0d\u540c\u4e8c\u53c9\u6811\u7684\u4e2a\u6570\u662f\uff08  \uff09\u3002</p> <p> A. 13 B. 14 C. 15 D. 16 </p> <p>\u8fd9\u9053\u9898\u76ee\u5f88\u6709\u6280\u5de7\u6027\u3002</p> <p>\u9996\u5148\u6839\u636e\u5148\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u7684\u9012\u5f52\u7b97\u6cd5\u53ef\u4ee5\u5f97\u51fa\uff1a\u5148\u5e8f\u5e8f\u5217\u548c\u4e2d\u5e8f\u5e8f\u5217\u7684\u5173\u7cfb\u53ef\u4ee5\u89c6\u4f5c\uff0c\u4ee5\u5148\u5e8f\u5e8f\u5217\u4e3a\u5165\u6808\u6b21\u5e8f\uff0c\u4ee5\u4e2d\u5e8f\u5e8f\u5217\u4e3a\u51fa\u6808\u6b21\u5e8f\uff08\u4e2d\u5e8f\u548c\u540e\u5e8f\u540c\u7406\uff09\u3002</p> <p>\u7531\u4e8e\u5148\u5e8f\u548c\u4e2d\u5e8f\u5e8f\u5217\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u539f\u9898\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u5165\u6808\u987a\u5e8f\u4e3a a,b,c,d\uff0c\u6c42\u53ef\u80fd\u7684\u51fa\u6808\u987a\u5e8f\u7684\u4e2a\u6570\u3002</p> <p>\u6700\u540e\u8fd0\u7528\u7ed3\u8bba\uff1a$n$ \u4e2a\u4e0d\u540c\u5143\u7d20\u5165\u6808\uff0c\u51fa\u6808\u5e8f\u5217\u4e2a\u6570\u4e3a $\\frac{1}{n+1}C_{2n}^ n=14$\u3002\u8fd9\u4e2a\u7ed3\u8bba\u7684\u8bc1\u660e\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\u3002</p> </li> <li> <p>\u82e5\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u6709 768 \u4e2a\u8282\u70b9\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u53f6\u8282\u70b9\u7684\u4e2a\u6570\u662f\uff08  \uff09\u3002</p> <p> A. 257 B. 258 C. 384 D. 385 </p> <p>\u4e8c\u53c9\u5806\u7684\u7ed3\u6784\u672c\u8d28\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u56e0\u6b64\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u9898\u76ee\u4e5f\u53ef\u4ee5\u7528\u5806\u76f8\u5173\u77e5\u8bc6\u6765\u89e3\u51b3\u3002</p> <p>\u7531\u5806\uff08\u5b8c\u5168\u4e8c\u53c9\u6811\uff09\u7684\u6027\u8d28\uff0c\u6700\u540e\u4e00\u4e2a\u6709\u513f\u5b50\u7684\u8282\u70b9\u5e8f\u53f7\u662f 768 / 2 = 384\uff0c\u6240\u4ee5\u53f6\u8282\u70b9\u7684\u4e2a\u6570\u662f 768 - 384 = 384\u3002</p> </li> </ol>"},{"location":"cs/algorithm/fds/exercise/#_5","title":"\u5806","text":"<ol> <li> <p>(Midterm) For binary heaps with $N$ elements, the BuildHeap function (which adjust an array of elements into a heap in linear time) does at most $2N\u22122$ comparisons between elements. (TRUE or FALSE)</p> <p>\u7ed3\u8bba\u662f\uff0c\u7ebf\u6027\u5efa\u5806\u6700\u591a\u9700\u8981 $N-1$ \u6b21 percolate down \u64cd\u4f5c\u3002\u6bcf\u6b21 percolate down \u64cd\u4f5c\u90fd\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u6bd4\u8f83\uff0c\u6240\u4ee5\u6700\u591a\u9700\u8981 $2N-2$ \u6b21\u6bd4\u8f83\u3002</p> <p>\u5173\u4e8e\u8fd9\u4e2a\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u6211\u8fd8\u6ca1\u6709\u5b8c\u5168\u590d\u73b0\uff0c\u603b\u89c9\u5f97\u6709\u4e00\u4e9b\u5c0f\u95ee\u9898\u6ca1\u89e3\u51b3\uff0c\u8fd9\u91cc\u5148\u8d34\u51e0\u4e2a\u53c2\u8003\u94fe\u63a5\u7f62\uff1a</p> <ul> <li>OI Wiki</li> <li>Stack Overflow</li> <li>Wikipedia</li> </ul> </li> </ol>"},{"location":"cs/algorithm/fds/exercise/#_6","title":"\u56fe","text":"<ol> <li> <p>(HW8) Given an undirected graph G with 16 edges, where 3 vertices are of degree 4, 4 vertices are of degree 3, and all the other vertices are of degrees less than 3. Then G must have at least __ vertices.</p> <p> A. 10 B. 11 C. 13 D. 15 </p> <p>\u5229\u7528\u65e0\u5411\u56fe\u7684\u5ea6\u7684\u6027\u8d28 $\\sum_{v\\in V}d(v)=2|E|$\uff0c\u6700\u591a\u6709 11 \u4e2a\u8282\u70b9\u3002</p> </li> <li> <p>(HW8) If a graph G is NOT connected and has 35 edges, then it must have at least __ vertices.</p> <p> A. 7 B. 8 C. 9 D. 10 </p> <p>\u8981\u786e\u4fdd 9 \u4e2a\u8282\u70b9\u7684\u56fe\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u662f\u8fde\u901a\u7684\uff0c\u81f3\u5c11\u9700\u8981 C(8,2) + 1 = 29 \u6761\u8fb9\uff0c\u6240\u4ee5\u9898\u76ee\u4e2d\u7684 35 \u6761\u8fb9\u4e00\u5b9a\u4f1a\u628a 9 \u4e2a\u8282\u70b9\u7684\u56fe\u8fde\u901a\u3002</p> <p>\u540c\u7406\uff0c\u8981\u786e\u4fdd 10 \u4e2a\u8282\u70b9\u7684\u56fe\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u662f\u8fde\u901a\u7684\uff0c\u81f3\u5c11\u9700\u8981 C(9,2) + 1 = 37 \u6761\u8fb9\uff0c\u6240\u4ee5\u9898\u76ee\u4e2d\u7684 35 \u6761\u8fb9\u53ef\u80fd\u4f7f 10 \u4e2a\u8282\u70b9\u7684\u56fe\u662f\u975e\u8fde\u901a\u7684\u3002</p> </li> <li> <p>(HW8) A graph with 90 vertices and 20 edges must have at least __ connected component(s).</p> <p> A. 69 B. 70 C. 84 D. 85 </p> <p>\u4e3a\u4e86\u4f7f\u8fde\u901a\u5206\u91cf\u6700\u5c11\uff0c\u7528 20 \u6761\u8fb9\u53bb\u8fde\u901a\u5c3d\u53ef\u80fd\u591a\u7684\u8282\u70b9\u3002\u8003\u8651\u7528 20 \u6761\u8fb9\u5f62\u6210\u4e00\u4e2a\u751f\u6210\u6811\uff0c\u5373\u8fde\u901a 21 \u4e2a\u8282\u70b9\uff0c\u8fd8\u5269\u4e0b 69 \u4e2a\u5b64\u7acb\u8282\u70b9\uff0c\u6240\u4ee5\u5171\u6709 1 + 69 = 70 \u4e2a\u8fde\u901a\u5206\u91cf\u3002</p> <p>\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e73\u9762\u56fe\u7684\u6b27\u62c9\u5b9a\u7406\u6765\u505a\uff08\u8d85\u7eb2\uff09\uff1a</p> <ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c\u6709 $v-e+f=2$</li> <li>\u8bbe\u9898\u76ee\u4e2d\u7684\u56fe\u7531 $k$ \u4e2a\u8fde\u901a\u5206\u91cf\u7ec4\u6210\uff0c\u5219\u6709 $V-E+(F+k-1)=2k$</li> <li>\u7531\u4e8e $F\\geq 1$\uff0c\u6545 $k\\geq 70$</li> </ul> </li> <li> <p>(HW9) If besides finding the shortest path from <code>S</code> to every other vertices, we also need to count the number of different shortest paths, we can modify the Dijkstra algorithm in the following way: add an array <code>count[]</code> so that <code>count[V]</code> records the number of different shortest paths from <code>S</code> to <code>V</code>. Then <code>count[V]</code> shall be initialized as:</p> <p> A. <code>count[S]=1</code> and <code>count[V]=0</code> for other <code>V</code> B. <code>count[V]=1</code> for all vertices C. <code>count[S]=0</code> and <code>count[V]=1</code> for other <code>V</code> D. <code>count[V]=0</code> for all vertices </p> <p>\u8fd9\u9898\u7684\u5173\u952e\u662f\u8981\u7406\u89e3\u6700\u77ed\u8def\u7b97\u6cd5\u7684\u66f4\u65b0\u64cd\u4f5c\uff08\u677e\u5f1b\u64cd\u4f5c\uff09\uff1a\u5bf9\u4e8e\u67d0\u4e2a\u8282\u70b9\uff0c\u603b\u662f\u7528\u5176\u76f4\u63a5\u524d\u9a71\u7684\u4fe1\u606f\u53bb\u66f4\u65b0\u8be5\u8282\u70b9\u7684\u4fe1\u606f\uff08\u4fe1\u606f\u5305\u62ec\u6700\u77ed\u8def\u3001\u6b21\u77ed\u8def\u7b49\uff09\u3002</p> <p>\u8bbe u \u662f v \u7684\u76f4\u63a5\u524d\u9a71\uff0c\u5219\u66f4\u65b0\u64cd\u4f5c\u5728\u8fd9\u9053\u9898\u4e2d\u7684\u8868\u73b0\u4e3a\uff0c\u7528 count[u] \u53bb\u66f4\u65b0 count[v]\uff0c\u5373 count[v] += count[u]\uff0c\u7a0d\u52a0\u601d\u8003\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u4e3a A\u3002</p> </li> <li> <p>(HW11) Apply DFS to a directed acyclic graph, and output the vertex before the end of each recursion. The output sequence will be:</p> <p> A. unsorted B. topologically sorted C. reverse topologically sorted D. none of the above </p> <p>\u9898\u76ee\u4e2d\u7684 DFS \u5728\u9012\u5f52\u8fd4\u56de\u65f6\u8bbf\u95ee\u8282\u70b9\uff08\u7c7b\u6bd4\u540e\u5e8f\u904d\u5386\uff09\uff0c\u56e0\u6b64\u8f93\u51fa\u5e8f\u5217\u662f\u9006\u62d3\u6251\u5e8f\u5217\u3002</p> </li> </ol>"},{"location":"cs/algorithm/fds/exercise/#_7","title":"\u6392\u5e8f","text":"<ol> <li> <p>(HW13) During the sorting, processing every element which is not yet at its final position is called a \"run\". Which of the following cannot be the result after the second run of quicksort?</p> <p> A. 5, 2, 16, 12, 28, 60, 32, 72 B. 2, 16, 5, 28, 12, 60, 32, 72 C. 2, 12, 16, 5, 28, 32, 72, 60 D. 5, 2, 12, 28, 16, 32, 72, 60 </p> <p>\u6839\u636e\u9898\u76ee\u5b9a\u4e49\u7684\u4e00\u8d9f\uff08run\uff09\u7684\u542b\u4e49\uff0c\u5feb\u6392\u4e2d\u6bcf\u4e00\u8d9f\u90fd\u4f1a\u5c06 pivot \u653e\u7f6e\u5728\u5176\u6700\u7ec8\u4f4d\u7f6e\u3002\u56e0\u6b64\u4e24\u8d9f\u4e4b\u540e\u5e94\u8be5\u5df2\u7ecf\u6709 1 + 2 = 3 \u4e2a pivot \u5904\u4e8e\u5176\u6700\u7ec8\u4f4d\u7f6e\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7b2c\u4e8c\u8d9f\u7684\u65f6\u5019\u5de6\u53f3\u4e24\u6bb5\u5e8f\u5217\u89c6\u4f5c\u5e76\u884c\uff0c\u56e0\u6b64\u7b2c\u4e8c\u8d9f\u80fd\u786e\u5b9a 2 \u4e2a pivot \u6700\u7ec8\u4f4d\u7f6e\uff09\u6216\u8005 1 + 1 = 2 \u4e2a pivot \u5904\u4e8e\u5176\u6700\u7ec8\u4f4d\u7f6e\uff08\u8fd9\u79cd\u60c5\u51b5\u8981\u6c42\u7b2c\u4e00\u8d9f\u7684 pivot \u662f\u7b2c\u4e00\u4e2a\u6216\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\u3002</p> <p>pivot \u7684\u7279\u70b9\u662f\u5176\u5de6\u4fa7\u5143\u7d20\u90fd\u6bd4\u5b83\u5c0f\uff0c\u5176\u53f3\u4fa7\u5143\u7d20\u90fd\u6bd4\u5b83\u5927\uff0c\u56db\u4e2a\u9009\u9879\u7684 pivot \u5982\u4e0b\uff1a</p> <ul> <li>A. 5, 2, 16, 12, 28, 60, 32, 72</li> <li>B. 2, 16, 5, 28, 12, 60, 32, 72</li> <li>C. 2, 12, 16, 5, 28, 32, 72, 60</li> <li>D. 5, 2, 12, 28, 16, 32, 72, 60</li> </ul> <p>\u6240\u4ee5 D \u9009\u9879\u662f\u4e0d\u53ef\u80fd\u7684\u3002</p> </li> <li> <p>\u5728\u5185\u90e8\u6392\u5e8f\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u5c1a\u672a\u786e\u5b9a\u6700\u7ec8\u4f4d\u7f6e\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u4e00\u904d\u5904\u7406\u79f0\u4e3a\u4e00\u8d9f\u6392\u5e8f\uff0c\u4e0b\u5217\u6392\u5e8f\u65b9\u6cd5\u4e2d\uff0c\u6bcf\u8d9f\u6392\u5e8f\u7ed3\u675f\u90fd\u81f3\u5c11\u80fd\u591f\u786e\u5b9a\u4e00\u4e2a\u5143\u7d20\u6700\u7ec8\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\uff08  \uff09\u3002    \u2160 \u7b80\u5355\u9009\u62e9\u6392\u5e8f \u2003 \u2161 \u5e0c\u5c14\u6392\u5e8f \u2003 \u2162 \u5feb\u901f\u6392\u5e8f \u2003 \u2163 \u5806\u6392\u5e8f \u2003 \u2164 2\u8def\u5f52\u5e76\u6392\u5e8f</p> <p> A. \u4ec5 \u2160\u3001\u2162\u3001\u2163 B. \u4ec5 \u2160\u3001\u2162\u3001\u2164 C. \u4ec5 \u2161\u3001\u2162\u3001\u2163 D. \u4ec5 \u2162\u3001\u2163\u3001\u2164 </p> <p>\u8fd9\u9053\u9898\u76ee\u6bd4\u8f83\u7b80\u5355\uff0c\u7b54\u6848\u662f A\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\u201c\u4e00\u8d9f\u201d\u7684\u542b\u4e49\u3002</p> </li> <li> <p>\u4e0b\u5217\u6392\u5e8f\u65b9\u6cd5\u4e2d\uff0c\u82e5\u5c06\u987a\u5e8f\u5b58\u50a8\u66f4\u6362\u4e3a\u94fe\u5f0f\u5b58\u50a8\uff0c\u5219\u7b97\u6cd5\u7684\u65f6\u95f4\u6548\u7387\u4f1a\u964d\u4f4e\u7684\u662f\uff08  \uff09\u3002    \u2160 \u63d2\u5165\u6392\u5e8f \u2003 \u2161 \u9009\u62e9\u6392\u5e8f \u2003 \u2162 \u8d77\u6ce1\u6392\u5e8f \u2003 \u2163 \u5e0c\u5c14\u6392\u5e8f \u2003 \u2164 \u5806\u6392\u5e8f</p> <p> A. \u4ec5 \u2160\u3001\u2161 B. \u4ec5 \u2161\u3001\u2162 C. \u4ec5 \u2162\u3001\u2163 D. \u4ec5 \u2163\u3001\u2164 </p> <p>\u8fd9\u9053\u9898\u76ee\u6bd4\u8f83\u7b80\u5355\uff0c\u7b54\u6848\u662f D\uff0c\u5e0c\u5c14\u6392\u5e8f\u548c\u5806\u6392\u5e8f\u90fd\u5229\u7528\u4e86\u987a\u5e8f\u5b58\u50a8\u7684\u968f\u673a\u8bbf\u95ee\u7279\u6027\uff0c\u56e0\u6b64\u66f4\u6362\u4e3a\u94fe\u5f0f\u5b58\u50a8\u65f6\u6548\u7387\u4f1a\u964d\u4f4e\u3002</p> </li> </ol>"},{"location":"cs/algorithm/fds/exercise/#_8","title":"\u54c8\u5e0c","text":"<ol> <li> <p>(HW14) The average search time of searching a hash table with $N$ elements is:</p> <p> A. $\\Omicron(1)$ B. $\\Omicron(\\log N)$ C. $\\Omicron(N)$ D. not determined </p> <p>\u8fd9\u9053\u9898\u76ee\u6709\u4e89\u8bae\uff0c\u7a0d\u5fae\u6709\u70b9\u7275\u5f3a\u3002</p> <p>\u6839\u636e\u8bfe\u5802 PPT \u7684\u8bf4\u6cd5\uff0c\u4e0d\u8003\u8651\u6ea2\u51fa\u7684\u60c5\u51b5\u4e0b\uff0c\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(1)$\u3002</p> <p>\u7b54\u6848\u662f D\uff0c\u4e00\u79cd\u8f83\u4e3a\u5408\u9002\u7684\u89e3\u91ca\u662f\uff0c\u4e0e\u89e3\u51b3\u51b2\u7a81\u7684\u65b9\u6cd5\u6709\u5173\uff0c\u4e0d\u4e00\u5b9a\u80fd\u8fbe\u5230 $\\Omicron(1)$\u3002</p> </li> <li> <p>(HW15) Suppose that the numbers {4371, 1323, 6173, 4199, 4344, 9679, 1989} are hashed into a table of size 10 with the hash function $h(X)=X\\% 10$, and hence have indices {1, 3, 4, 9, 5, 0, 2}. What are their indices after rehashing using $h(X)=X\\% TableSize$ with linear probing?</p> <p> A. 11, 3, 13, 19, 4, 0, 9 B. 1, 3, 4, 9, 5, 0, 2 C. 1, 12, 9, 13, 20, 19, 11 D. 1, 12, 17, 0, 13, 8, 14 </p> <p>\u8fd9\u9053\u9898\u76ee\u6709\u4e89\u8bae\uff0c\u6781\u5176\u4ee4\u4eba\u65e0\u8bed\u3002</p> <p>\u7b54\u6848\u662f C\uff0c\u76ee\u524d\u770b\u5230\u7684\u4e00\u79cd\u89e3\u91ca\u662f\uff0c\u518d\u54c8\u5e0c\u5c06 tableSize \u53d8\u6210\u4e24\u500d\uff0c\u5373 20\uff0c\u5e76\u5411\u4e0a\u53d6\u4e00\u4e2a\u8d28\u6570\uff0c\u56e0\u6b64\u65b0\u7684 tableSize \u662f 23\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u518d\u54c8\u5e0c\u7684\u5bf9\u8c61\u5e94\u5f53\u662f key \u503c {4371, 1323, ...}\uff0c\u800c\u4e0d\u662f\u7b2c\u4e00\u6b21\u54c8\u5e0c\u540e\u5f97\u5230\u7684\u54c8\u5e0c\u503c {1, 3, ...}\u3002</p> </li> </ol>"},{"location":"cs/algorithm/fds/note1/","title":"\u7b97\u6cd5\u5206\u6790\u57fa\u7840","text":"<p> \u7ea6 655 \u4e2a\u5b57  87 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"cs/algorithm/fds/note1/#_2","title":"\u7b97\u6cd5\u4e0e\u5206\u6790","text":"<ul> <li>\u7b97\u6cd5\u662f\u4e00\u4e2a\u88ab\u5b9a\u4e49\u597d\u7684\u3001\u8ba1\u7b97\u673a\u53ef\u6267\u884c\u7684\u3001\u89e3\u51b3\u67d0\u4e00\u95ee\u9898\u7684\u6709\u9650\u6b65\u9aa4</li> <li>\u7b97\u6cd5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u7279\u6027\uff1a<ul> <li>Input</li> <li>Output</li> <li>Definiteness</li> <li>Finiteness</li> <li>Effectiveness (Feasibility)</li> </ul> </li> <li>\u6ce8\u610f\uff0c\u548c algorithm \u4e0d\u540c\uff0cprogram \u4e0d\u9700\u8981 finite\uff08\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\uff09</li> <li>\u7b97\u6cd5\u5206\u6790\u5185\u5bb9\uff1a<ul> <li>\u8fd0\u884c\u65f6\u95f4\uff1a\u4e0e\u673a\u5668\u548c\u7f16\u8bd1\u5668\u6709\u5173</li> <li>\u65f6\u95f4\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u4e0e\u673a\u5668\u548c\u7f16\u8bd1\u5668\u65e0\u5173</li> </ul> </li> <li>\u590d\u6742\u5ea6\u5206\u6790\u5047\u8bbe\uff1a<ul> <li>\u6307\u4ee4\u6309\u987a\u5e8f\u6267\u884c</li> <li>\u6bcf\u6761\u6307\u4ee4\u90fd\u662f\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u65f6\u95f4\u5355\u4f4d\u8fd0\u884c</li> <li>\u6570\u636e\u89c4\u6a21\u662f\u7ed9\u5b9a\u7684\uff0c\u4e14\u6709\u65e0\u9650\u7a7a\u95f4</li> </ul> </li> <li>\u5e38\u89c1\u7684\u5206\u6790\u5185\u5bb9\u6709 $T_{avg}(N)$ \u548c $T_{worst}(N)$\uff0c\u5176\u4e2d $N$ \u662f\u8f93\u5165\u7684\u6570\u636e\u89c4\u6a21\uff08\u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165\uff09</li> </ul>"},{"location":"cs/algorithm/fds/note1/#_3","title":"\u590d\u6742\u5ea6\u6e10\u8fdb\u7b26\u53f7","text":""},{"location":"cs/algorithm/fds/note1/#_4","title":"\u5b9a\u4e49","text":"<ul> <li>$T(N)=\\Omicron(f(N))$\uff0c\u5f53\u5b58\u5728\u6b63\u7684\u5e38\u6570 $c$ \u548c $n_0$\uff0c\u4f7f\u5f97 $\\forall N\\geq n_0,\\;T(N)\\leq c\\cdot f(N)$<ul> <li>\u4e0a\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u5c0f\u4e8e\u7b49\u4e8e $f(N)$</li> </ul> </li> <li>$T(N)=\\Omega(g(N))$\uff0c\u5f53\u5b58\u5728\u6b63\u7684\u5e38\u6570 $c$ \u548c $n_0$\uff0c\u4f7f\u5f97 $\\forall N\\geq n_0,\\;T(N)\\geq c\\cdot f(N)$<ul> <li>\u4e0b\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u5927\u4e8e\u7b49\u4e8e $g(N)$</li> </ul> </li> <li>$T(N)=\\Theta(h(N))$\uff0c\u5f53\u4e14\u4ec5\u5f53 $T(N)=\\Omicron(h(N))$ \u4e14 $T(N)=\\Omega(h(N))$<ul> <li>\u7d27\u754c\uff0c\u5373 $T(N)$ \u4e0e $h(N)$ \u540c\u9636</li> </ul> </li> <li>$T(N)=\\omicron(p(N))$\uff0c\u5f53\u4e14\u4ec5\u5f53 $T(N)=\\Omicron(p(N))$ \u4e14 $T(N)\\not =\\Theta(p(N))$<ul> <li>\u4e25\u683c\u4e0a\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u4e25\u683c\u5c0f\u4e8e $p(N)$</li> </ul> </li> <li>$T(N)=\\omega(q(N))$\uff0c\u5f53\u4e14\u4ec5\u5f53 $T(N)=\\Omega(q(N))$ \u4e14 $T(N)\\not =\\Theta(q(N))$<ul> <li>\u4e25\u683c\u4e0b\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u4e25\u683c\u5927\u4e8e $q(N)$</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note1/#_5","title":"\u89c4\u5219","text":"<ul> <li>\u5982\u679c $T_1(N)=\\Omicron(f(N))$ \u4e14 $T_2(N)=\\Omicron(g(N))$\uff0c\u5219\uff1a<ul> <li>$T_1(N)+T_2(N)=max(\\Omicron(f(N)),\\Omicron(g(N)))$</li> <li>$T_1(N)\\cdot T_2(N)=\\Omicron(f(N)\\cdot g(N))$</li> </ul> </li> <li>\u5982\u679c $T(N)$ \u662f\u6700\u9ad8\u6b21\u6570\u4e3a $k$ \u7684\u591a\u9879\u5f0f\uff0c\u5219 $T(N)=\\Theta(N^ k)$</li> <li>\u5bf9\u4e8e\u4efb\u610f\u5e38\u6570 $k$\uff0c\u5747\u6709 $\\log^ {k}N=\\Omicron(N)$</li> <li>\u901a\u7528\u7684\u5206\u6790\u89c4\u5219\uff1a<ul> <li>for \u5faa\u73af\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u5faa\u73af\u5185\u90e8\u8bed\u53e5\u7684\u6700\u957f\u65f6\u95f4\uff08\u542b for \u5224\u65ad\uff09\u4e58\u5faa\u73af\u6b21\u6570</li> <li>\u5d4c\u5957 for \u5faa\u73af\u8981\u9010\u6b21\u76f8\u4e58</li> <li>\u987a\u5e8f\u8bed\u53e5\u53ea\u9700\u5173\u6ce8\u8017\u65f6\u6700\u957f\u7684\u90e8\u5206</li> <li>if else \u8bed\u53e5\u7684\u8fd0\u884c\u65f6\u95f4\u4e0d\u8d85\u8fc7\u5224\u65ad\u65f6\u95f4 + \u8017\u65f6\u6700\u957f\u7684\u8bed\u53e5\u5757\u7684\u8fd0\u884c\u65f6\u95f4</li> </ul> </li> <li>\u8865\u5145\uff0c\u4e3b\u5b9a\u7406\uff08Master Theorom\uff09\uff0c\u5047\u8bbe\u6709\u9012\u63a8\u5173\u7cfb $T(n)=aT(\\frac{n}{b})+f(n)$\uff0c\u5219\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u6b63\u7684\u5e38\u6570 $\\epsilon$\uff0c\u4f7f\u5f97 $f(n)=\\Omicron(n^ {\\log_{b}a-\\epsilon})$\uff0c\u5219 $T(n)=\\Theta(n^ {\\log_{b}a})$</li> <li>\u5982\u679c\u5b58\u5728\u975e\u8d1f\u5e38\u6570 $\\epsilon$\uff0c\u4f7f\u5f97 $f(n)=\\Omega(n^ {\\log_{b}a+\\epsilon})$\uff0c\u4e14\u5b58\u5728\u5e38\u6570 $c&lt;1$ \u4f7f\u5f97\u5bf9\u4e8e\u5145\u5206\u5927\u7684 $n$ \u6709 $af(\\frac{n}{b})\\leq cf(n)$\uff0c\u5219 $T(n)=\\Theta(f(n))$</li> <li>\u5982\u679c\u5b58\u5728\u975e\u8d1f\u5e38\u6570 $k$\uff0c\u4f7f\u5f97 $f(n)=\\Theta(n^ {\\log_{b}a}\\log^ {k}n)$\uff0c\u5219 $T(n)=\\Theta(n^ {\\log_{b}a}\\log^ {k+1}n)$</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note1/#_6","title":"\u4f8b\uff1a\u6700\u5927\u5b50\u5e8f\u5217\u548c","text":"<ul> <li> <p>$\\Omicron(N^ 3)$\uff0c\u76f4\u63a5\u679a\u4e3e\u5f00\u5934\u7ed3\u5c3e\uff0c\u5e76\u8ba1\u7b97\u4e2d\u95f4\u5b50\u5e8f\u5217\u548c</p> <pre><code>int MaxSubsequenceSum(const int a[], int N)\n{\n    int res = 0;\n    for (int i = 0; i &lt; N; i++) {\n        for (int j = i; j &lt; N; j++) {\n            int tmp = 0;\n            for (int k = i; k &lt;= j; k++) {\n                tmp += a[k];\n            }\n            res = max(res, tmp);\n        }\n    }\n    return res;\n}\n</code></pre> </li> <li> <p>$\\Omicron(N^ 2)$\uff0c\u540c\u6837\u679a\u4e3e\u5f00\u5934\u7ed3\u5c3e\uff0c\u4f46\u5728\u679a\u4e3e\u7684\u540c\u65f6\u8ba1\u7b97\u5b50\u5e8f\u5217\u548c\uff0c\u7701\u53bb\u6700\u5185\u5c42\u5faa\u73af</p> <pre><code>int MaxSubsequenceSum(const int a[], int N)\n{\n    int res = 0;\n    for (int i = 0; i &lt; N; i++) {\n        int tmp = 0;\n        for (int j = i; j &lt; N; j++) {\n            tmp += a[j];\n            res = max(res, tmp);\n        }\n    }\n    return res;\n}\n</code></pre> </li> <li> <p>$\\Omicron(N\\log N)$\uff0c\u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5\uff0c$T(N)=2T(N/2)+cN$\uff0c\u7b26\u5408\u4e3b\u5b9a\u7406\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u53d6 $k=0$</p> <pre><code>int MaxSubsequenceSum(const int a[], int N)\n{\n    return MaxSubSum(a, 0, N-1);\n}\n\nint MaxSubSum(const int a[], int left, int right)\n{\n    if (left == right){\n        if (a[left] &gt; 0){\n            return a[left];\n        } else {\n            return 0;\n        }\n    }\n    int mid = (left + right) / 2;\n    int sumLeft = MaxSubSum(a, left, mid);\n    int sumRight = MaxSubSum(a, mid+1, right);\n    int sumLeftBorder = 0, sumRightBorder = 0;\n    for (int i = mid, int tmp = 0; i &gt;= left; --i) {\n        tmp += a[i];\n        sumLeftBorder = max2(sumLeftBorder, tmp);\n    }\n    for (int i = mid+1, int tmp = 0; i &lt;= right; i++) {\n        tmp += a[i];\n        sumRightBorder = max2(sumRightBorder, tmp);\n    }\n    return max3(sumLeft, sumRight, sumLeftBorder + sumRightBorder);\n}\n</code></pre> </li> <li> <p>$\\Omicron(N)$\uff0c\u52a8\u6001\u89c4\u5212\u601d\u60f3</p> <pre><code>int MaxSubsequenceSum(const int a[], int N)\n{\n    int res = 0, tmp = 0;\n    for (int i = 0; i &lt; N; i++) {\n        tmp += a[i];\n        res = max(res, tmp);\n        tmp = max(tmp, 0);\n    }\n    return res;\n}\n</code></pre> </li> </ul>"},{"location":"cs/algorithm/fds/note1/#_7","title":"\u4f8b\uff1a\u5bf9\u6570\u590d\u6742\u5ea6\u6709\u5173\u95ee\u9898","text":"<ul> <li>\u5bf9\u5206\u67e5\u627e\uff1a$\\Omicron(\\log(N))$</li> <li> <p>\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff1a$\\Omicron(\\log(N))$\uff0c\u56e0\u4e3a $\\text{if}\\;m&gt;n,\\;\\text{then}\\;m\\;\\text{mod}\\;n&lt;m/2$</p> gcd<pre><code>int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n}\n</code></pre> </li> <li> <p>\u5feb\u901f\u5e42\uff1a$\\Omicron(\\log(N))$\uff0c\u5373\u4e8c\u8fdb\u5236\u53d6\u5e42</p> \u975e\u9012\u5f52\u5b9e\u73b0\u9012\u5f52\u5b9e\u73b0 <pre><code>long long binPow(long long a, long long b)\n{\n    long long res = 1;\n    while (b &gt; 0) {\n        if (b &amp; 1) res = res * a;\n        a = a * a;\n        b &gt;&gt;= 1;\n    }\n    return res;\n}\n</code></pre> <pre><code>long long binPow(long long a, long long b)\n{\n    if (0 == b) return 1;\n    long long res = binPow(a, b / 2);\n    if (b % 2) {\n        return res * res * a;\n    } else {\n        return res * res;\n    }\n}\n</code></pre> </li> </ul>"},{"location":"cs/algorithm/fds/note2/","title":"\u57fa\u7840\u6570\u636e\u7ed3\u6784","text":"<p> \u7ea6 5143 \u4e2a\u5b57  246 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 24 \u5206\u949f</p>"},{"location":"cs/algorithm/fds/note2/#_2","title":"\u6808\u548c\u961f\u5217","text":""},{"location":"cs/algorithm/fds/note2/#_3","title":"\u7ebf\u6027\u8868","text":"<ul> <li>\u6570\u7ec4\u5b9e\u73b0</li> <li>\u94fe\u8868\u5b9e\u73b0<ul> <li>\u54e8\u5175\u94fe\u8868\uff0c\u53cc\u5411\u5faa\u73af\u94fe\u8868</li> </ul> </li> <li>\u8865\u5145\uff0c\u7a00\u758f\u77e9\u9635\uff08sparse matrix\uff09\u662f\u5927\u90e8\u5206\u5143\u7d20\u5747\u4e3a 0 \u7684\u77e9\u9635<ul> <li>\u591a\u7ef4\u6570\u7ec4\u5b9e\u73b0\uff0c\u7a7a\u95f4\u6d6a\u8d39\u4e25\u91cd</li> <li>\u591a\u91cd\u94fe\u8868\uff08multilist\uff09\u5b9e\u73b0\uff0c\u4e5f\u79f0\u5341\u5b57\u94fe\u8868\uff08orthogonal linked list\uff09</li> </ul> </li> <li>\u8865\u5145\uff0c\u94fe\u8868\u7684\u6e38\u6807\u5b9e\u73b0\uff08no pointer\uff09<ul> <li>\u4f7f\u7528\u5168\u5c40\u7ed3\u6784\u4f53\u6570\u7ec4\u6765\u5b9e\u73b0\u94fe\u8868\uff0c\u7ef4\u62a4\u5176\u4e2d\u4e00\u4e2a\u5206\u533a freelist \u6765\u5b9e\u73b0 malloc \u548c free</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_4","title":"\u6808\u548c\u961f\u5217\u57fa\u7840","text":"<ul> <li> <p>\u6808\uff08stack\uff09\u662f last-in-first-out (LIFO) \u7684</p> <pre><code>struct Stack {\n    int capacity;\n    int topOfStack;\n    ElementType *array;\n}\n</code></pre> </li> <li> <p>\u6808\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li>\u5165\u6808\uff08push\uff09\uff0c\u5c06\u5143\u7d20\u538b\u5165\u6808\u9876</li> <li>\u51fa\u6808\uff08pop\uff09\uff0c\u5c06\u6808\u9876\u5143\u7d20\u51fa\u6808</li> <li>\u67e5\u770b\u6808\u9876\u5143\u7d20\uff08top\uff09</li> </ul> </li> <li> <p>\u961f\u5217\uff08queue\uff09\u662f first-in-first-out (FIFO) \u7684</p> <pre><code>struct Queue {\n    int capacity;\n    int front, rear;\n    ElementType *array;\n}\n</code></pre> </li> <li> <p>\u961f\u5217\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li>\u5165\u961f\uff08enqueue\uff09\uff0c\u5728\u961f\u5c3e\u63d2\u5165\u5143\u7d20</li> <li>\u51fa\u961f\uff08dequeue\uff09\uff0c\u5728\u961f\u9996\u5f39\u51fa\u5143\u7d20</li> </ul> </li> <li>\u5faa\u73af\u961f\u5217</li> </ul>"},{"location":"cs/algorithm/fds/note2/#_5","title":"\u4e2d\u7f00\u3001\u540e\u7f00\u4e0e\u524d\u7f00","text":"<ul> <li>\u540e\u7f00\uff08postfix\uff09\u8868\u8fbe\u5f0f\uff0c\u6240\u6709\u64cd\u4f5c\u7b26\u7f6e\u4e8e\u64cd\u4f5c\u6570\u7684\u540e\u9762<ul> <li>\u540e\u7f00\u8868\u8fbe\u5f0f\u4e0d\u518d\u8003\u8651\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u4e5f\u4e0d\u9700\u8981\u62ec\u53f7</li> </ul> </li> <li>\u540e\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c$\\Omicron(N)$\uff0c\u7ef4\u62a4\u4e00\u4e2a\u64cd\u4f5c\u6570\u6808<ol> <li>\u8bfb\u5230\u64cd\u4f5c\u6570\uff0c\u5165\u6808</li> <li>\u8bfb\u5230\u64cd\u4f5c\u7b26\uff0c\u5c06\u6808\u9876\u524d\u4e24\u4e2a\u64cd\u4f5c\u6570\u4f9d\u6b21\u51fa\u6808\uff0c\u8fdb\u884c\u8fd0\u7b97\uff0c\u5e76\u628a\u8fd0\u7b97\u7ed3\u679c\u5165\u6808</li> <li>\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u540e\uff0c\u5c06\u6808\u9876\u5143\u7d20\u51fa\u6808\uff0c\u5373\u4e3a\u8868\u8fbe\u5f0f\u7684\u503c</li> </ol> </li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u64cd\u4f5c\u7b26\u6808<ol> <li>\u8bfb\u5230\u64cd\u4f5c\u6570\uff0c\u76f4\u63a5\u8f93\u51fa</li> <li>\u8bfb\u5230\u64cd\u4f5c\u7b26\uff0c\u5c06\u5176\u4e0e\u6808\u9876\u64cd\u4f5c\u7b26\u6bd4\u8f83\u4f18\u5148\u7ea7<ul> <li>pre(top) &gt;= pre(tmp)\uff0c\u6808\u9876\u64cd\u4f5c\u7b26\u51fa\u6808\uff0c\u5e76\u91cd\u590d\u6b65\u9aa4 b.</li> <li>pre(top) &lt; pre(tmp) \u6216\u8005\u6808\u4e3a\u7a7a\uff0c\u64cd\u4f5c\u7b26\u76f4\u63a5\u5165\u6808</li> <li>\u6ce8\u610f\uff0c\u8bfb\u5230\u5de6\u62ec\u53f7\u76f4\u63a5\u5165\u6808\uff0c\u8bfb\u5230\u53f3\u62ec\u53f7\u5c06\u6808\u4e2d\u5143\u7d20\u4f9d\u6b21\u51fa\u6808\u76f4\u81f3\u5de6\u62ec\u53f7\uff0c\u4e22\u5f03\u8fd9\u5bf9\u62ec\u53f7</li> <li>\u6ce8\u610f\uff0c\u4e0a\u8ff0\u9488\u5bf9\u5de6\u7ed3\u5408\u64cd\u4f5c\u7b26\uff0c\u5bf9\u4e8e\u53f3\u7ed3\u5408\u64cd\u4f5c\u7b26\uff08\u5982 $\\text{\\textasciicircum}$\uff09\uff0c\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u76f4\u63a5\u5165\u6808</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u540e\uff0c\u5c06\u6808\u4e2d\u5143\u7d20\u5168\u90e8\u4f9d\u6b21\u51fa\u6808</li> </ol> </li> <li>\u524d\u7f00\uff08prefix\uff09\u8868\u8fbe\u5f0f\uff0c\u6240\u6709\u64cd\u4f5c\u7b26\u7f6e\u4e8e\u64cd\u4f5c\u6570\u7684\u524d\u9762<ul> <li>\u524d\u7f00\u8868\u8fbe\u5f0f\u4e0d\u518d\u8003\u8651\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u4e5f\u4e0d\u9700\u8981\u62ec\u53f7</li> </ul> </li> <li>\u524d\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u548c\u540e\u7f00\u6c42\u503c\u57fa\u672c\u4e00\u81f4\uff0c\u552f\u4e00\u533a\u522b\u662f\u524d\u7f00\u81ea\u53f3\u5411\u5de6\u626b\u63cf\u8868\u8fbe\u5f0f</li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u524d\u7f00\u8868\u8fbe\u5f0f\uff0c\u548c\u4e2d\u7f00\u8f6c\u540e\u7f00\u57fa\u672c\u4e00\u81f4\uff0c\u533a\u522b\u5982\u4e0b\uff1a<ul> <li>\u81ea\u53f3\u5411\u5de6\u626b\u63cf\u8868\u8fbe\u5f0f</li> <li>\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u76f8\u53cd</li> <li>\u5de6\u7ed3\u5408\u64cd\u4f5c\u7b26\u548c\u53f3\u7ed3\u5408\u64cd\u4f5c\u7b26\u76f8\u53cd\uff0c\u4f53\u73b0\u5728\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u7684\u5904\u7406</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u6811\uff08expression tree\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\uff0c\u53f6\u5b50\u8282\u70b9\u5747\u4e3a\u64cd\u4f5c\u6570\uff0c\u5176\u4f59\u8282\u70b9\u5747\u4e3a\u64cd\u4f5c\u7b26</li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u5efa\u6811\uff0c\u7ef4\u62a4\u4e24\u4e2a\u6808\uff0coptr \u6808\u5b58\u50a8\u64cd\u4f5c\u7b26\uff0cexpt \u6808\u5b58\u50a8\u8868\u8fbe\u5f0f\u6811\u6839\u8282\u70b9<ol> <li>\u8bfb\u5230\u64cd\u4f5c\u6570\uff0c\u751f\u6210\u4e00\u4e2a\u53ea\u6709\u6839\u8282\u70b9\u7684\u8868\u8fbe\u5f0f\u6811\uff0c\u5165\u6808 expt</li> <li>\u8bfb\u5230\u64cd\u4f5c\u7b26\uff0c\u5c06\u5176\u4e0e optr \u6808\u9876\u64cd\u4f5c\u7b26\u6bd4\u8f83\u4f18\u5148\u7ea7<ul> <li>pre(top) &gt;= pre(tmp)\uff0c\u6808\u9876\u64cd\u4f5c\u7b26\u51fa\u6808\uff0c\u5c06 expt \u6808\u9876\u524d\u4e24\u68f5\u6811\u51fa\u6808\uff0c\u751f\u6210\u4ee5\u8be5\u64cd\u4f5c\u7b26\u4e3a\u6839\u8282\u70b9\u3001\u4ee5\u8fd9\u4e24\u68f5\u6811\u4e3a\u5de6\u53f3\u5b50\u6811\u7684\u8868\u8fbe\u5f0f\u6811\uff0c\u5165\u6808 expt\uff1b\u91cd\u590d\u6b65\u9aa4 b.</li> <li>pre(top) &lt; pre(tmp) \u6216\u8005\u6808\u4e3a\u7a7a\uff0c\u64cd\u4f5c\u7b26\u76f4\u63a5\u5165\u6808</li> <li>\u6ce8\u610f\uff0c\u8bfb\u5230\u5de6\u62ec\u53f7\u76f4\u63a5\u5165\u6808\uff0c\u8bfb\u5230\u53f3\u62ec\u53f7\u5c06\u6808\u4e2d\u5143\u7d20\u4f9d\u6b21\u51fa\u6808\u76f4\u81f3\u5de6\u62ec\u53f7\uff0c\u4e22\u5f03\u8fd9\u5bf9\u62ec\u53f7</li> <li>\u6ce8\u610f\uff0c\u4e0a\u8ff0\u9488\u5bf9\u5de6\u7ed3\u5408\u64cd\u4f5c\u7b26\uff0c\u5bf9\u4e8e\u53f3\u7ed3\u5408\u64cd\u4f5c\u7b26\uff08\u5982 $\\text{\\textasciicircum}$\uff09\uff0c\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u76f4\u63a5\u5165\u6808</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u540e\uff0c\u5c06 expt \u6808\u9876\u5143\u7d20\u51fa\u6808\uff0c\u5373\u4e3a\u8868\u8fbe\u5f0f\u6811</li> </ol> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_6","title":"\u6811","text":""},{"location":"cs/algorithm/fds/note2/#_7","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u6811\u7531\u6839\u8282\u70b9\uff08root\uff09\uff0c\u4ee5\u53ca 0 \u4e2a\u6216\u591a\u4e2a\u975e\u7a7a\u5b50\u6811\u4e0e\u6839\u901a\u8fc7\u4e00\u6761\u6709\u5411\u8fb9\uff08edge\uff09\u8fde\u63a5\u7ec4\u6210</li> <li>\u4e00\u68f5\u6811\u662f $N$ \u4e2a\u8282\u70b9\u548c $N-1$ \u6761\u8fb9\u7684\u96c6\u5408</li> <li>\u8282\u70b9\u7684\u5b50\u6811\u6570\u91cf\u79f0\u4e3a\u8282\u70b9\u7684\u5ea6\uff08degree\uff09</li> <li>\u4e00\u68f5\u6811\u7684\u5ea6\u662f\u8fd9\u68f5\u6811\u91cc\u6240\u6709\u8282\u70b9\u5ea6\u7684\u6700\u5927\u503c</li> <li>\u81f3\u5c11\u6709\u4e00\u4e2a\u5b50\u6811\u7684\u8282\u70b9\u79f0\u4e3a\u7236\u4eb2\uff08parent\uff09</li> <li>\u7236\u4eb2\u7684\u6bcf\u68f5\u5b50\u6811\u7684\u6839\u8282\u70b9\u79f0\u4e3a\u513f\u5b50\uff08children\uff09</li> <li>\u6709\u76f8\u540c\u7236\u4eb2\u7684\u513f\u5b50\u79f0\u4e3a\u5144\u5f1f\uff08siblings\uff09</li> <li>\u6ca1\u6709\u5b50\u6811\u7684\u8282\u70b9\u79f0\u4e3a\u6811\u53f6\uff08leaf\uff09</li> <li>\u4ece\u8282\u70b9 $n_1$ \u5230 $n_k$ \u7684\u8def\u5f84\uff08path\uff09\u662f\u552f\u4e00\u7684\uff0c\u5176\u957f\u5ea6\uff08length\uff09\u662f\u8def\u5f84\u4e0a\u8fb9\u7684\u6570\u91cf</li> <li>\u8282\u70b9 $n_i$ \u7684\u6df1\u5ea6\uff08depth\uff09\u662f\u4ece\u6839\u5230 $n_i$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u957f\u5ea6</li> <li>\u8282\u70b9 $n_i$ \u7684\u9ad8\u5ea6\uff08height\uff09\u662f\u4ece $n_i$ \u5230\u4e00\u4e2a\u53f6\u8282\u70b9\u7684\u6700\u957f\u957f\u5ea6</li> <li>\u6811\u7684\u9ad8\u5ea6 / \u6df1\u5ea6 = \u6839\u8282\u70b9\u7684\u9ad8\u5ea6 = \u6700\u6df1\u53f6\u8282\u70b9\u7684\u6df1\u5ea6</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u7956\u5148\uff08ancestor\uff09\u662f\u4ece\u6839\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u540e\u88d4\uff08descendants\uff09\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9</li> <li> <p>\u6811\u7684\u8868\u793a\uff1a</p> <ul> <li>\u5217\u8868\u8868\u793a\uff0c\u5b50\u8282\u70b9\u4e2a\u6570\u672a\u77e5\uff0c\u4e0d\u6613\u8868\u793a</li> <li> <p>FirstChild-NextSibling \u8868\u793a\uff0c\u56e0\u4e3a\u513f\u5b50\u987a\u5e8f\u4e0d\u5b9a\uff0c\u6240\u4ee5\u4e00\u68f5\u6811\u7684\u8868\u793a\u65b9\u5f0f\u4e0d\u552f\u4e00</p> <pre><code>typedef struct TreeNode *PtrToNode;\nstruct TreeNode {\n    ElementType element;\n    PtrToNode firstChild, nextSibling;\n};\n</code></pre> </li> <li> <p>\u5c06 FirstChild-NextSibling \u8868\u793a\u7684\u6811\u987a\u65f6\u9488\u65cb\u8f6c $45\\degree$\uff0c\u53ef\u4ee5\u5f97\u5230\u4e8c\u53c9\u6811</p> </li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_8","title":"\u4e8c\u53c9\u6811","text":"<ul> <li>\u4e8c\u53c9\u6811\uff08binary tree\uff09\u662f\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709\u4e24\u4e2a\u513f\u5b50\u7684\u6811<ul> <li>\u4e8c\u53c9\u6811\u7684\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u662f\u6709\u5e8f\u7684\uff0c\u5373\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u540e\u4e8c\u53c9\u6811\u53ef\u80fd\u4f1a\u6539\u53d8</li> </ul> </li> <li>\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff1a<ul> <li>\u7b2c $i$ \u5c42\u7684\u8282\u70b9\u6570\u6700\u591a\u4e3a $2^ i$</li> <li>\u9ad8\u5ea6\u4e3a $k$ \u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709 $2^ {k+1}-1$ \u4e2a\u8282\u70b9\uff0c\u6b64\u65f6\u79f0\u4e3a\u5b8c\u7f8e\u4e8c\u53c9\u6811\uff08perfect binary tree\uff09</li> <li>\u8bb0 $n_0$ \u8868\u793a\u53f6\u8282\u70b9\u6570\uff0c$n_2$ \u8868\u793a\u5ea6\u4e3a $2$ \u7684\u8282\u70b9\u6570\uff0c\u5219 $n_0 = n_2 + 1$</li> </ul> </li> <li>\u659c\u4e8c\u53c9\u6811\uff08skewed binary tree\uff09<ul> <li>\u6240\u6709\u8282\u70b9\u90fd\u53ea\u6709\u5de6\u5b50\u6811\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u5de6\u659c\u6811</li> <li>\u6240\u6709\u8282\u70b9\u90fd\u53ea\u6709\u53f3\u5b50\u6811\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u53f3\u659c\u6811</li> </ul> </li> <li>\u6ee1\u4e8c\u53c9\u6811\uff08full binary tree\uff09<ul> <li>\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u90fd\u662f 0 \u6216 2</li> </ul> </li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\uff08complete binary tree\uff09<ul> <li>\u53ea\u6709\u6700\u4e0b\u9762\u4e24\u5c42\u8282\u70b9\u7684\u5ea6\u53ef\u4ee5\u5c0f\u4e8e 2</li> <li>\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\u90fd\u96c6\u4e2d\u5728\u5de6\u8fb9\u7684\u8fde\u7eed\u4f4d\u7f6e\u4e0a</li> </ul> </li> <li>\u8865\u5145\uff0c\u4e8c\u53c9\u6811\u53ef\u4ee5\u901a\u8fc7\u6570\u7ec4\u6765\u8868\u793a<ul> <li>\u6839\u4e3a tree[1]</li> <li>\u8282\u70b9 tree[i] \u7684\u7236\u4eb2\u4e3a tree[i/2]</li> <li>\u8282\u70b9 tree[i] \u7684\u5de6\u513f\u5b50\u4e3a tree[2i]\uff0c\u53f3\u513f\u5b50\u4e3a tree[2i+1]</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u7ec4\u4e2d\u8282\u70b9\u5e03\u6ee1 tree[1] ~ tree[n]</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_9","title":"\u904d\u5386","text":"<ul> <li> <p>\u5148\u5e8f\u904d\u5386\uff08preorder traversal\uff09</p> <ul> <li> <p>\u6839 -&gt; \u5de6 -&gt; \u53f3</p> <pre><code>void preorder(tree_ptr tree)\n{\n    if (tree) {\n        visit(tree);\n        for (each child C of tree)\n            preorder(C);\n    }\n}\n</code></pre> </li> </ul> </li> <li> <p>\u540e\u5e8f\u904d\u5386\uff08postorder traversal\uff09</p> <ul> <li> <p>\u5de6 -&gt; \u53f3 -&gt; \u6839</p> <pre><code>void postorder(tree_ptr tree)\n{\n    if (tree) {\n        for (each child C of tree)\n            postorder(C);\n        visit(tree);\n    }\n}\n</code></pre> </li> </ul> </li> <li> <p>\u4e2d\u5e8f\u904d\u5386\uff08inorder traversal\uff09</p> <ul> <li>\u5de6 -&gt; \u6839 -&gt; \u53f3</li> <li> <p>\u53ea\u9002\u7528\u4e8e\u4e8c\u53c9\u6811</p> \u9012\u5f52\u5b9e\u73b0\u8fed\u4ee3\u5b9e\u73b0 <pre><code>void inorder(tree_ptr tree)\n{\n    if (tree) {\n        inorder(tree-&gt;left);\n        visit(tree-&gt;element);\n        inorder(tree-&gt;right);\n    }\n}\n</code></pre> <pre><code>void iter_inorder(tree_ptr tree)\n{\n    Stack S = createStack();\n    for (;;) {\n        for (; tree; tree = tree-&gt;left)\n            push(tree, S);\n        tree = top(S); pop(S);\n        if (!tree) break;\n        visit(tree-&gt;element);\n        tree = tree-&gt;right;\n    }\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5c42\u5e8f\u904d\u5386\uff08level order traversal\uff09</p> <ul> <li> <p>\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3</p> <pre><code>void levelorder(tree_ptr tree)\n{\n    enqueue(tree);\n    while (queue is not empty) {\n        visit(T = dequeue());\n        for (each child C of tree)\n            enqueue(C);\n    }\n}\n</code></pre> </li> </ul> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\uff08threaded binary tree\uff09</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5b83\u7684\u5de6\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u904d\u5386\u524d\u9a71\uff08predecessor\uff09\u8282\u70b9</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u513f\u5b50\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5b83\u7684\u53f3\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u904d\u5386\u540e\u7ee7\uff08successor\uff09\u8282\u70b9</li> <li>\u7ebf\u7d22\u4e8c\u53c9\u6811\u5fc5\u987b\u6709\u4e00\u4e2a head node\uff0c\u5176\u5de6\u513f\u5b50\u4e3a\u6839\uff0c\u53f3\u513f\u5b50\u4e3a\u81ea\u8eab</li> <li> <p>\u4f7f\u7528 head node \u662f\u4e3a\u4e86\u8ba9\u4e2d\u5e8f\u904d\u5386\u7684\u59cb\u672b\u4e24\u4e2a\u8282\u70b9\u5206\u522b\u80fd\u6709\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\uff08\u5373 head node\uff09</p> <pre><code>typedef struct ThreadedTreeNode *PtrToThreadedNode;\ntypedef struct PtrToThreadedNode ThreadedTree;\nstruct ThreadedTreeNode {\n    int leftThread, rightThread;  // 0 for child, 1 for thread.\n    ThreadTree left, right;\n    ElementType element;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u80fd\u7ebf\u6027\u5730\u904d\u5386\u4e8c\u53c9\u6811\uff0c\u4ece\u800c\u6bd4\u9012\u5f52\u7684\u4e2d\u5e8f\u904d\u5386\u66f4\u5feb</p> </li> <li>\u4f7f\u7528\u7ebf\u7d22\u4e8c\u53c9\u6811\u80fd\u591f\u65b9\u4fbf\u5730\u627e\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9</li> </ul>"},{"location":"cs/algorithm/fds/note2/#_10","title":"\u4e8c\u53c9\u641c\u7d22\u6811","text":"<ul> <li>\u4e8c\u53c9\u641c\u7d22\u6811\uff08binary search tree\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\uff0c\u975e\u7a7a\u65f6\u6ee1\u8db3\u4e0b\u5217\u6027\u8d28\uff1a<ul> <li>\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e0d\u540c\u7684 key\uff08\u6574\u6570\u578b\uff09</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u7684 key \u90fd\u5c0f\u4e8e\u8be5\u8282\u70b9\u7684 key</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u7684 key \u90fd\u5927\u4e8e\u8be5\u8282\u70b9\u7684 key</li> <li>\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u4e5f\u90fd\u662f\u4e8c\u53c9\u641c\u7d22\u6811</li> </ul> </li> <li>\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u662f\u6709\u5e8f\u7684</li> <li>\u67e5\u627e<ul> <li>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c key \u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684 key\uff0c\u5f80\u5de6\u5b50\u6811\u627e\uff0c\u5426\u5219\u5f80\u53f3\u5b50\u6811\u627e</li> <li>\u76f4\u5230\u627e\u5230 key \u76f8\u7b49\u7684\u8282\u70b9\uff0c\u6216\u8005\u627e\u5230\u7a7a\u8282\u70b9</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(h)$\uff0c$h$ \u4e3a\u6811\u7684\u9ad8\u5ea6<ul> <li>\u7406\u60f3\u60c5\u51b5\u4e0b\u5373 $\\Omicron(\\log n)$\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u9000\u5316\u4e3a $\\Omicron(n)$\uff08\u4f8b\u5982\u659c\u6811\uff09</li> </ul> </li> </ul> </li> <li>\u67e5\u8be2\u6700\u5c0f\u503c\uff1a\u904d\u5386\u5230\u6700\u5de6\u8fb9\u7684\u8282\u70b9</li> <li>\u67e5\u8be2\u6700\u5927\u503c\uff1a\u904d\u5386\u5230\u6700\u53f3\u8fb9\u7684\u8282\u70b9</li> <li>\u63d2\u5165<ul> <li>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c key \u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684 key\uff0c\u5f80\u5de6\u5b50\u6811\u627e\uff0c\u5426\u5219\u5f80\u53f3\u5b50\u6811\u627e</li> <li>\u76f4\u5230\u627e\u5230\u7a7a\u8282\u70b9\uff0c\u7136\u540e\u63d2\u5165\uff1b\u6216\u8005\u627e\u5230 key \u76f8\u7b49\u7684\u8282\u70b9\uff0c\u5ffd\u7565\u672c\u6b21\u63d2\u5165</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(h)$\uff0c$h$ \u4e3a\u6811\u7684\u9ad8\u5ea6</li> </ul> </li> <li>\u5bf9\u4e8e\u540c\u4e00\u5e8f\u5217\uff0c\u63d2\u5165\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u751f\u6210\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u9ad8\u5ea6\u4e5f\u4e0d\u540c</li> <li> <p>\u5220\u9664</p> <ul> <li>\u5220\u9664\u53f6\u8282\u70b9\uff1a\u76f4\u63a5\u5220\u9664\u5373\u53ef</li> <li>\u5220\u9664\u5ea6\u4e3a 1 \u7684\u8282\u70b9\uff1a\u7528\u552f\u4e00\u7684\u513f\u5b50\u66ff\u4ee3\u5b83</li> <li>\u5220\u9664\u5ea6\u4e3a 2 \u7684\u8282\u70b9\uff1a<ul> <li>\u7528\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\uff08\u6216\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u503c\uff09\u66ff\u4ee3\u5b83</li> <li>\u5bf9\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\uff08\u6216\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u503c\uff09\u6267\u884c\u5220\u9664\u64cd\u4f5c</li> </ul> </li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(h)$\uff0c$h$ \u4e3a\u6811\u7684\u9ad8\u5ea6</p> <pre><code>SearchTree delete(ElementType X, SearchTree T)\n{\n    Position TmpCell;\n    if (T == NULL) error(\"not found\");\n    else if (X &lt; T-&gt;element) T-&gt;left = delete(X, T-&gt;left);\n    else if (X &gt; T-&gt;element) T-&gt;right = delete(X, T-&gt;right);\n    else {  /* found element to be deleted */\n        if (T-&gt;left &amp;&amp; T-&gt;right) {\n            TmpCell = findMin(T-&gt;right);\n            T-&gt;element = TmpCell-&gt;element;\n            T-&gt;right = delete(T-&gt;element, T-&gt;right);\n        } else {\n            TmpCell = T;\n            if (T-&gt;left == NULL) T = T-&gt;right;\n            else if (T-&gt;right == NULL) T = T-&gt;left;\n            free(TmpCell);\n        }\n    }\n    return T;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5f53\u5220\u9664\u64cd\u4f5c\u4e0d\u591a\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u61d2\u60f0\uff08lazy\uff09\u65b9\u6cd5</p> <ul> <li>\u7528 flag \u6807\u8bb0\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u88ab\u5220\u9664\uff0c\u8bbf\u95ee\u65f6\u5ffd\u7565\uff0c\u5220\u9664\u65f6\u4e0d\u5fc5 free\uff0c\u91cd\u65b0\u63d2\u5165\u65f6\u4e0d\u5fc5 malloc</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_11","title":"\u5806","text":"<ul> <li>\u5806\uff08heap\uff09\u4e5f\u79f0\u4f5c\u4f18\u5148\u961f\u5217\uff08priority queue\uff09</li> <li> <p>\u4e8c\u53c9\u5806\uff08binary heap\uff09\u662f\u4e00\u79cd\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6ee1\u8db3\uff1a</p> <ul> <li> <p>\u7236\u8282\u70b9\u7684 key \u603b\u662f\u4e0d\u5c0f\u4e8e\uff08\u6216\u4e0d\u5927\u4e8e\uff09\u5176\u5b50\u8282\u70b9\u7684 key\uff08\u5373\u5927\u6839\u5806\u6216\u5c0f\u6839\u5806\uff09</p> <pre><code>struct MinHeap {\n    int size;\n    ElementType elements[MAX_SIZE];  // elements[0] is a sentinel.\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5927\u6839\u5806\u7684\u6839\u8282\u70b9\u5b58\u6709\u6700\u5927 key\uff0c\u5c0f\u6839\u5806\u7684\u6839\u8282\u70b9\u5b58\u6709\u6700\u5c0f key</p> </li> <li> <p>\u63d2\u5165</p> <ul> <li>\u5148\u653e\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u548c\u7236\u8282\u70b9\u6bd4\u8f83 key\uff0c\u4e0d\u6ee1\u8db3\u5806\u6761\u4ef6\u5219\u548c\u7236\u8282\u70b9\u4ea4\u6362</li> <li>\u76f4\u5230\u6ee1\u8db3\u5806\u6761\u4ef6\u4e3a\u6b62</li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(\\log n)$</p> <pre><code>void insert(ElementType X, MinHeap H)\n{\n    if (isFull(H)) {\n        error(\"full heap\");\n        return;\n    }\n    int i = ++H-&gt;size;  /* percolate up */\n    for (; H-&gt;elements[i / 2] &gt; X; i /= 2)\n        H-&gt;elements[i] = H-&gt;elements[i / 2];\n    H-&gt;elements[i] = X;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li>\u5148\u628a\u6700\u540e\u4e00\u4e2a\u53f6\u8282\u70b9\u653e\u5230\u6839\u8282\u70b9\uff0c\u7136\u540e\u548c\u5b50\u8282\u70b9\u6bd4\u8f83 key\uff0c\u4e0d\u6ee1\u8db3\u5806\u6761\u4ef6\u5219\u548c\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u5b50\u8282\u70b9\u4ea4\u6362</li> <li>\u76f4\u5230\u6ee1\u8db3\u5806\u6761\u4ef6\u4e3a\u6b62</li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(\\log n)$</p> <pre><code>ElementType deleteMin(MinHeap H)\n{\n    if (isEmpty(H)) {\n        error(\"empty heap\");\n        return H-&gt;elements[0];\n    }\n    int i, child;  /* percolate down */\n    ElementType minElement = H-&gt;elements[1];\n    ElementType lastElement = H-&gt;elements[H-&gt;size--];\n    for (i = 1; i * 2 &lt;= H-&gt; size; i = child) {\n        child = i * 2;\n        if (child != H-&gt;size &amp;&amp; H-&gt;elements[child + 1] &lt; H-&gt;elements[child])\n            child++;\n        if (lastElement &gt; H-&gt;elements[child])\n            H-&gt;elements[i] = H-&gt;elements[child];\n        else break;\n    }\n    H-&gt;elements[i] = lastElement;\n    return minElement;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5411\u4e0a\u8c03\u6574\uff08percolate up\uff09\uff1a\u81ea\u4e0b\u800c\u4e0a\u5806\u5316\uff0c\u5373\u8fd9\u4e2a\u5143\u7d20\u53ef\u80fd\u4f1a\u5411\u4e0a\u79fb\u52a8</p> <ul> <li>\u7b2c $k$ \u5c42\u8282\u70b9\u5411\u4e0a\u8c03\u6574\u7684\u590d\u6742\u5ea6\u4e3a $\\Omicron(k)$</li> </ul> </li> <li>\u5411\u4e0b\u8c03\u6574\uff08percolate down\uff09\uff1a\u81ea\u4e0a\u800c\u4e0b\u5806\u5316\uff0c\u5373\u8fd9\u4e2a\u5143\u7d20\u53ef\u80fd\u4f1a\u5411\u4e0b\u79fb\u52a8<ul> <li>\u7b2c $k$ \u5c42\u8282\u70b9\u5411\u4e0b\u8c03\u6574\u7684\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log n-k)$</li> </ul> </li> <li>\u589e\u52a0\u6216\u51cf\u5c11\u67d0\u4e2a\u8282\u70b9\u7684 key\uff0c\u53ea\u9700\u8981\u76f8\u5e94\u5730 percolate up \u6216 down \u4e00\u6b21\u5373\u53ef</li> <li>\u5220\u9664\u67d0\u4e2a\u975e\u6700\u5927\u6700\u5c0f\u503c\u8282\u70b9<ul> <li>\u5148\u628a\u8fd9\u4e2a\u8282\u70b9\u7684 key \u589e\u52a0\uff08\u6216\u51cf\u5c11\uff09\u5230\u6700\u5927\uff08\u6216\u6700\u5c0f\uff09</li> <li>\u5220\u9664\u6700\u5927\uff08\u6216\u6700\u5c0f\uff09\u8282\u70b9</li> </ul> </li> <li> <p>\u5efa\u5806</p> <ul> <li>\u4ece\u4e00\u4e2a\u7a7a\u7684\u5806\u5f00\u59cb\uff0c\u63d2\u5165 n \u4e2a\u5143\u7d20\uff0c\u4e0d\u8003\u8651\u987a\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(n\\log n)$</li> <li> <p>\u76f4\u63a5\u5c06\u8fd9\u4e2a\u5e8f\u5217\u5f53\u4f5c\u4e8c\u53c9\u6811\uff0c\u539f\u5730\u8c03\u6574\u5b9e\u73b0\u5806\u5316</p> <ul> <li> <p>\u65b9\u6cd5\u4e00\uff0c\u4ece\u6839\u5f00\u59cb\uff0c\u6309 BFS \u5e8f\u5411\u4e0a\u8c03\u6574\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(n\\log n)$</p> <pre><code>void buildHeap1(void) {\n    for (i = 1; i &lt;= n; i++) percolateUp(i);\n}\n</code></pre> </li> <li> <p>\u65b9\u6cd5\u4e8c\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u9010\u4e2a\u5411\u4e0b\u8c03\u6574\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(n)$</p> <pre><code>void buildHeap2(void) {\n    for (i = n; i &gt;= 1; i--) percolateDown(i);\n    /* for (i = n / 2 to 1) is enough */\n}\n</code></pre> </li> <li> <p>\u65b9\u6cd5\u4e8c\u5373\u7ebf\u6027\u5efa\u5806\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6bcf\u6b21\u5408\u5e76\u4e24\u4e2a\u5df2\u7ecf\u8c03\u6574\u597d\u7684\u5806</p> </li> <li>\u4e4b\u6240\u4ee5\u80fd\u7ebf\u6027\u5efa\u5bf9\uff0c\u662f\u56e0\u4e3a\u5806\u6027\u8d28\u5f88\u5f31\uff08\u4e0d\u540c\u4e8e\u6392\u5e8f\u7684\u5f3a\u6761\u4ef6\uff09\uff0c\u4e8c\u53c9\u5806\u4e0d\u662f\u552f\u4e00\u7684</li> </ul> </li> </ul> </li> <li> <p>d-heap\uff0c\u662f\u6ee1\u8db3\u5806\u6027\u8d28\u7684 d \u53c9\u6811</p> <ul> <li>\u6839\u4e3a elements[1]</li> <li>\u8282\u70b9 elements[i] \u7684\u7236\u4eb2\u4e3a elements[(i+d-2)/d]</li> <li>\u8282\u70b9 elements[i] \u7684\u513f\u5b50\u4e3a elements[(i-1)d+2] ~ elements[id+1]</li> <li>\u63d2\u5165\u4e0e\u5220\u9664\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log _{d}n)=\\Omicron(\\log n/\\log d)$</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_12","title":"\u5e76\u67e5\u96c6","text":"<ul> <li>\u7b49\u4ef7\u5173\u7cfb\u6ee1\u8db3\uff1a<ul> <li>\u81ea\u53cd\u6027\uff08reflexive\uff09</li> <li>\u5bf9\u79f0\u6027\uff08symmetric\uff09</li> <li>\u4f20\u9012\u6027\uff08transitive\uff09</li> </ul> </li> <li>\u5e76\u67e5\u96c6\uff08disjoint set\uff09\u7528\u4e8e\u7ba1\u7406\u5143\u7d20\u6240\u5c5e\u96c6\u5408\uff08\u7b49\u4ef7\u7c7b\uff09\uff0c\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u5408\u5e76\uff08union\uff09\uff1a\u5408\u5e76\u4e24\u4e2a\u96c6\u5408</li> <li>\u67e5\u8be2\uff08find\uff09\uff1a\u67e5\u8be2\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408</li> </ul> </li> <li>\u7528\u6811\uff08\u68ee\u6797\uff09\u8868\u793a\u4e00\u4e2a\u96c6\u5408\uff0c\u6811\u4e2d\u7684\u8282\u70b9\u8868\u793a\u5bf9\u5e94\u96c6\u5408\u4e2d\u7684\u5143\u7d20</li> <li>\u7528\u6570\u7ec4\u5b9e\u73b0\u5e76\u67e5\u96c6<ul> <li>s[root] = 0</li> <li>s[i] \u8bb0\u5f55 i \u8fd9\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9</li> </ul> </li> <li> <p>\u67e5\u627e</p> <pre><code>SetType find(ElementType X, DisjSet S) {\n    for (; S[X] &gt; 0; X = S[X]) ;\n    return X;\n}\n</code></pre> </li> <li> <p>\u5408\u5e76\uff1a\u5148\u67e5\u627e\u4e24\u4e2a\u5143\u7d20\u6240\u5728\u6811\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u5c06\u5176\u4e2d\u4e00\u4e2a\u6839\u8282\u70b9\u8bbe\u4e3a\u53e6\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u513f\u5b50</p> <pre><code>void union(DisjSet S, ElementType X1, ElementType X2){\n    S[find(X2, S)] = find(X1, S);\n}\n</code></pre> </li> <li> <p>\u8def\u5f84\u538b\u7f29\uff08path-compression\uff09</p> <ul> <li> <p>\u5c06\u67e5\u627e\u8fc7\u7a0b\u4e2d\u904d\u5386\u5230\u7684\u6240\u6709\u8282\u70b9\uff0c\u90fd\u76f4\u63a5\u8fde\u63a5\u5230\u6839\u8282\u70b9</p> \u9012\u5f52\u5b9e\u73b0\u975e\u9012\u5f52\u5b9e\u73b0 <pre><code>SetType find(ElementType X, DisjSet S) {\n    return S[X] &lt;= 0 ? X : S[X] = find(S[X], S)\n}\n</code></pre> <pre><code>SetType find(ElementType X, DisjSet S)\n{\n    ElementType root, trail, lead;\n    for (root = X; S[root] &gt; 0; root = S[root]) ;\n    for (trail = X; trail != root; trail = lead) {\n        lead = S[trail];\n        S[trail] = root;\n    }\n    return root;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u6309\u5927\u5c0f\u5408\u5e76\uff08union-by-size\uff09</p> <ul> <li>\u59cb\u7ec8\u5c06\u5c0f\u7684\u6811\u5408\u5e76\u5230\u5927\u7684\u6811\u4e0a</li> <li>s[root] = -size\uff0csize \u8868\u793a\u6811\u7684\u5927\u5c0f\uff08\u6811\u4e0a\u7684\u8282\u70b9\u603b\u6570\uff09</li> <li>\u6309\u5927\u5c0f\u5408\u5e76\u5f97\u5230\u7684\u6811\uff0c\u9ad8\u5ea6\u4e0d\u8d85\u8fc7 $\\lfloor \\log N \\rfloor +1$</li> <li>$N$ \u6b21 union \u548c $M$ \u6b21 find \u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N+M\\log N)$</li> </ul> </li> <li>\u6309\u9ad8\u5ea6\u5408\u5e76\uff08union-by-height\uff09<ul> <li>\u59cb\u7ec8\u5c06\u77ee\u7684\u6811\u5408\u5e76\u5230\u9ad8\u7684\u6811\u4e0a</li> <li>\u53ea\u6709\u5f53\u4e24\u68f5\u7b49\u9ad8\u7684\u6811\u5408\u5e76\u65f6\uff0c\u6811\u7684\u9ad8\u5ea6\u624d\u4f1a\u589e\u52a0 1</li> <li>$N$ \u6b21 union \u548c $M$ \u6b21 find \u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N+M\\log N)$</li> <li>\u6ce8\u610f\uff0c\u8def\u5f84\u538b\u7f29\u4f1a\u6539\u53d8\u6811\u7684\u9ad8\u5ea6\uff0c\u5bfc\u81f4 height \u9891\u7e41\u66f4\u65b0<ul> <li>\u53ef\u4ee5\u7528\u4f30\u8ba1\u503c rank \u6765\u66ff\u4ee3\u786e\u5207\u7684 height\uff0crank \u662f height \u7684\u4e00\u4e2a\u4e0a\u754c</li> <li>\u53ea\u5728\u5408\u5e76\u65f6\u66f4\u65b0 rank\uff0c\u67e5\u627e\u64cd\u4f5c\u4f1a\u6539\u53d8 height\uff0c\u4f46\u4e0d\u4f1a\u5f15\u8d77 rank \u7684\u66f4\u65b0</li> </ul> </li> </ul> </li> <li>\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u548c\u6309\u79e9\u5408\u5e76\u7684\u5e76\u67e5\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(N+M\\alpha (M,N))$<ul> <li>$\\alpha$ \u662f Ackermann \u51fd\u6570\u7684\u53cd\u51fd\u6570</li> <li>$\\alpha$ \u7684\u589e\u957f\u6bd4\u8fed\u4ee3\u5bf9\u6570 $\\log ^*$ \u66f4\u7f13\u6162</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_13","title":"\u56fe","text":""},{"location":"cs/algorithm/fds/note2/#_14","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u56fe\uff08graph\uff09\u5e38\u7528 $G(V,E)$ \u8868\u793a\uff0c$V$ \u548c $E$ \u5206\u522b\u8868\u793a\u6709\u9650\u7684\u70b9\u96c6\u548c\u8fb9\u96c6</li> <li>\u65e0\u5411\u56fe\uff08undirected graph\uff09\uff1a$E$ \u4e2d\u7684\u5143\u7d20\u4e3a\u65e0\u5e8f\u6570\u5bf9 $(u,v)$</li> <li>\u6709\u5411\u56fe\uff08directed graph\uff09\uff1a$E$ \u4e2d\u7684\u5143\u7d20\u4e3a\u6709\u5e8f\u6570\u5bf9 $\\lang u,v\\rang$</li> <li>\u4e0d\u8003\u8651\u81ea\u73af\uff08self loop\uff09\u548c\u591a\u91cd\u8fb9\uff08multigraph\uff09\uff0c\u5373\u53ea\u8003\u8651\u7b80\u5355\u56fe\uff08simple graph\uff09</li> <li>\u5b8c\u5168\u56fe\uff08complete graph\uff09\uff1a\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u4e00\u6761\u65e0\u5411\u8fb9\u6216\u4e24\u6761\u6709\u5411\u8fb9<ul> <li>\u76f8\u540c\u8282\u70b9\u6570\u7684\u7b80\u5355\u56fe\u4e2d\uff0c\u5b8c\u5168\u56fe\u8fb9\u6570\u6700\u591a</li> </ul> </li> <li>$u,v$ \u4e4b\u95f4\u6709\u4e00\u6761\u65e0\u5411\u8fb9 $(u,v)$\uff0c\u79f0\uff1a<ul> <li>$u,v$ \u662f\u76f8\u90bb\u7684\uff08adjacent\uff09</li> </ul> </li> <li>\u6709\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u6709\u5411\u8fb9 $\\lang u,v\\rang$\uff0c\u79f0\uff1a<ul> <li>$u$ is adjacent to $v$</li> <li>$v$ is adjacent from $u$</li> </ul> </li> <li>\u5b50\u56fe\uff08subgraph\uff09\uff1a\u70b9\u96c6\u548c\u8fb9\u96c6\u90fd\u662f\u539f\u56fe\u7684\u5b50\u96c6</li> <li>\u7b80\u5355\u8def\u5f84\uff08simple path\uff09\uff1a\u8def\u5f84\u4e0a\u6ca1\u6709\u91cd\u590d\u7684\u70b9</li> <li>\u73af\uff08cycle\uff09\uff1a\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c\u7684\u7b80\u5355\u8def\u5f84</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5219\u79f0 $u,v$ \u662f\u8fde\u901a\u7684\uff08connected\uff09</li> <li>\u5982\u679c\u4efb\u610f\u4e00\u5bf9\u70b9\u90fd\u662f\u8fde\u901a\u7684\uff0c\u5219\u79f0\u8fd9\u4e2a\u65e0\u5411\u56fe\u662f\u8fde\u901a\u7684</li> <li>\u8fde\u901a\u5206\u91cf\uff08connected component\uff09\uff1a\u65e0\u5411\u56fe\u7684\u6781\u5927\u8fde\u901a\u5b50\u56fe</li> </ul> </li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5219\u79f0\u4ece $u$ \u5230 $v$ \u662f\u53ef\u8fbe\u7684\uff08reachable\uff09</li> <li>\u5982\u679c\u4efb\u610f\u4e00\u5bf9\u70b9\u90fd\u76f8\u4e92\u53ef\u8fbe\uff0c\u5219\u79f0\u8fd9\u4e2a\u6709\u5411\u56fe\u662f\u5f3a\u8fde\u901a\u7684\uff08strongly connected\uff09</li> <li>\u5f3a\u8fde\u901a\u5206\u91cf\uff1a\u6709\u5411\u56fe\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe</li> <li>\u5982\u679c\u4e00\u5f20\u6709\u5411\u56fe\u4e0d\u662f\u5f3a\u8fde\u901a\u7684\uff0c\u4f46\u628a\u5b83\u7684\u8fb9\u66ff\u6362\u4e3a\u65e0\u5411\u8fb9\u540e\u53ef\u4ee5\u5f97\u5230\u4e00\u5f20\u8fde\u901a\u56fe\uff0c\u5219\u79f0\u539f\u6765\u8fd9\u4e2a\u56fe\u662f\u5f31\u8fde\u901a\u7684\uff08weakly connected\uff09</li> </ul> </li> <li>\u6811\u662f\u8fde\u901a\u7684\u65e0\u73af\u56fe</li> <li>DAG\uff08directed acyclic graph\uff09\u5373\u6709\u5411\u65e0\u73af\u56fe</li> <li>\u5ea6\uff08degree\uff09<ul> <li>\u8282\u70b9\u7684\u5ea6\u88ab\u5b9a\u4e49\u4e3a\u4e0e\u8fd9\u4e2a\u8282\u70b9\u5173\u8054\uff08incident\uff09\u7684\u8fb9\u7684\u6761\u6570</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff0c\u8282\u70b9 $v$ \u7684\u5ea6\u7b49\u4e8e\u4e0e $v$ \u76f8\u90bb\u7684\u8282\u70b9\u6570</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff0c\u8282\u70b9 $v$\uff1a<ul> <li>\u5165\u5ea6\uff08in-degree\uff09\u662f\u4ee5 $v$ \u4e3a\u7ec8\u70b9\u7684\u8fb9\u7684\u6761\u6570</li> <li>\u51fa\u5ea6\uff08out-degree\uff09\u662f\u4ee5 $v$ \u4e3a\u8d77\u70b9\u7684\u8fb9\u7684\u6761\u6570</li> <li>\u6240\u6709\u8282\u70b9\u7684\u603b\u5165\u5ea6\u548c\u603b\u51fa\u5ea6\u76f8\u7b49\uff0c\u6709\u5411\u56fe\u7684\u603b\u5ea6\u6570\u662f\u603b\u5165\u5ea6\u548c\u603b\u51fa\u5ea6\u7684\u548c</li> </ul> </li> <li>\u6240\u6709\u8282\u70b9\u7684\u5ea6\u7684\u548c\u7b49\u4e8e\u56fe\u7684\u603b\u8fb9\u6570\u7684\u4e24\u500d\uff0c\u5373 $\\sum_{v\\in V}d(v)=2|E|$</li> </ul> </li> <li>\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u8868\u793a<ul> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece $v_i$ \u5230 $v_j$ \u7684\u8fb9\uff0c\u5219 $a_{ij}=1$\uff0c\u5426\u5219 $a_{ij}=0$</li> <li>\u65e0\u5411\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u662f\u5bf9\u79f0\u77e9\u9635\uff0c\u53ef\u4ee5\u53ea\u5b58\u50a8\u4e00\u534a\u77e9\u9635\u7684\u4fe1\u606f\uff1a<ul> <li>$a^{\\prime}[\\frac{n(n+1)}{2}]=\\lbrace a_{11},a_{21},a_{22},...,a_{n1},...,a_{nn} \\rbrace$</li> </ul> </li> <li>\u5bf9\u4e8e\u975e\u7a20\u5bc6\u56fe\u6765\u8bf4\u975e\u5e38\u6d6a\u8d39\u7a7a\u95f4</li> </ul> </li> <li>\u56fe\u7684\u90bb\u63a5\u8868\u8868\u793a<ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5b58\u50a8\u4e00\u4e2a\u94fe\u8868\u6765\u8bb0\u5f55\u6240\u6709\u548c\u5b83\u76f8\u90bb\u7684\u8282\u70b9</li> <li>\u65e0\u5411\u56fe\u7684\u90bb\u63a5\u8868\u4f1a\u5c06\u6bcf\u4e2a\u8fb9\u91cd\u590d\u5b58\u50a8\u4e24\u6b21</li> <li>\u6709\u5411\u56fe\u7684\u90bb\u63a5\u8868\u65e0\u6cd5\u904d\u5386\u5165\u5ea6\uff0c\u89e3\u51b3\u601d\u8def\u6709\uff1a<ul> <li>\u989d\u5916\u5b58\u50a8\u4e00\u4e2a\u9006\u90bb\u63a5\u8868</li> <li>\u4f7f\u7528\u591a\u91cd\u94fe\u8868 multilist</li> </ul> </li> </ul> </li> <li>\u5e26\u6743\u56fe<ul> <li>\u90bb\u63a5\u77e9\u9635\uff1a$a_{ij}$ \u5b58\u50a8\u8fb9 $(v_i,v_j)$ \u7684\u6743\u503c</li> <li>\u90bb\u63a5\u8868\uff1a\u6bcf\u4e2a\u94fe\u8868\u8282\u70b9\u5b58\u50a8\u8fb9\u7684\u6743\u503c</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_15","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>AOV\uff08activity on vertex\uff09\u7f51\u7edc\u662f\u4e00\u79cd\u6709\u5411\u65e0\u73af\u56fe\uff0c\u8282\u70b9\u8868\u793a\u4e8b\u4ef6\uff0c\u8fb9\u8868\u793a\u4e8b\u4ef6\u7684\u5148\u540e\u5173\u7cfb</li> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5219\u79f0 $u$ \u662f $v$ \u7684\u524d\u9a71\uff08predecessor\uff09\uff0c$v$ \u662f $u$ \u7684\u540e\u7ee7\uff08successor\uff09</li> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u8fb9 $\\lang u,v\\rang$\uff0c\u5219\u79f0 $u$ \u662f $v$ \u7684\u76f4\u63a5\uff08immediate\uff09\u524d\u9a71\uff0c$v$ \u662f $u$ \u7684\u76f4\u63a5\u540e\u7ee7</li> <li>AOV \u7f51\u7edc\u4e2d\u4e8b\u4ef6\u7684\u5148\u540e\u5173\u7cfb\u662f\u4e00\u79cd\u504f\u5e8f\u5173\u7cfb\uff0c\u5177\u6709\u4f20\u9012\u6027\u4e0e\u975e\u81ea\u53cd\u6027\uff08\u65e0\u73af\uff09</li> <li>AOV \u7f51\u7edc\u4e2d\u4e0d\u5e94\u8be5\u51fa\u73b0\u73af\uff0c\u5426\u5219\u7f51\u7edc\u8868\u793a\u7684\u5de5\u7a0b\u662f\u4e0d\u53ef\u5b9e\u73b0\u7684<ul> <li>\u68c0\u67e5 AOV \u7f51\u7edc\u662f\u5426\u5e26\u73af\u7684\u65b9\u5f0f\u662f\u6784\u9020\u62d3\u6251\u5e8f\u5217\uff0c\u89c2\u5bdf\u662f\u5426\u5305\u542b\u6240\u6709\u8282\u70b9</li> </ul> </li> <li>\u62d3\u6251\u6392\u5e8f\uff08topological order\uff09\u662f\u4e00\u4e2a\u56fe\u7684\u70b9\u96c6\u7684\u7ebf\u6027\u5e8f\u5217\uff0c\u6ee1\u8db3\uff1a<ul> <li>\u5bf9\u4e8e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9 $u,v$\uff0c\u5982\u679c $u$ \u662f $v$ \u7684\u524d\u9a71\uff0c\u5e8f\u5217\u4e2d $u$ \u6392\u5728 $v$ \u7684\u524d\u9762</li> </ul> </li> <li>\u6ce8\u610f\uff0c\u5bf9\u4e8e\u540c\u4e00\u5f20\u56fe\uff0c\u62d3\u6251\u6392\u5e8f\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684</li> <li> <p>\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(|V|+|E|)$</p> <pre><code>void topSort(Graph G)\n{\n    Queue Q = createQueue();\n    int cnt = 0; Vertex V, W;\n    for (each vertex V)\n        if (indegree[V] == 0) enqueue(V);\n    while (!isEmpty(Q)) {\n        V = dequeue(Q);\n        topNum[V] = ++cnt;\n        for (each W adjacent to V)\n            if (--indegree[W] == 0) enqueue(W, Q);\n    }\n    if (cnt != numVertex)\n        error(\"graph has a cycle\");\n    free(Q);\n}\n</code></pre> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_16","title":"\u6700\u77ed\u8def","text":"<ul> <li>\u5355\u6e90\u6700\u77ed\u8def\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\u548c\u4e00\u4e2a\u6e90\u70b9\uff0c\u6c42\u4ece\u6e90\u70b9\u5230\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84</li> <li> <p>\u65e0\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\uff1aBFS \u5373\u53ef</p> \u961f\u5217\u4f18\u5316\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09 <pre><code>void unweighted(Table T)\n{   /* T is initialized with the source vertex S given */\n    Queue Q = createQueue(); Vertex V, W;\n    enqueue(S, Q);\n    while (!isEmpty(Q)) {\n        V = dequeue(Q);\n        for (each W adjacent to V) {\n            if (T[W].dist == INFINITY) {\n                T[W].dist = T[V].dist + 1;\n                T[W].path = V;\n                enqueue(W, Q);\n            }\n        }\n    }\n    free(Q);\n}\n</code></pre> <pre><code>void unweighted(Table T)\n{\n    int currDist = 0; Vertex V, W;\n    for (; currDist &lt; numVertex; currDist++) {\n        for (each vertex V) {\n            if (!T[V].known &amp;&amp; T[V].dist == currDist) {\n                T[V].known = true;\n                for (each W adjacent to V) {\n                    if (T[W].dist == INFINITY) {\n                        T[W].dist = currDist + 1;\n                        T[W].path = V;\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> </li> <li> <p>\u5e26\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\uff1aDijkstra \u7b97\u6cd5\uff08\u53ea\u9002\u7528\u4e8e\u975e\u8d1f\u6743\u56fe\uff09</p> <ol> <li>\u5c06\u8282\u70b9\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff1a\u5df2\u786e\u5b9a\u6700\u77ed\u8def\u7684\u70b9\u96c6 S \u548c\u672a\u786e\u5b9a\u6700\u77ed\u8def\u7684\u70b9\u96c6 T\uff1b\u8d77\u521d\u6240\u6709\u8282\u70b9\u90fd\u5c5e\u4e8e T</li> <li>\u521d\u59cb\u5316 dis[s] = 0\uff0c\u5176\u4ed6 dis = $\\infty$</li> <li>\u91cd\u590d\u4ee5\u4e0b\u64cd\u4f5c\uff0c\u76f4\u5230 T \u4e3a\u7a7a<ol> <li>\u4ece T \u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u77ed\u8def\u957f\u5ea6\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u79fb\u5230 S \u4e2d</li> <li>\u5bf9\u521a\u521a\u52a0\u5165 S \u7684\u8282\u70b9\u7684\u6240\u6709\u51fa\u8fb9\u6267\u884c\u677e\u5f1b\uff08relax\uff09\u64cd\u4f5c\uff1a    \u5bf9\u4e8e\u8fb9 (u,v)\uff0c\u677e\u5f1b\u64cd\u4f5c\u4e3a dis[v] = min(dis[v], dis[u] + weight(u,v))</li> </ol> </li> </ol> </li> <li> <p>Dijkstra \u7b97\u6cd5\u5806\u4f18\u5316\u590d\u6742\u5ea6\u4e3a $\\Omicron(|E|\\log |V|)$</p> <ol> <li>\u7528\u6807\u8bb0\u8282\u70b9\u662f\u5426\u5df2\u8bbf\u95ee\u6765\u8868\u793a S\uff0c\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u6765\u8868\u793a T</li> <li>\u521d\u59cb\u5316 dis[s] = 0\uff0c\u5176\u4ed6 dis = $\\infty$</li> <li>\u91cd\u590d\u4ee5\u4e0b\u64cd\u4f5c\uff0c\u76f4\u5230\u5806\u4e3a\u7a7a<ol> <li>\u4ece\u5806\u4e2d\u9009\u53d6 dis[u] \u6700\u5c0f\u7684\u4e14\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684 u\uff0c\u5c06 u \u6807\u8bb0\u4e3a\u5df2\u8bbf\u95ee</li> <li>\u626b\u63cf u \u7684\u6240\u6709\u51fa\u8fb9 (u,v)\uff0c\u6267\u884c\u677e\u5f1b\u64cd\u4f5c\uff1a    \u82e5 dis[v] &gt; dis[u] + weight(u,v)\uff0c\u5219\u7528\u540e\u8005\u66f4\u65b0 dis[v]\uff0c\u5e76\u5c06 {v, dis[v]} \u538b\u5165\u5806\u4e2d\uff08\u6216\u8005\u76f4\u63a5\u66f4\u65b0\u5806\u4e2d\u7684 v \u5e76\u5411\u4e0a\u8c03\u6574\uff09</li> </ol> </li> </ol> <pre><code>void Dijkstra(Table T)\n{\n    Heap H = createHeap(T); Vertex V, W;\n    while (!isEmpty(H)) {\n        V = deleteMin(H);\n        if (T[V].known) continue;\n        T[V].known = true;\n        for (each W adjacent to V) {\n            if (T[W].dist &gt; T[V].dist + weight(V, W)) {\n                T[W].dist = T[V].dist + weight(V, W);\n                T[W].path = V;\n                insert({W, T[W].dist}, H);\n                /* or: decrease(T[W].dist to T[V].dist + weight(V, W)) */\n            }\n        }\n    }\n    free(H);\n}\n</code></pre> </li> <li> <p>\u5e26\u8d1f\u6743\u8fb9\uff1aSPFA \u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u4e3a $\\Omicron(|E||V|)$</p> <ul> <li>\u4e0a\u6587\u65e0\u6743\u56fe\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\u7684\u961f\u5217\u4f18\u5316\u7b97\u6cd5\uff0c\u53ef\u4ee5\u770b\u4f5c SPFA \u7684\u7279\u6b8a\u60c5\u5f62</li> </ul> <pre><code>void negweighted(Table T)\n{   /* T is initialized with the source vertex S given */\n    Queue Q = createQueue(); Vertex V, W;\n    enqueue(S, Q);\n    while (!isEmpty(Q)) {\n        V = dequeue(Q);\n        for (each W adjacent to V) {\n            if (T[W].dist &gt; T[V].dist + weight(V, W)) {\n                T[W].dist = T[V].dist + weight(V, W);\n                T[W].path = V;\n                if (W is not already in Q) enqueue(W, Q);\n            }\n        }\n    }\n    free(Q);\n}\n</code></pre> </li> <li> <p>AOE\uff08activity on edge\uff09\u7f51\u7edc\u662f\u4e00\u4e2a\u5e26\u6743\u7684\u6709\u5411\u65e0\u73af\u56fe\uff0c\u8282\u70b9\u8868\u793a\u4e8b\u4ef6\uff0c\u5e26\u6743\u8fb9\u8868\u793a\u6d3b\u52a8\u6301\u7eed\u7684\u65f6\u95f4</p> </li> <li>AOE \u7f51\u7edc\u7528\u4e8e\u89e3\u51b3\u5de5\u7a0b\u6700\u77ed\u65f6\u95f4\u95ee\u9898<ul> <li>\u5b8c\u6210\u6574\u4e2a\u5de5\u7a0b\u7684\u6700\u77ed\u65f6\u95f4\u662f\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u957f\u6d3b\u52a8\u8def\u5f84\u957f\u5ea6</li> </ul> </li> <li>\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u4e8b\u4ef6\u5b58\u5728\u4e00\u4e2a\u6700\u65e9\u5b8c\u6210\u65f6\u95f4\uff08EC\uff09\u548c\u6700\u665a\u5b8c\u6210\u65f6\u95f4\uff08LC\uff09<ul> <li>EC \u4ece\u6e90\u70b9\u5f00\u59cb\u5411\u540e\u8ba1\u7b97\uff0c$EC[w]=max_{\\lang v,w\\rang \\in E}\\lbrace EC[v] + weight(v,w)\\rbrace$</li> <li>LC \u4ece\u6c47\u70b9\u5f00\u59cb\u5411\u524d\u8ba1\u7b97\uff0c$LC[w]=min_{\\lang v,w\\rang \\in E}\\lbrace LC[v] - weight(v,w)\\rbrace$</li> </ul> </li> <li>\u6bcf\u6761\u8fb9\u4ee3\u8868\u7684\u6d3b\u52a8\u5b58\u5728\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\uff08\u5373\u8fb9\u6743\uff09\u548c\u4e00\u4e2a\u677e\u5f1b\u65f6\u95f4\uff08slack time\uff09<ul> <li>\u8fb9 $\\lang v,w\\rang$ \u7684\u677e\u5f1b\u65f6\u95f4\u4e3a $LC[w]-EC[v]-weight(v,w)$</li> </ul> </li> <li>\u5173\u952e\u8def\u5f84\uff08critical path\uff09\u662f AOE \u7f51\u7edc\u4e2d\u7684\u6700\u957f\u6d3b\u52a8\u8def\u5f84<ul> <li>\u5173\u952e\u8def\u5f84\u4e2d\u6240\u6709\u8fb9\u7684\u677e\u5f1b\u65f6\u95f4\u90fd\u662f\u96f6</li> </ul> </li> <li>\u4efb\u610f\u4e24\u70b9\u95f4\u6700\u77ed\u8def<ul> <li>\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6e90\u70b9\uff0c\u5206\u522b\u8ba1\u7b97\u5355\u6e90\u6700\u77ed\u8def\uff0c\u9002\u5408\u4e8e\u7a00\u758f\u56fe</li> <li>Floyd \u7b97\u6cd5\uff0c\u4e09\u4e2a for \u5faa\u73af\u5373\u53ef\u5b9e\u73b0\uff0c\u9002\u5408\u4e8e\u4efb\u4f55\u56fe\uff08\u65e0\u8d1f\u73af\uff09<ul> <li>\u5b9a\u4e49 f[k][v][w] \u8868\u793a\u5728\u53ea\u5141\u8bb8\u7ecf\u8fc7\u8282\u70b9 1~k \u7684\u9650\u5236\u4e0b\uff0c\u4ece\u8282\u70b9 v \u5230 w \u7684\u6700\u77ed\u8def</li> <li>f[k][v][w] = min(f[k-1][v][w], f[k][v][k] + f[k][k][w])</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note2/#_17","title":"\u7f51\u7edc\u6d41","text":"<ul> <li>\u7f51\u7edc\u6d41\u5b9a\u4e49\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e0a\uff1a<ul> <li>\u6bcf\u6761\u8fb9\u90fd\u5b58\u5728\u4e00\u4e2a\u88ab\u79f0\u4e3a\u5bb9\u91cf\uff08capacity\uff09\u7684\u6743\u503c\uff0c\u5f53 $(u,v)\\notin E$ \u65f6\uff0c\u5b9a\u4e49 $c(u,v)=0$</li> <li>\u7f51\u7edc\u4e2d\u5b58\u5728\u552f\u4e00\u7684\u6e90\u70b9\uff08source\uff09\u548c\u552f\u4e00\u7684\u6c47\u70b9\uff08sink\uff09</li> </ul> </li> <li> <p>\u6700\u5927\u6d41\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6c42\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u5927\u6d41\u91cf</p> <ol> <li> <p>\u5efa\u7acb\u6b8b\u5dee\u56fe\uff08residual graph\uff09\uff0c\u8bbe $f$ \u662f\u56fe $G=(V,E)$ \u7684\u4e00\u4e2a\u6d41\uff0c\u5219\u6b8b\u5dee\u56fe\u7684\u8fb9\u6743\u4e3a\uff1a</p> <p>$$ c_f(u,v)=\\begin{cases} c(u,v)-f(u,v)\\;\\;&amp;(u,v)\\in E \\cr f(v,u)&amp;(v,u)\\in E \\cr 0&amp;\\text{else} \\end{cases} $$</p> </li> <li> <p>\u91cd\u590d\u8fdb\u884c\u5982\u4e0b\u7684\u589e\u5e7f\u64cd\u4f5c\uff0c\u4e0d\u65ad\u53e0\u52a0\u7f51\u7edc\u7684\u6d41\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4e3a\u6b62\uff1a</p> <ul> <li>\u5bfb\u627e\u6b8b\u5dee\u56fe\u4e2d\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u4e00\u6761\u8def\u5f84\uff0c\u79f0\u4e3a\u589e\u5e7f\u8def\uff08augmenting path\uff09</li> <li>\u589e\u5e7f\u8def\u7684\u6d41\u91cf\u4e3a\u589e\u5e7f\u8def\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\uff0c\u521b\u5efa\u8fd9\u6837\u4e00\u6761\u6d41\uff0c\u5e76\u66f4\u65b0\u6b8b\u5dee\u56fe</li> </ul> </li> </ol> </li> <li> <p>\u5bfb\u627e\u589e\u5e7f\u8def</p> <ul> <li>BFS\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(|V||E|^ 2)$</li> <li>Dinic \u7b97\u6cd5\uff0c\u5f53\u524d\u5f27\u4f18\u5316\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(|V|^ 2|E|)$</li> </ul> </li> <li>\u6700\u5c0f\u8d39\u7528\u6d41\uff1a\u8d39\u7528\u6307\u6d41\u7ecf\u8fc7\u8fb9\u7684\u4ee3\u4ef7\uff0c\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u6700\u5927\u6d41\uff0c\u6c42\u5176\u4e2d\u603b\u8d39\u7528\u6700\u5c0f\u7684\u4e00\u6761\u6d41</li> </ul>"},{"location":"cs/algorithm/fds/note2/#_18","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<ul> <li>\u751f\u6210\u6811\uff08spanning tree\uff09\u662f\u8fde\u901a\u65e0\u5411\u56fe\u7684\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\uff0c\u540c\u65f6\u6ee1\u8db3\u6811\u7684\u7279\u5f81<ul> <li>\u751f\u6210\u5b50\u56fe\u662f\u56fe\u7684\u4e00\u4e2a\u5b50\u56fe\uff0c\u5305\u542b\u539f\u56fe\u7684\u6240\u6709\u8282\u70b9</li> <li>\u751f\u6210\u6811\u76f8\u5f53\u4e8e\u5728\u539f\u56fe\u7684\u8fb9\u96c6\u4e2d\u9009\u62e9 n-1 \u6761\uff0c\u5c06\u6240\u6709\u8282\u70b9\u8fde\u901a</li> </ul> </li> <li>\u6700\u5c0f\u751f\u6210\u6811\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u8fde\u901a\u65e0\u5411\u56fe\uff0c\u627e\u4e00\u4e2a\u8fb9\u6743\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811</li> <li>\u8fde\u901a\u56fe\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811</li> <li>\u5411\u751f\u6210\u6811\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u8fb9\uff0c\u5219\u4e00\u5b9a\u4f1a\u5b58\u5728\u4e00\u4e2a\u73af</li> <li>Prim \u7b97\u6cd5<ul> <li>\u4ece\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u4e0d\u65ad\u5411 T \u4e2d\u6dfb\u52a0\u8282\u70b9\uff0c\u76f4\u5230\u5305\u542b\u6240\u6709\u8282\u70b9</li> <li>\u6dfb\u52a0\u8282\u70b9\u65f6\uff0c\u603b\u662f\u9009\u62e9\u4e0e T \u4e2d\u7684\u67d0\u4e2a\u8282\u70b9\u76f8\u90bb\u4e14\u52a0\u5165 T \u540e\u4e0d\u4f1a\u5f62\u6210\u73af\u7684\u6700\u5c0f\u6743\u8fb9\u5bf9\u5e94\u7684\u8282\u70b9</li> <li>\u5bfb\u627e\u6700\u5c0f\u8fb9\u6743\u8282\u70b9\uff0c\u53ef\u4ee5\u8fdb\u884c\u5806\u4f18\u5316\uff08\u7c7b\u4f3c\u4e8e Dijkstra \u7b97\u6cd5\uff09</li> </ul> </li> <li>Kruskal \u7b97\u6cd5<ul> <li>\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u5411 T \u4e2d\u6dfb\u52a0\u8fb9\uff0c\u76f4\u5230\u52a0\u6ee1 n-1 \u6761\u8fb9</li> <li>\u6dfb\u52a0\u8fb9\u65f6\uff0c\u603b\u662f\u9009\u62e9\u52a0\u5165 T \u540e\u4e0d\u4f1a\u5f62\u6210\u73af\u7684\u6700\u5c0f\u6743\u8fb9</li> <li>\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(|E|\\log |E|)$<ul> <li>\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u904d\u5386\u6240\u6709\u8fb9\uff0c\u82e5\u8fb9\u4e24\u7aef\u7684\u8282\u70b9\u4e0d\u5728\u540c\u4e00\u96c6\u5408\uff0c\u5219\u5c06\u5b83\u4eec\u5408\u5e76\uff0c\u5e76\u5c06\u8fb9\u52a0\u5165 T</li> </ul> </li> </ul> </li> <li>Prim \u7b97\u6cd5\u9002\u5408\u7a20\u5bc6\u56fe\uff08dense graph\uff09\uff0cKruskal \u7b97\u6cd5\u9002\u5408\u7a00\u758f\u56fe\uff08sparse graph\uff09</li> </ul>"},{"location":"cs/algorithm/fds/note2/#_19","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"<ul> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u904d\u5386\u6216\u641c\u7d22\u6811\u6216\u56fe\u7684\u7b97\u6cd5</li> <li> <p>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u662f\u5148\u5e8f\u904d\u5386\u7684\u4e00\u79cd\u63a8\u5e7f</p> <pre><code>void dfs(Vertex V) {\n    visited[V] = true;\n    for (each W adjacent to V)\n        if (!visited[W]) dfs(W);\n}\n</code></pre> </li> <li> <p>\u53cc\u8fde\u901a\u6027\uff08biconnectivity\uff09</p> <ul> <li>\u5982\u679c\u5220\u53bb\u4e00\u4e2a\u70b9\uff0c\u5269\u4e0b\u7684\u56fe\u53ef\u4ee5\u5206\u6210\u81f3\u5c11\u4e24\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u5219\u79f0\u8fd9\u4e2a\u70b9\u662f\u5272\u70b9\uff08articulation point\uff09</li> <li>\u5982\u679c\u4e00\u4e2a\u56fe\u662f\u8fde\u901a\u7684\uff0c\u4e14\u4e0d\u5b58\u5728\u5272\u70b9\uff0c\u5219\u79f0\u8fd9\u4e2a\u56fe\u662f\u53cc\u8fde\u901a\u7684</li> <li>\u53cc\u8fde\u901a\u5206\u91cf\uff08biconnected component\uff09\u662f\u6781\u5927\u7684\u53cc\u8fde\u901a\u5b50\u56fe</li> </ul> </li> <li>\u5bfb\u627e\u8fde\u901a\u65e0\u5411\u56fe\u7684\u5272\u70b9\uff1aTarjan \u7b97\u6cd5<ul> <li>\u9996\u5148\u5bf9\u539f\u56fe\u8fdb\u884c DFS\uff0c\u5f97\u5230\u4e00\u4e2a\u751f\u6210\u6811<ul> <li>dfn[x] \u8868\u793a x \u5728 DFS \u4e2d\u662f\u7b2c\u51e0\u4e2a\u88ab\u8bbf\u95ee\u7684\uff0c\u4ece 0 \u5f00\u59cb</li> </ul> </li> <li>\u8ffd\u6eaf\u503c low[x]<ul> <li>\u521d\u59cb low[x] = dfn[x]</li> <li>\u5982\u679c\u4ece x \u5230 y \u7684\u8fb9\u5728\u751f\u6210\u6811\u4e0a\uff0c\u5219 low[x] = min(low[x], low[y])</li> <li>\u5982\u679c\u4ece x \u5230 y \u7684\u8fb9\u4e0d\u5728\u751f\u6210\u6811\u4e0a\uff08\u56de\u8fb9\uff09\uff0c\u5219 low[x] = min(low[x], dfn[y])</li> </ul> </li> <li>\u5224\u65ad\u5272\u70b9<ul> <li>\u5982\u679c u \u662f\u751f\u6210\u6811\u7684\u6839\uff0c\u5219 u \u662f\u5272\u70b9\u5f53\u4e14\u4ec5\u5f53 u \u6709\u81f3\u5c11\u4e24\u4e2a\u513f\u5b50</li> <li>\u5982\u679c u \u4e0d\u662f\u751f\u6210\u6811\u7684\u6839\uff0c\u5219 u \u662f\u5272\u70b9\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u513f\u5b50 v\uff0c\u6ee1\u8db3 dfn[u] &lt;= low[v]</li> </ul> </li> </ul> </li> <li>\u6b27\u62c9\u56de\u8def\uff08Euler circuit\uff09\u662f\u901a\u8fc7\u56fe\u4e2d\u6bcf\u6761\u8fb9\u6070\u597d\u4e00\u6b21\u7684\u73af</li> <li>\u6b27\u62c9\u901a\u8def\uff08Euler tour\uff09\u662f\u901a\u8fc7\u56fe\u4e2d\u6bcf\u6761\u8fb9\u6070\u597d\u4e00\u6b21\u7684\u8def\u5f84</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe<ul> <li>\u65e0\u5411\u56fe\u6709\u6b27\u62c9\u56de\u8def\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u8fde\u901a\u7684\u4e14\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570</li> <li>\u65e0\u5411\u56fe\u6709\u6b27\u62c9\u901a\u8def\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u8fde\u901a\u7684\u4e14\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u8282\u70b9\u7684\u5ea6\u662f\u5947\u6570</li> </ul> </li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe<ul> <li>\u6709\u5411\u56fe\u6709\u6b27\u62c9\u56de\u8def\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u5f31\u8fde\u901a\u7684\u4e14\u6bcf\u4e2a\u8282\u70b9\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6</li> <li>\u6709\u5411\u56fe\u6709\u6b27\u62c9\u901a\u8def\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u5f31\u8fde\u901a\u7684\u4e14\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u51fa\u5ea6\u6bd4\u5165\u5ea6\u5927 1\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u5165\u5ea6\u6bd4\u51fa\u5ea6\u5927 1\uff0c\u5176\u4f59\u8282\u70b9\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6</li> </ul> </li> <li> <p>\u5bfb\u627e\u6b27\u62c9\u56de\u8def\u6216\u901a\u8def\uff1aDFS</p> <ul> <li>\u4ece\u67d0\u4e2a\u8282\u70b9\u51fa\u53d1\uff0c\u8fdb\u884c DFS</li> <li>\u6bcf\u6b21\u6cbf\u7740\u67d0\u6761\u8fb9\u4ece\u4e00\u4e2a\u8282\u70b9\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5220\u9664\u8fd9\u6761\u8fb9</li> <li>\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u6ca1\u6709\u53ef\u8d70\u7684\u8fb9\uff0c\u5219\u5c06\u8be5\u8282\u70b9\u5165\u961f\uff0c\u5e76\u8fd4\u56de</li> <li>DFS \u7ed3\u675f\u540e\uff0c\u961f\u5217\u4e2d\u7684\u8282\u70b9\u5e8f\u5217\u5373\u6b27\u62c9\u56de\u8def\u6216\u901a\u8def</li> </ul> <pre><code>void dfs(Vertex V) {\n    for (each W adjacent to V) {\n        if (!visited(V, W)) {\n            visited(V, W) = true;\n            dfs(W);\n        }\n    }\n    enqueue(V);\n}\n</code></pre> </li> <li> <p>\u54c8\u5bc6\u987f\u56de\u8def\uff08Hamilton circuit\uff09\u662f\u901a\u8fc7\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u6070\u597d\u4e00\u6b21\u7684\u73af</p> </li> <li>\u54c8\u5bc6\u987f\u901a\u8def\uff08Hamilton tour\uff09\u662f\u901a\u8fc7\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u6070\u597d\u4e00\u6b21\u7684\u8def\u5f84</li> </ul>"},{"location":"cs/algorithm/fds/note3/","title":"\u6392\u5e8f\u4e0e\u54c8\u5e0c","text":"<p> \u7ea6 3371 \u4e2a\u5b57  183 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p>"},{"location":"cs/algorithm/fds/note3/#_2","title":"\u6392\u5e8f","text":""},{"location":"cs/algorithm/fds/note3/#_3","title":"\u63d2\u5165\u6392\u5e8f","text":"<ul> <li>\u6700\u574f\u60c5\u51b5\uff1a\u5f85\u6392\u5e8f\u5217\u662f\u9006\u5e8f\u7684\uff0c\u590d\u6742\u5ea6 $\\Omicron(N^ 2)$</li> <li>\u6700\u597d\u60c5\u51b5\uff1a\u5f85\u6392\u5e8f\u5217\u662f\u6709\u5e8f\u7684\uff0c\u590d\u6742\u5ea6 $\\Omicron(N)$</li> </ul> <pre><code>void insertionSort(ElementType arr[], int n)\n{\n    for (int i = 1; i &lt; n; i++) {\n        ElementType tmp = arr[i];\n        int j = i;\n        for (; j &gt; 0 &amp;&amp; arr[j - 1] &gt; tmp; j--)\n            arr[j] = arr[j-1];\n        arr[j] = tmp;\n    }\n}\n</code></pre> <ul> <li>\u9006\u5e8f\u5bf9\uff08inversion\uff09\u662f\u5e8f\u5217\u4e2d\u7684\u6709\u5e8f\u6570\u5bf9 (i,j)\uff0c\u6ee1\u8db3 i &lt; j \u4e14 arr[i] &gt; arr[j]</li> <li>\u5bf9\u4e8e $N$ \u4e2a\u5143\u7d20\u7684\u968f\u673a\u7684\u5f85\u6392\u5e8f\u5217\uff0c\u5e73\u5747\u9006\u5e8f\u5bf9\u6570\u4e3a $\\frac{N(N-1)}{4}$</li> <li>\u57fa\u4e8e\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u7684\u6392\u5e8f\u7b97\u6cd5\uff08\u4f8b\u5982\u5192\u6ce1\u3001\u63d2\u5165\uff09\uff0c\u5e73\u5747\u60c5\u51b5\u590d\u6742\u5ea6\u4e0b\u754c\u4e3a $\\Omega(N^ 2)$</li> </ul>"},{"location":"cs/algorithm/fds/note3/#_4","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<ul> <li>\u5e0c\u5c14\u6392\u5e8f\uff08Shell sort\uff09\u662f\u63d2\u5165\u6392\u5e8f\u7684\u4e00\u79cd\u6539\u8fdb\u7248\u672c<ul> <li>\u5e0c\u5c14\u6392\u5e8f\u5bf9\u4e0d\u76f8\u90bb\u7684\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\u548c\u79fb\u52a8</li> </ul> </li> <li>\u5e0c\u5c14\u6392\u5e8f\u57fa\u4e8e\u4e00\u4e2a\u589e\u91cf\u5e8f\u5217 $h_1&lt;h_2&lt;\\cdots &lt;h_t$\uff0c\u5176\u4e2d $h_1 = 1$</li> <li>\u5728\u539f\u59cb\u5e8f\u5217\u4e2d\u9694 $h_k-1$ \u4e2a\u5143\u7d20\u53d6\u5b50\u5e8f\u5217\uff0c\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\uff0c\u79f0\u4e3a $h_k$-sort</li> <li>\u9010\u6b21\u8fdb\u884c $h_t$-sort\uff0c$h_{t-1}$-sort\uff0c...\uff0c$h_1$-sort\uff0c\u6392\u5e8f\u5b8c\u6210<ul> <li>$h_k$-sorted \u7684\u5e8f\u5217\u5728 $h_{k-1}$-sort \u540e\u4ecd\u4fdd\u6301 $h_k$-sorted \u7684\u6027\u8d28</li> </ul> </li> <li>\u5e0c\u5c14\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u548c\u589e\u91cf\u5e8f\u5217\u7684\u9009\u53d6\u6709\u5173</li> <li> <p>\u5e0c\u5c14\u589e\u91cf\u5e8f\u5217\uff1a$h_t=\\lfloor N/2 \\rfloor$\uff0c$h_k=\\lfloor h_{k+1}/2 \\rfloor$</p> <ul> <li>\u6700\u574f\u60c5\u51b5\uff1a\u53ea\u5728 $h_1$-sort \u65f6\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u590d\u6742\u5ea6 $\\Omicron(N^ 2)$</li> </ul> <pre><code>void shellSort(ElementType arr[], int n)\n{\n    for (int inc = n / 2; inc &gt; 0; inc /= 2) {\n        for (int i = inc; i &lt; n; i++) {\n            ElementType tmp = arr[i];\n            int j = i;\n            for (; j &gt;= inc; j -= inc) {\n                if (arr[j - inc] &gt; tmp)\n                    arr[j] = arr[j - inc];\n                else\n                    break;\n            }\n            a[j] = tmp;\n        }\n    }\n}\n</code></pre> </li> <li> <p>Hibbard \u589e\u91cf\u5e8f\u5217\uff1a$h_k=2^ k-1$</p> <ul> <li>\u6700\u574f\u60c5\u51b5\u590d\u6742\u5ea6\u4e3a $\\Omicron(N^ {3/2})$</li> <li>\u5e73\u5747\u60c5\u51b5\u590d\u6742\u5ea6\u4e3a $\\Omicron(N^ {5/4})$</li> </ul> </li> <li>Sedgewick \u589e\u91cf\u5e8f\u5217\uff1a1,5,19,41,109,...<ul> <li>\u6700\u574f\u60c5\u51b5\u590d\u6742\u5ea6\u4e3a $\\Omicron(N^ {4/3})$</li> <li>\u5e73\u5747\u60c5\u51b5\u590d\u6742\u5ea6\u4e3a $\\Omicron(N^ {7/6})$</li> </ul> </li> <li>\u5e0c\u5c14\u6392\u5e8f\u662f\u4e00\u79cd\u7b80\u5355\u7684\u6392\u5e8f\u7b97\u6cd5\uff08\u5373\u4f7f\u5176\u5206\u6790\u76f8\u5f53\u590d\u6742\uff09\uff0c\u9002\u5408\u4e8e\u4e2d\u7b49\u89c4\u6a21\uff08\u6570\u4e07\uff09\u6570\u636e\u7684\u6392\u5e8f</li> </ul>"},{"location":"cs/algorithm/fds/note3/#_5","title":"\u5806\u6392\u5e8f","text":"<ul> <li>\u7b97\u6cd5\u4e00\uff1a<ul> <li>\u5c06\u5f85\u6392\u6570\u636e\u4ee5\u7ebf\u6027\u65f6\u95f4\u5efa\u5c0f\u6839\u5806\uff0c\u7136\u540e\u4f9d\u6b21\u4ece\u5806\u9876\u53d6\u51fa\u6700\u5c0f\u5143\u7d20</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(N\\log N)$</li> <li>\u4f46\u662f\u7a7a\u95f4\u6d88\u8017\u7ffb\u500d\u4e86\uff08\u4ece\u5806\u4e2d\u53d6\u6700\u5c0f\u5143\u7d20\u540e\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u5b58\u653e\u6392\u597d\u5e8f\u7684\u5e8f\u5217\uff09</li> </ul> </li> <li> <p>\u7b97\u6cd5\u4e8c\uff1a</p> <ul> <li>\u5c06\u5f85\u6392\u6570\u636e\u4ee5\u7ebf\u6027\u65f6\u95f4\u5efa\u5927\u6839\u5806\uff0c\u5e76\u91cd\u590d\u5982\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u5c06\u5806\u9876\u5143\u7d20\u4e0e\u5806\u5c3e\u5143\u7d20\u4ea4\u6362\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u4e86\u6700\u5927\u503c\uff09\uff0c\u5e76\u8fdb\u884c\u5411\u4e0b\u8c03\u6574</li> <li>\u5c06\u5806\u9876\u5143\u7d20\u4e0e\u5806\u5c3e\u5143\u7d20\u4ea4\u6362\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u4e86\u6b21\u5927\u503c\uff09\uff0c\u5e76\u8fdb\u884c\u5411\u4e0b\u8c03\u6574</li> <li>\u5982\u6b64\u5faa\u73af N-1 \u6b21\u540e\uff0c\u5f97\u5230\u4e00\u4e2a\u4ece\u5c0f\u5230\u5927\u7684\u6709\u5e8f\u5e8f\u5217</li> </ul> </li> </ul> <pre><code>void heapSort(ElementType arr[], int n)\n{   /* arr[0] is a sential */\n    for (int i = n / 2; i &gt;= 1; i--)\n        percolateDown(arr, n, i);\n    for (int i = n; i &gt; 1; i--) {\n        swap(&amp;arr[1], &amp;arr[i]);\n        percolateDown(arr, i - 1, 1);\n    }\n}\n</code></pre> <ul> <li>\u5bf9\u4e8e\u76f8\u5f02\u5143\u7d20\u7684\u968f\u673a\u5e8f\u5217\uff0c\u5806\u6392\u5e8f\u7684\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a $2N\\log N-\\Omicron(N\\log \\log N)$</li> <li>\u7b97\u6cd5\u4e8c\u5b9e\u73b0\u7684\u5806\u6392\u5e8f\u662f\u539f\u5730\u6392\u5e8f\uff0c\u6ca1\u6709\u6d88\u8017\u989d\u5916\u7684\u7a7a\u95f4</li> </ul> </li> <li> <p>\u5806\u6392\u5e8f\u7684\u5e73\u5747\u3001\u6700\u597d\u3001\u6700\u574f\u590d\u6742\u5ea6\u5747\u4e3a $\\Omicron(N\\log N)$</p> </li> <li>\u5806\u6392\u5e8f\u7684\u5e73\u5747\u590d\u6742\u5ea6\u662f\u4f18\u79c0\u7684\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u65f6\u5f80\u5f80\u4e0d\u5982\u57fa\u4e8e Sedgewick \u589e\u91cf\u5e8f\u5217\u7684\u5e0c\u5c14\u6392\u5e8f</li> </ul>"},{"location":"cs/algorithm/fds/note3/#_6","title":"\u5f52\u5e76\u6392\u5e8f","text":"<ul> <li>\u5f52\u5e76\u6392\u5e8f\u57fa\u4e8e\u5206\u6cbb\u601d\u60f3\uff0c\u5c06\u6570\u636e\u5206\u6bb5\u6392\u5e8f\u540e\u518d\u4f9d\u6b21\u5408\u5e76</li> <li>\u5173\u952e\u7684\u64cd\u4f5c\u662f\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u53ef\u4ee5\u5728 $\\Omicron(N)$ \u65f6\u95f4\u5185\u5b8c\u6210</li> <li>\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u6765\u8f85\u52a9\u5408\u5e76\uff0c\u901a\u5e38\u4f7f\u7528\u4e0e\u539f\u6570\u7ec4\u7b49\u957f\u7684\u8f85\u52a9\u6570\u7ec4</li> <li>$T(N)=2T(\\frac{N}{2})+\\Omicron(N)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N\\log N)$</li> <li> <p>\u9012\u5f52\u5b9e\u73b0</p> <pre><code>void mergeSort(ElementType arr[], int n) {\n    ElementType *tmp = malloc(sizeof(ElementType) * n);\n    if (tmp != NULL) {\n        mergeSortHelper(arr, tmp, 0, n - 1);\n        free(tmp);\n    } else {  /* need O(N) extra space */\n        printf(\"no space for tmp array\");\n    }\n}\n\nvoid mergeSortHelper(ElementType arr[], ElementType tmp[], int left, int right) {\n    if (left &lt; right) {\n        int center = (left + right) / 2;\n        mergeSortHelper(arr, tmp, left, center);\n        mergeSortHelper(arr, tmp, center + 1, right);\n        merge(arr, tmp, left, center + 1, right);\n    }\n}\n\nvoid merge(ElementType arr[], ElementType tmp[], int leftPos, int rightPos, int rightEnd) {\n    int leftEnd = rightPos - 1;\n    int tmpPos = leftPos;\n    int numElements = rightEnd - leftPos + 1;\n    while (leftPos &lt;= leftEnd &amp;&amp; rightPos &lt;= rightEnd) {\n        if (arr[leftPos] &lt;= arr[rightPos])\n            tmp[tmpPos++] = arr[leftPos++];\n        else\n            tmp[tmpPos++] = arr[rightPos++];\n    }\n    while (leftPos &lt;= leftEnd)\n        tmp[tmpPos++] = arr[leftPos++];\n    while (rightPos &lt;= rightEnd)\n        tmp[tmpPos++] = arr[rightPos++];\n    for (int i = 0; i &lt; numElements; i++, rightEnd--)\n        arr[rightEnd] = tmp[rightEnd];\n}\n</code></pre> </li> <li> <p>\u4e5f\u53ef\u4ee5\u8fed\u4ee3\u5b9e\u73b0\uff0c\u4ece\u957f\u5ea6 1 \u5f00\u59cb\u4e0d\u65ad\u500d\u589e\u5206\u5272\u957f\u5ea6\uff0c\u5e76\u4f9d\u6b21\u5408\u5e76</p> </li> <li>\u5f52\u5e76\u6392\u5e8f\u9700\u8981\u989d\u5916\u7684\u8f85\u52a9\u7a7a\u95f4\u5e76\u591a\u6b21\u590d\u5236\u6574\u4e2a\u6570\u7ec4\uff0c\u6240\u4ee5\u901a\u5e38\u4e0d\u7528\u4e8e\u5185\u6392\u5e8f\uff08internal sort\uff09\uff0c\u4f46\u5e38\u7528\u4e8e\u5916\u6392\u5e8f\uff08external sort\uff09</li> </ul>"},{"location":"cs/algorithm/fds/note3/#_7","title":"\u5feb\u901f\u6392\u5e8f","text":"<ul> <li>\u5feb\u901f\u6392\u5e8f\u662f\u5df2\u77e5\u7684\u5b9e\u9645\u8fd0\u884c\u6700\u5feb\u7684\u6392\u5e8f\u7b97\u6cd5</li> <li>\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff08pivot\uff09\uff0c\u5c06\u5f85\u6392\u5e8f\u5217\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5de6\u8fb9\u7684\u5143\u7d20\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u57fa\u51c6\u5143\u7d20\uff0c\u53f3\u8fb9\u7684\u5143\u7d20\u90fd\u5927\u4e8e\u7b49\u4e8e\u57fa\u51c6\u5143\u7d20\uff0c\u7136\u540e\u9012\u5f52\u5730\u5bf9\u5de6\u53f3\u4e24\u90e8\u5206\u7ee7\u7eed\u4f7f\u7528\u5feb\u901f\u6392\u5e8f<ul> <li>\u6ce8\u610f\uff0c\u5de6\u53f3\u4e24\u90e8\u5206\u5206\u522b\u8fdb\u884c\u6392\u5e8f\u4e4b\u540e\uff0c\u4e0d\u9700\u8981\u5408\u5e76\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6b64\u65f6\u5e8f\u5217\u5df2\u7ecf\u5b8c\u5168\u6709\u5e8f</li> </ul> </li> <li>\u9009\u53d6 pivot<ul> <li>\u9519\u8bef\u65b9\u6cd5\uff1apivot = arr[0]\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u6709\u5e8f\u7684\u5e8f\u5217\u4ecd\u4f1a\u6d88\u8017 $\\Omicron(N^ 2)$ \u7684\u65f6\u95f4</li> <li>\u5b89\u5168\u65b9\u6cd5\uff1apivot = random element in arr\uff0c\u7136\u800c\u968f\u673a\u6570\u7684\u751f\u6210\u4e5f\u6709\u5f00\u9500</li> <li>\u4e09\u6570\u4e2d\u503c\uff1apivot = (left + center + right) / 3</li> </ul> </li> <li> <p>\u9012\u5f52\u5b9e\u73b0</p> <pre><code>void quickSort(ElemenType arr[], int n) {\n    quickSortHelper(arr, 0, n - 1);\n}\n\nvoid quickSortHelper(ElementType arr[], int left, int right) {\n    ElementType pivot = median3(arr, left, right);\n    int i = left, j = right - 1;\n    for (;;) {\n        while (arr[++i] &lt; pivot) continue;\n        while (arr[--j] &gt; pivot) continue;\n        if (i &lt; j)\n            swap(&amp;arr[i], &amp;arr[j]);\n        else\n            break;\n    }\n    swap(&amp;arr[i], &amp;arr[right - 1]);\n    quickSortHelper(arr, left, i - 1);\n    quickSortHelper(arr, i + 1, right);\n}\n\nElementType median3(ElementType arr[], int left, int right) {\n    int center = (left + right) / 2;\n    if (arr[left] &gt; arr[center])  swap(&amp;arr[left], &amp;arr[center]);\n    if (arr[left] &gt; arr[right])   swap(&amp;arr[left], &amp;arr[right]);\n    if (arr[center] &gt; arr[right]) swap(&amp;arr[center], &amp;arr[right]);\n    swap(&amp;arr[center], &amp;arr[right - 1]);    /* hide pivot */\n    /* only need to sort arr[left + 1] ... arr[right - 2] */\n    return arr[right - 1];\n}\n</code></pre> </li> <li> <p>\u6700\u574f\u60c5\u51b5\uff1a\u6bcf\u6b21\u9009\u53d6\u7684 pivot \u603b\u662f\u5e8f\u5217\u7684\u6700\u503c\uff0c\u590d\u6742\u5ea6 $\\Omicron(N^ 2)$</p> </li> <li>\u6700\u597d\u60c5\u51b5\uff1a\u6bcf\u6b21\u9009\u53d6\u7684 pivot \u603b\u662f\u5e8f\u5217\u7684\u4e2d\u4f4d\u6570\uff0c\u590d\u6742\u5ea6 $\\Omicron(N\\log N)$</li> <li>\u5e73\u5747\u60c5\u51b5\uff1a\u6bcf\u6b21\u9009\u53d6\u7684 pivot \u662f\u968f\u673a\u7684\uff0c\u590d\u6742\u5ea6 $\\Omicron(N\\log N)$</li> <li>\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\uff08$N\\leq 20$\uff09\uff0c\u5feb\u6392\u6162\u4e8e\u63d2\u5165\u6392\u5e8f<ul> <li>\u53ef\u4ee5\u5728\u5feb\u6392\u9012\u5f52\u5230 $N$ \u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\u6539\u7528\u63d2\u5165\u6392\u5e8f</li> </ul> </li> <li>\u7ebf\u6027\u627e\u7b2c k \u5927\u7684\u6570<ul> <li>\u5229\u7528\u5feb\u6392\uff0c\u6bcf\u6b21\u7528 pivot \u5212\u5206\u6570\u636e\u7684\u65f6\u5019\uff0c\u6839\u636e\u5de6\u53f3\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5224\u65ad\u7b2c k \u5927\u7684\u6570\u662f\u5728\u54ea\u4e00\u8fb9\uff0c\u4ece\u800c\u53ea\u5bf9\u5de6\u8fb9\u6216\u53f3\u8fb9\u7ee7\u7eed\u9012\u5f52\u5feb\u6392</li> <li>\u5982\u679c\u6bcf\u6b21\u9009\u53d6\u7684 pivot \u662f\u968f\u673a\u7684\uff0c\u590d\u6742\u5ea6\u4e3a $\\Omicron(N)$</li> </ul> </li> <li>\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u4e0b\u754c\u4e3a $\\Omega(N\\log N)$<ul> <li>\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\uff1a\u5192\u6ce1\u3001\u9009\u62e9\u3001\u63d2\u5165\u3001\u5e0c\u5c14\u3001\u5806\u6392\u3001\u5f52\u5e76\u3001\u5feb\u6392\u7b49</li> <li>\u975e\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\uff1a\u6876\u6392\u3001\u57fa\u6570\u7b49</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note3/#_8","title":"\u6876\u6392\u5e8f","text":"<ul> <li>\u6876\u6392\u5e8f\u7684\u539f\u7406\u662f\u5c06\u5f85\u6392\u6570\u636e\u5206\u5230\u6709\u9650\u6570\u91cf\u7684\u6876\u91cc\uff0c\u6bcf\u4e2a\u6876\u518d\u5206\u522b\u6392\u5e8f\uff08\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6392\u5e8f\u7b97\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u9012\u5f52\u5730\u6876\u6392\u5e8f\uff09<ol> <li>\u8bbe\u7f6e\u4e00\u4e2a\u5b9a\u91cf\u7684\u6570\u7ec4\u4f5c\u4e3a\u7a7a\u6876</li> <li>\u904d\u5386\u5e8f\u5217\uff0c\u5e76\u5c06\u5143\u7d20\u4e00\u4e2a\u4e2a\u653e\u5230\u5bf9\u5e94\u7684\u6876\u91cc</li> <li>\u5bf9\u6bcf\u4e2a\u975e\u7a7a\u7684\u6876\u91cc\u7684\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f</li> <li>\u4ece\u975e\u7a7a\u7684\u6876\u91cc\u628a\u5143\u7d20\u518d\u653e\u56de\u5230\u539f\u6765\u7684\u5e8f\u5217\u4e2d</li> </ol> </li> <li>\u6876\u6392\u5e8f\u9002\u5408\u5f85\u6392\u6570\u636e\u503c\u57df\u8f83\u5927\u4e14\u5206\u5e03\u6bd4\u8f83\u5747\u5300\u7684\u60c5\u51b5</li> <li>\u6876\u6392\u5e8f\u7684\u4e00\u79cd\u7b80\u5355\u8fd0\u7528\uff1a<ul> <li>\u5982\u679c\u8f93\u5165\u6570\u636e\u90fd\u5c0f\u4e8e $M$\uff0c\u5219\u53ef\u4ee5\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a $M$ \u7684\u6570\u7ec4\u6765\u8bb0\u5f55\u67d0\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8fd9\u4e2a\u6570\u7ec4\u79f0\u4e3a\u6876</li> <li>\u521d\u59cb\u5316\u7a7a\u6876\uff0c\u904d\u5386\u8f93\u5165\u6570\u636e\uff0c\u5c06\u6bcf\u4e2a\u6570\u636e\u5bf9\u5e94\u7684\u6876\u52a0 1</li> <li>\u6700\u540e\u904d\u5386\u6876\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5bf9\u4e8e bucket[x] = y\uff0c\u5c06 x \u8f93\u51fa y \u6b21</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N+M)$</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note3/#_9","title":"\u57fa\u6570\u6392\u5e8f","text":"<ul> <li>\u57fa\u6570\u6392\u5e8f\uff08radix sort\uff09\u5c06\u5f85\u6392\u5143\u7d20\u62c6\u5206\u4e3a k \u4e2a\u5173\u952e\u5b57\uff0c\u9010\u4e00\u57fa\u4e8e\u5173\u952e\u5b57\u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5e8f</li> <li>\u5982\u679c\u4ece\u7b2c 1 \u5173\u952e\u5b57\u5230\u7b2c k \u5173\u952e\u5b57\u987a\u5e8f\u8fdb\u884c\uff0c\u5219\u79f0\u4e3a MSD\uff08most significant digit first\uff09</li> <li>\u5982\u679c\u4ece\u7b2c k \u5173\u952e\u5b57\u5230\u7b2c 1 \u5173\u952e\u5b57\u987a\u5e8f\u8fdb\u884c\uff0c\u5219\u79f0\u4e3a LSD\uff08least significant digit first\uff09</li> <li>\u4f8b\u5982\u5bf9 64\uff0c8\uff0c343\uff0c512\uff0c27\uff0c729\uff0c0\uff0c1\uff0c316\uff0c125 \u8fdb\u884c LSD \u6392\u5e8f<ul> <li>\u4f7f\u7528\u5341\u4e2a\u6876\uff0c\u5206\u522b\u4ee3\u8868\u6570\u5b57 0~9</li> <li>\u7b2c\u4e00\u8f6e\uff0c\u6309\u4e2a\u4f4d\u6570\u6392\u5e8f<ul> <li>0\uff0c1\uff0c512\uff0c343\uff0c64\uff0c125\uff0c316\uff0c27\uff0c8\uff0c729</li> </ul> </li> <li>\u7b2c\u4e8c\u8f6e\uff0c\u6309\u5341\u4f4d\u6570\u6392\u5e8f<ul> <li>(0\uff0c1\uff0c8)\uff0c(512\uff0c316)\uff0c(125\uff0c27\uff0c729)\uff0c343\uff0c64</li> </ul> </li> <li>\u7b2c\u4e09\u8f6e\uff0c\u6309\u767e\u4f4d\u6570\u6392\u5e8f<ul> <li>(0\uff0c1\uff0c8\uff0c27\uff0c64)\uff0c125\uff0c(316\uff0c343)\uff0c512\uff0c729</li> </ul> </li> <li>\u6392\u5e8f\u5b8c\u6210</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(P(N+B))$\uff0c\u5176\u4e2d $P$ \u4e3a\u8f6e\u6570\uff0c$N$ \u4e3a\u5143\u7d20\u4e2a\u6570\uff0c$B$ \u4e3a\u6876\u4e2a\u6570</li> </ul> </li> <li>\u4f8b\u5982\u5bf9 64\uff0c8\uff0c343\uff0c512\uff0c27\uff0c729\uff0c0\uff0c1\uff0c316\uff0c125 \u8fdb\u884c MSD \u6392\u5e8f<ul> <li>\u4f7f\u7528\u5341\u4e2a\u6876\uff0c\u5206\u522b\u4ee3\u8868\u6570\u5b57 0~9</li> <li>\u7b2c\u4e00\u8f6e\uff0c\u6309\u767e\u4f4d\u6570\u6392\u5e8f<ul> <li>(64\uff0c8\uff0c27\uff0c0\uff0c1)\uff0c125\uff0c(343\uff0c316)\uff0c512\uff0c729</li> </ul> </li> <li>\u7b2c\u4e8c\u8f6e\uff0c\u6309\u5341\u4f4d\u6570\u6392\u5e8f<ul> <li>((8\uff0c0\uff0c1)\uff0c27\uff0c64)\uff0c125\uff0c(316\uff0c343)\uff0c512\uff0c729</li> </ul> </li> <li>\u7b2c\u4e09\u8f6e\uff0c\u6309\u4e2a\u4f4d\u6570\u6392\u5e8f<ul> <li>((0\uff0c1\uff0c8)\uff0c27\uff0c64)\uff0c125\uff0c(316\uff0c343)\uff0c512\uff0c729</li> </ul> </li> <li>\u6392\u5e8f\u5b8c\u6210</li> </ul> </li> <li>\u5b57\u5178\u5e8f\uff08lexicographical order\uff09\u4e5f\u8574\u542b\u7740\u5173\u952e\u5b57\u548c\u57fa\u6570\u6392\u5e8f</li> <li>LSD \u4e0d\u9700\u8981\u50cf MSD \u90a3\u6837\u9700\u8981\u501f\u52a9\u9012\u5f52\u6765\u5b9e\u73b0\uff0c\u901a\u5e38\u62e5\u6709\u66f4\u5feb\u7684\u6392\u5e8f\u901f\u5ea6</li> </ul>"},{"location":"cs/algorithm/fds/note3/#_10","title":"\u5176\u4ed6","text":"<ul> <li>\u5f53\u5f85\u6392\u6570\u636e\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5728\u5185\u5b58\u4e2d\u5360\u636e\u5f88\u5927\u7684\u7a7a\u95f4\u65f6\uff0c\u4ea4\u6362\u5143\u7d20\u7684\u5f00\u9500\u662f\u5de8\u5927\u7684\uff0c\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u5143\u7d20\u6dfb\u52a0\u4e00\u4e2a\u7d22\u5f15\uff0c\u5c06\u5bf9\u5143\u7d20\u6392\u5e8f\u6539\u4e3a\u5bf9\u7d22\u5f15\u6392\u5e8f</li> <li>\u6392\u5e8f\u7b97\u6cd5\u7684\u7a33\u5b9a\u6027\u662f\u6307\u76f8\u7b49\u7684\u5143\u7d20\u7ecf\u8fc7\u6392\u5e8f\u540e\u76f8\u5bf9\u987a\u5e8f\u662f\u5426\u53d1\u751f\u4e86\u6539\u53d8<ul> <li>\u7a33\u5b9a\u6392\u5e8f\uff1a\u5192\u6ce1\u3001\u63d2\u5165\u3001\u5f52\u5e76\u3001\u57fa\u6570\u7b49</li> <li>\u4e0d\u7a33\u5b9a\u6392\u5e8f\uff1a\u9009\u62e9\u3001\u5e0c\u5c14\u3001\u5806\u6392\u3001\u5feb\u6392\u7b49</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note3/#_11","title":"\u54c8\u5e0c","text":""},{"location":"cs/algorithm/fds/note3/#_12","title":"\u54c8\u5e0c\u8868","text":"<ul> <li>\u54c8\u5e0c\u8868\uff08hash table\uff09\u4e5f\u79f0\u4e3a\u6563\u5217\u8868\uff0c\u4ee5 (key, value) \u7684\u5f62\u5f0f\u5b58\u50a8\u6570\u636e\uff0c\u5373\u4efb\u610f\u7684\u5173\u952e\u5b57 key \u90fd\u552f\u4e00\u5bf9\u5e94\u5230\u5185\u5b58\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u53ea\u8981\u8f93\u5165\u67e5\u627e\u7684\u5173\u952e\u5b57\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u5730\u627e\u5230\u76f8\u5e94\u7684 value<ul> <li>\u5047\u8bbe\u7528\u6570\u7ec4 a \u5b58\u653e\u6570\u636e\uff0c\u54c8\u5e0c\u51fd\u6570\u662f f\uff0c\u5219 (key, value) \u5c31\u5e94\u8be5\u653e\u5728 a[f(key)] \u4e0a</li> <li>\u53ef\u4ee5\u628a\u54c8\u5e0c\u8868\u7406\u89e3\u4e3a\u4e00\u79cd\u9ad8\u7ea7\u7684\u6570\u7ec4\uff0c\u8fd9\u79cd\u6570\u7ec4\u7684\u4e0b\u6807\u53ef\u4ee5\u662f\u5f88\u5927\u7684\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u5b57\u7b26\u4e32\u751a\u81f3\u7ed3\u6784\u4f53</li> <li>\u5173\u952e\u5b57\u4e5f\u79f0\u6807\u8bc6\u7b26\uff08identifier\uff09</li> </ul> </li> <li>\u901a\u5e38\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u69fd\uff08slot\uff09\uff0c\u5373\u591a\u4e2a\u5173\u952e\u5b57\u5bf9\u5e94\u540c\u4e00\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u5c06\u4e0d\u540c\u5173\u952e\u5b57\u5b58\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e0d\u540c\u69fd\u4e2d</li> <li>\u5bf9\u4e8e\u5173\u952e\u5b57 $x$\uff0c\u5b9a\u4e49\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570 $f(x)$ \u8868\u793a $x$ \u5728\u54c8\u5e0c\u8868 ht[] \u4e2d\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\uff09</li> <li>\u8bbe\u54c8\u5e0c\u8868 ht[] \u7684\u5927\u5c0f\u4e3a $b$\uff08\u5373 $f(x)$ \u503c\u57df\u4e3a $[0,b-1]$\uff09\uff0c\u6700\u591a\u6709 $s$ \u4e2a\u69fd\uff0c\u5219\u5b9a\u4e49\u4ee5\u4e0b\u503c\uff1a<ul> <li>$T$ \u8868\u793a $x$ \u53ef\u80fd\u7684\u4e0d\u540c\u53d6\u503c\u4e2a\u6570</li> <li>$n$ \u8868\u793a ht[] \u4e2d\u5173\u952e\u5b57\u7684\u4e2a\u6570</li> <li>\u6807\u8bc6\u7b26\u5bc6\u5ea6\uff08identifier density\uff09\u5b9a\u4e49\u4e3a $\\frac{n}{T}$</li> <li>\u88c5\u8f7d\u5bc6\u5ea6\uff08loading density\uff09\u5b9a\u4e49\u4e3a $\\lambda=\\frac{n}{sb}$</li> </ul> </li> <li>\u5f53\u5b58\u5728 $i_1\\not =i_2$ \u4e14 $f(i_1)=f(i_2)$ \u7684\u60c5\u51b5\uff0c\u5219\u79f0\u4e3a\u53d1\u751f\u4e86\u51b2\u7a81\uff08collision\uff09</li> <li>\u5f53\u5c06\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57\u6620\u5c04\u5230\u4e00\u4e2a\u6ee1\u7684\u4f4d\u7f6e\u65f6\uff08\u5373\u69fd\u5df2\u7ecf\u88ab\u586b\u6ee1\uff09\uff0c\u5219\u79f0\u4e3a\u53d1\u751f\u4e86\u6ea2\u51fa\uff08overflow\uff09<ul> <li>\u5f53 $s=1$ \u65f6\uff0c\u51b2\u7a81\u548c\u6ea2\u51fa\u5c06\u540c\u65f6\u53d1\u751f</li> </ul> </li> <li>\u4e0d\u8003\u8651\u6ea2\u51fa\uff0c\u590d\u6742\u5ea6 $T_{search}=T_{insert}=T_{delete}=\\Omicron(1)$</li> </ul>"},{"location":"cs/algorithm/fds/note3/#_13","title":"\u54c8\u5e0c\u51fd\u6570","text":"<ul> <li>\u54c8\u5e0c\u51fd\u6570\u5e94\u8be5\u6613\u4e8e\u8ba1\u7b97\uff0c\u4e14\u51cf\u5c11\u51b2\u7a81\u7684\u53ef\u80fd\u6027</li> <li>\u54c8\u5e0c\u51fd\u6570\u5e94\u8be5\u662f unbiased \u7684\uff0c\u5373 $P(f(x)=i)=\\frac{1}{b}$\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u79f0\u4e3a\u5747\u5300\u54c8\u5e0c\u51fd\u6570\uff08uniform hash function\uff09</li> <li>\u5bf9\u4e8e\u6574\u6570\u7684\u54c8\u5e0c\uff0c\u53ef\u4ee5\u53d6 $f(x) = x \\bmod tableSize$<ul> <li>\u5176\u4e2d tableSize \u6700\u597d\u53d6\u4e00\u4e2a\u8d28\u6570\uff0c\u8fd9\u6837\u5bf9\u4e8e\u968f\u673a\u8f93\u5165\uff0c\u5173\u952e\u5b57\u7684\u5206\u5e03\u66f4\u5747\u5300</li> </ul> </li> <li> <p>\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\uff0c\u53ef\u4ee5\u53d6 $f(x)=(\\sum x[N-i-1] \\times 32^ i) \\bmod tableSize$</p> <pre><code>Index hash(const char *x, int tableSize) {\n    unsigned int hashVal = 0;\n    while (*x != '\\0')\n        hashVal = (hashVal &lt;&lt; 5) + *(x++);\n    return hashVal % tableSize;\n}\n</code></pre> </li> </ul>"},{"location":"cs/algorithm/fds/note3/#_14","title":"\u5206\u79bb\u94fe\u63a5","text":"<ul> <li>\u89e3\u51b3\u51b2\u7a81\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5206\u79bb\u94fe\u63a5\uff08separate chaining\uff09</li> <li>\u5728\u6bcf\u4e2a\u5b58\u653e\u6570\u636e\u7684\u5730\u65b9\u5f00\u4e00\u4e2a\u94fe\u8868\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5173\u952e\u5b57\u7d22\u5f15\u5230\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u628a\u5b83\u4eec\u90fd\u653e\u5230\u90a3\u4e2a\u4f4d\u7f6e\u7684\u94fe\u8868\u91cc\u5373\u53ef\uff08\u94fe\u8868\u5b9e\u73b0\u7684\u69fd\uff09</li> <li>\u5efa\u8bae\uff1a\u8bbe\u8ba1\u54c8\u5e0c\u8868\u4e0e\u54c8\u5e0c\u51fd\u6570\uff0c\u4f7f $\\lambda \\approx 1$</li> </ul> <pre><code>struct ListNode;\ntypedef struct ListNode *Position;\nstruct HashTbl;\ntypedef struct HashTbl *HashTable;\nstruct ListNode {\n    ElementType element;\n    Position next;\n};\ntypedef Position List;\nstruct HashTbl {\n    int tableSize;\n    List *theLists;\n};\n\nHashTable initializeTable(int tableSize) {\n    if (tableSize &lt; minTableSize) {\n        error(\"table size too small\");\n        return NULL;\n    }\n    HashTable H = malloc(sizeof(struct HashTbl));\n    if (H == NULL) fatalError(\"out of space\");\n    H-&gt;tableSize = nextPrime(tableSize);  // better be prime.\n    H-&gt;theLists = malloc(sizeof(List) * H-&gt;tableSize);\n    if (H-&gt;theLists == NULL) fatalError(\"out of space\");\n    for (int i = 0; i &lt; H-&gt;tableSize; i++) {\n        H-&gt;theLists[i] = malloc(sizeof(struct ListNode));\n        if (H-&gt;theLists[i] == NULL) fatalError(\"out of space\");\n        else H-&gt;theLists[i]-&gt;next = NULL;\n    }\n    return H;\n}\n\nPosition find(ElementType key, HashTable H) {\n    List L = H-&gt;theLists[hash(key, H-&gt;tableSize)];\n    Position P = L-&gt;next;\n    while (P != NULL &amp;&amp; P-&gt;element != key) P = P-&gt;next;\n    return P;\n}\n\nvoid insert(ElementType key, HashTable H) {\n    Position pos = find(key, H);\n    if (pos == NULL) {\n        Position newCell = malloc(sizeof(struct ListNode));\n        if (newCell == NULL) fatalError(\"out of space\");\n        else {\n            List L = H-&gt;theLists[hash(key, H-&gt;tableSize)];\n            newCell-&gt;next = L-&gt;next;\n            newCell-&gt;element = key;\n            L-&gt;next = newCell;\n        }\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/fds/note3/#_15","title":"\u5f00\u653e\u5bfb\u5740","text":"<ul> <li>\u89e3\u51b3\u51b2\u7a81\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5f00\u653e\u5bfb\u5740\uff08open addressing\uff09</li> <li>\u5f53\u6709\u51b2\u7a81\u53d1\u751f\u65f6\uff0c\u5c1d\u8bd5\u9009\u62e9\u5176\u4ed6\u4f4d\u7f6e\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u4f4d\u7f6e\u4e3a\u6b62</li> <li>\u5efa\u8bae\uff1a\u8bbe\u8ba1\u54c8\u5e0c\u8868\u4e0e\u54c8\u5e0c\u51fd\u6570\uff0c\u4f7f $\\lambda &lt; 0.5$</li> <li>\u53ef\u4ee5\u89c6\u4f5c\u4f7f\u7528\u4e86\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570 $h_0(x),h_1(x),...$\uff0c\u5176\u4e2d $h_i(x)=(hash(x)+f(i)) \\bmod tableSize$<ul> <li>\u5176\u4e2d $f(i)$ \u4e3a\u589e\u91cf\u51fd\u6570\uff0c\u6709\u591a\u79cd\u9009\u53d6\u7684\u65b9\u5f0f</li> </ul> </li> </ul> <pre><code>void insert(ElementType key) {\n    index = hash(key); int i = 0;\n    while (collision at index) {\n        index = (hash(key) + f(i)) % tableSize;\n        if (table is full) break;\n        else i++;\n    }\n    if (table is full) error(\"no space left\");\n    else table[index] = key;\n}\n</code></pre>"},{"location":"cs/algorithm/fds/note3/#_16","title":"\u7ebf\u6027\u63a2\u6d4b","text":"<ul> <li>\u7ebf\u6027\u63a2\u6d4b\uff08linear probing\uff09\u4f7f\u7528\u589e\u91cf\u51fd\u6570 $f(i)=i$</li> <li>\u5373\u51b2\u7a81\u4e86\u5c31\u5f80\u540e\u4e00\u4e2a\u4e00\u4e2a\u627e\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u4f4d\u7f6e\u4e3a\u6b62</li> <li>\u4f1a\u5bfc\u81f4\u4e00\u6b21\u805a\u96c6\uff08primary clustering\uff09\uff0c\u5373\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u90a3\u4e48\u540e\u9762\u63d2\u5165\u5728\u9644\u8fd1\u7684\u5143\u7d20\u4e5f\u90fd\u5f88\u5bb9\u6613\u53d1\u751f\u51b2\u7a81\uff0c\u9700\u8981\u4e0d\u65ad\u5f80\u540e\u5bfb\u5740\uff0c\u5bfc\u81f4\u63d2\u5165\u548c\u641c\u7d22\u5f00\u9500\u90fd\u5927\u5e45\u589e\u52a0<ul> <li>\u7406\u89e3\uff1aany key that hashes into the cluster will add to the cluster after several attempts to resolve the collision.</li> <li>\u5bf9\u4e8e\u63d2\u5165\u548c\u4e0d\u6210\u529f\u7684\u641c\u7d22\uff0c\u63a2\u6d4b\u6b21\u6570\u7ea6\u4e3a $\\frac{1}{2}(1+\\frac{1}{(1-\\lambda)^ 2})$</li> <li>\u5bf9\u4e8e\u6210\u529f\u7684\u641c\u7d22\uff0c\u63a2\u6d4b\u6b21\u6570\u7ea6\u4e3a $\\frac{1}{2}(1+\\frac{1}{1-\\lambda})$</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note3/#_17","title":"\u5e73\u65b9\u63a2\u6d4b","text":"<ul> <li>\u5e73\u65b9\u63a2\u6d4b\uff08quadratic probing\uff09\u4f7f\u7528\u589e\u91cf\u51fd\u6570 $f(i)=i^ 2$</li> <li>\u5bf9\u4e8e\u4f7f\u7528\u5e73\u65b9\u63a2\u6d4b\u7684\u5f00\u653e\u5bfb\u5740\u6cd5\uff0c\u5982\u679c tableSize \u4e3a\u8d28\u6570\uff0c\u4e14\u81f3\u5c11\u4e00\u534a\u4e3a\u7a7a\uff0c\u5219\u603b\u80fd\u6210\u529f\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u5143\u7d20</li> <li>\u5982\u679c tableSize \u4e3a\u5f62\u5982 4k+3 \u7684\u8d28\u6570\uff0c\u5219\u5e73\u65b9\u63a2\u6d4b\u7684\u63a2\u6d4b\u8303\u56f4\u53ef\u4ee5\u8986\u76d6\u6574\u4e2a\u8868</li> <li> <p>\u641c\u7d22</p> <ul> <li>$f(i) = f(i-1) + i^ 2 - (i-1)^ 2 = f(i-1) + 2i - 1$</li> </ul> <pre><code>Position find(ElementType key, HashTable H) {\n    Position currentPos = hash(key, H-&gt;tableSize); int collisionNum = 0;\n    while (H-&gt;theCells[currentPos].info != Empty &amp;&amp; H-&gt;theCells[currentPos].element != key) {\n        currentPos += 2 * ++collisionNum - 1;\n        if (currentPos &gt;= H-&gt;tableSize) currentPos -= H-&gt;tableSize;  // faster than mod.\n    }\n    return currentPos;\n}\n</code></pre> </li> <li> <p>\u63d2\u5165</p> <pre><code>void insert(ElementType key, HashTable H) {\n    Position pos = find(key, H);\n    if (H-&gt;theCells[pos].info != Legitimate) {\n        H-&gt;theCells[pos].info = Legitimate;\n        H-&gt;theCells[pos].element = key;\n    }\n}\n</code></pre> </li> <li> <p>\u4f1a\u5bfc\u81f4\u4e8c\u6b21\u805a\u96c6\uff08secondary clustering\uff09\uff0c\u5373\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\u53d1\u751f\u591a\u6b21\u51b2\u7a81\uff0c\u540e\u6765\u53d1\u751f\u7684\u51b2\u7a81\u4f1a\u9700\u8981\u4e0d\u65ad\u5f80\u540e\u5bfb\u5740\uff0c\u5bfc\u81f4\u63d2\u5165\u548c\u641c\u7d22\u5f00\u9500\u90fd\u5927\u5e45\u589e\u52a0</p> <ul> <li>\u7406\u89e3\uff1akeys that hash to the same position will probe the same alternative cells.</li> </ul> </li> </ul>"},{"location":"cs/algorithm/fds/note3/#_18","title":"\u53cc\u54c8\u5e0c","text":"<ul> <li>\u53cc\u54c8\u5e0c\uff08double hashing\uff09\u4f7f\u7528\u589e\u91cf\u51fd\u6570 $f(i)=i\\times hash_2(x)$\uff0c\u5176\u4e2d $hash_2$ \u662f\u53e6\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570</li> <li>\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u53d6\u65b9\u6848\uff1a$hash_2(x)=R-(x\\bmod R)$\uff0c\u5176\u4e2d $R$ \u4e3a\u4e00\u4e2a\u5c0f\u4e8e tableSize \u7684\u8d28\u6570</li> <li>\u7ebf\u6027\u63a2\u6d4b\u4e0e\u5e73\u65b9\u63a2\u6d4b\u90fd\u4f1a\u5bfc\u81f4 cluster \u7684\u51fa\u73b0\uff0c\u8fd9\u5bf9\u4e8e\u5f00\u653e\u5bfb\u5740\u6cd5\u7684\u6027\u80fd\u6709\u5f88\u5927\u7684\u5f71\u54cd\uff0c\u53cc\u54c8\u5e0c\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898</li> <li>\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7531\u4e8e\u5e73\u65b9\u63a2\u6d4b\u4e0d\u9700\u8981\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u6240\u4ee5\u901a\u5e38\u66f4\u52a0\u7b80\u5355\u5feb\u901f</li> </ul>"},{"location":"cs/algorithm/fds/note3/#_19","title":"\u518d\u54c8\u5e0c","text":"<ul> <li>\u5f00\u653e\u5bfb\u5740\u6cd5\u5bf9\u4e8e $\\lambda &lt; 0.5$ \u662f\u9002\u7528\u7684\uff0c\u4f46\u5f53\u8868\u4e2d\u7684\u5143\u7d20\u8fc7\u591a\u65f6\uff0c\u64cd\u4f5c\u65f6\u95f4\u4f1a\u5f88\u957f\uff0c\u800c\u4e14\u5f88\u53ef\u80fd\u63d2\u5165\u5931\u8d25</li> <li>\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u518d\u54c8\u5e0c\uff08rehashing\uff09<ol> <li>\u5efa\u7acb\u4e00\u4e2a\u4e24\u500d\u5927\u7684\u54c8\u5e0c\u8868</li> <li>\u626b\u63cf\u539f\u59cb\u54c8\u5e0c\u8868</li> <li>\u7528\u4e00\u4e2a\u65b0\u7684\u54c8\u5e0c\u51fd\u6570\u628a\u539f\u59cb\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u6620\u5c04\u5230\u65b0\u7684\u54c8\u5e0c\u8868\u4e2d\uff0c\u5373 $hash_{new}(key)$</li> </ol> </li> <li>\u5982\u679c\u539f\u59cb\u54c8\u5e0c\u8868\u4e2d\u6709 $N$ \u4e2a\u5143\u7d20\uff0c\u5219\u518d\u54c8\u5e0c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N)$</li> <li>\u4ec0\u4e48\u65f6\u5019\u8fdb\u884c\u518d\u54c8\u5e0c\uff1a<ul> <li>\u8868\u586b\u6ee1\u4e00\u534a\u4e86</li> <li>\u63d2\u5165\u5931\u8d25</li> <li>\u5f53\u54c8\u5e0c\u8868\u8fbe\u5230\u67d0\u4e2a\u7279\u5b9a\u7684\u88c5\u8f7d\u5bc6\u5ea6\u65f6</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/","title":"Princeton Algorithms","text":"<p> \u7ea6 45 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u666e\u6797\u65af\u987f\u5927\u5b66 Algorithms I &amp; II \u5b66\u4e60\u7b14\u8bb0</li> <li>\u53c2\u8003\u8d44\u6599\uff1a<ul> <li>\u8bfe\u7a0b\u8d44\u6e90\uff1aAlgorithms I\uff0cAlgorithms II</li> <li>\u8bfe\u7a0b\u7f51\u7ad9\uff1ahttps://algs4.cs.princeton.edu/home/</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/#table-of-contents","title":"Table of Contents","text":"<p>\u66f4\u65b0\u4e2d...</p>"},{"location":"cs/algorithm/princeton/note1/","title":"Algorithms I","text":"<p> \u7ea6 7404 \u4e2a\u5b57  1376 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 47 \u5206\u949f</p>"},{"location":"cs/algorithm/princeton/note1/#_1","title":"\u5e76\u67e5\u96c6","text":"<ul> <li>\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u5408\u5e76\uff08union\uff09\uff1a\u5408\u5e76\u4e24\u4e2a\u5143\u7d20\u6240\u5c5e\u96c6\u5408</li> <li>\u67e5\u8be2\uff08find\uff09\uff1a\u67e5\u8be2\u67d0\u4e2a\u5143\u7d20\u5c5e\u4e8e\u54ea\u4e2a\u96c6\u5408\uff0c\u7528\u4ee5\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408</li> </ul> </li> <li>\u5e76\u67e5\u96c6\u5728\u6570\u5b66\u4e0a\u57fa\u4e8e\u7b49\u4ef7\u5173\u7cfb\u548c\u7b49\u4ef7\u7c7b<ul> <li>\u5177\u6709\u7b49\u4ef7\u5173\u7cfb\u7684\u95ee\u9898\uff0c\u90fd\u53ef\u4ee5\u62bd\u8c61\u6210\u5e76\u67e5\u96c6\u6a21\u578b</li> <li>\u5408\u5e76\u4e0e\u67e5\u8be2\u5c31\u662f\u5bf9\u5143\u7d20\u6240\u5c5e\u7b49\u4ef7\u7c7b\u7684\u5408\u5e76\u4e0e\u67e5\u8be2</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_2","title":"\u5b9e\u73b0","text":"<ul> <li>\u601d\u8def\u4e00\uff1a\u76f4\u63a5\u7528\u6570\u7ec4 id[] \u6807\u8bb0\u5143\u7d20\u6240\u5c5e\u96c6\u5408\uff0cid[] \u503c\u76f8\u540c\u7684\u5143\u7d20\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408<ul> <li>\u5408\u5e76\u64cd\u4f5c\u5f00\u9500\u5f88\u5927\uff08\u9700\u8981\u904d\u5386\u6570\u7ec4\uff09</li> </ul> </li> <li>\u601d\u8def\u4e8c\uff1a\u6784\u5efa\u68ee\u6797\uff0c\u7528\u6570\u7ec4 id[] \u6807\u8bb0\u5143\u7d20\u7684\u7236\u8282\u70b9\uff0c\u540c\u4e00\u68f5\u6811\u4e0a\u7684\u5143\u7d20\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408<ul> <li>\u6811\u6709\u53ef\u80fd\u53d8\u5f97\u5f88\u9ad8\uff0c\u5bfc\u81f4\u67e5\u8be2\u64cd\u4f5c\u5f00\u9500\u5f88\u5927\uff08\u5bfb\u627e\u6839\u8282\u70b9\u53ef\u80fd\u9700\u8981\u904d\u5386\u6570\u7ec4\uff09</li> </ul> </li> <li>\u4f18\u5316\u4e00\uff1a\u52a0\u6743\u5408\u5e76<ul> <li>\u603b\u662f\u628a\u6811\u7684\u8282\u70b9\u6570\u91cf size \u5c0f\u7684\u6811\u5408\u5e76\u5230 size \u5927\u7684\u6811\u4e0a<ul> <li>$N$ \u4e2a\u5143\u7d20\u751f\u6210\u7684\u6811\u7684\u9ad8\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 $\\log N$</li> <li>\u7528 size \u4f5c\u4e3a\u6743\u503c\u4e0d\u591f\u7406\u60f3\uff0c\u56e0\u4e3a\u52a0\u6743\u5408\u5e76\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5173\u952e\u5728\u4e8e\u6811\u7684\u9ad8\u5ea6\uff0c\u8282\u70b9\u6570\u91cf\u5927\u5c0f\u4e0d\u4e00\u5b9a\u80fd\u53cd\u6620\u6811\u7684\u9ad8\u5ea6\u5927\u5c0f</li> </ul> </li> <li>\u603b\u662f\u628a\u6811\u7684\u9ad8\u5ea6 height \u5c0f\u7684\u6811\u5408\u5e76\u5230 height \u5927\u7684\u6811\u4e0a<ul> <li>\u770b\u8d77\u6765\u4f3c\u4e4e\u6ca1\u95ee\u9898\uff0c\u4f46\u5982\u679c\u540c\u65f6\u4f7f\u7528\u4e86\u8def\u5f84\u538b\u7f29\uff0cheight \u4f1a\u5f88\u96be\u7ef4\u62a4\uff0c\u56e0\u4e3a\u67e5\u8be2\u7684\u65f6\u5019\u53d1\u751f\u4e86\u8def\u5f84\u538b\u7f29\uff0c\u4f1a\u591a\u6b21\u6539\u53d8\u6811\u7684\u9ad8\u5ea6</li> </ul> </li> <li>\u603b\u662f\u628a\u6811\u7684\u79e9 rank \u5c0f\u7684\u6811\u5408\u5e76\u5230 rank \u5927\u7684\u6811\u4e0a<ul> <li>rank \u53ea\u5728\u5408\u5e76\u4e24\u68f5 rank \u4e00\u6837\u7684\u6811\u7684\u65f6\u5019\u66f4\u65b0\uff0c\u5e76\u4e14\u6bcf\u6b21\u589e\u52a0 1</li> <li>\u6309\u79e9\u5408\u5e76\u662f\u6309\u9ad8\u5ea6\u5408\u5e76\u7684\u4e00\u79cd\u4f18\u5316\u7248\u672c</li> </ul> </li> </ul> </li> <li>\u4f18\u5316\u4e8c\uff1a\u8def\u5f84\u538b\u7f29<ul> <li>\u5bfb\u627e\u5143\u7d20\u7684\u6839\u8282\u70b9\u65f6\uff0c\u5c06\u904d\u5386\u5230\u7684\u6240\u6709\u8282\u70b9 id[] \u76f4\u63a5\u6307\u5411\u6839\u8282\u70b9<ul> <li>\u9700\u8981\u9012\u5f52\u6216\u8005\u518d\u6b21\u904d\u5386\u5b9e\u73b0</li> </ul> </li> <li>\u5bfb\u627e\u5143\u7d20\u7684\u6839\u8282\u70b9\u65f6\uff0c\u5c06\u904d\u5386\u5230\u7684\u6240\u6709\u8282\u70b9 id[] \u6307\u5411\u5176\u7236\u8282\u70b9\u7684\u7236\u8282\u70b9<ul> <li>\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u8868\u73b0\u4e0d\u9519\uff0c\u6bcf\u6b21\u5bfb\u627e\u6839\u8282\u70b9\u53ef\u4ee5\u5c06\u8def\u5f84\u957f\u5ea6\u51cf\u534a</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_3","title":"\u4ee3\u7801","text":"Java Implementation Union-Find with Union-by-Rank and Path-Compression<pre><code>package edu.princeton.cs.algs4;\n\npublic class UF {\n\n    private int[] parent;  // parent[i] = parent of i\n    private byte[] rank;   // rank[i] = rank of subtree rooted at i (never more than 31)\n    private int count;     // number of components\n\n    public UF(int n) {\n        if (n &lt; 0) throw new IllegalArgumentException();\n        count = n;\n        parent = new int[n];\n        rank = new byte[n];\n        for (int i = 0; i &lt; n; i++) {\n            parent[i] = i;\n            rank[i] = 0;\n        }\n    }\n\n    public int find(int p) {\n        validate(p);\n        while (p != parent[p]) {\n            parent[p] = parent[parent[p]];    // path compression by halving\n            p = parent[p];\n        }\n        return p;\n    }\n\n    public int count() {\n        return count;\n    }\n\n    /**\n     * @deprecated Replace with two calls to {@link #find(int)}\n     */\n    @Deprecated\n    public boolean connected(int p, int q) {\n        return find(p) == find(q);\n    }\n\n    public void union(int p, int q) {\n        int rootP = find(p);\n        int rootQ = find(q);\n        if (rootP == rootQ) return;\n\n        // make root of smaller rank point to root of larger rank\n        if      (rank[rootP] &lt; rank[rootQ]) parent[rootP] = rootQ;\n        else if (rank[rootP] &gt; rank[rootQ]) parent[rootQ] = rootP;\n        else {\n            parent[rootQ] = rootP;\n            rank[rootP]++;\n        }\n        count--;\n    }\n\n    // validate that p is a valid index\n    private void validate(int p) {\n        int n = parent.length;\n        if (p &lt; 0 || p &gt;= n) {\n            throw new IllegalArgumentException(\"index \" + p + \" is not between 0 and \" + (n-1));\n        }\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/princeton/note1/#_4","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<ul> <li>Hopcroft-Ulman\uff0cTarjan\uff1a\u4ece\u7a7a\u7684\u5185\u542b $N$ \u4e2a\u5143\u7d20\u7684\u6570\u636e\u7ed3\u6784\u5f00\u59cb\uff0c\u4efb\u4f55 $M$ \u6b21\u5408\u5e76\u4e0e\u67e5\u627e\u64cd\u4f5c\u90fd\u81f3\u591a\u9700\u8981 $c(N+M \\lg^{*} N)$ \u6b21\u6570\u7ec4\u8bbf\u95ee<ul> <li>$\\lg^{*}$ \u662f\u8fed\u4ee3\u5bf9\u6570\uff0c\u73b0\u5b9e\u4e2d\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u4e2a\u5c0f\u4e8e $5$ \u7684\u6570</li> <li>\u590d\u6742\u5ea6\u5206\u6790\u53ef\u8fdb\u4e00\u6b65\u7cbe\u786e\u5230 $N+M\\alpha (M,N)$\uff0c$\\alpha$ \u662f Ackermann \u51fd\u6570\u7684\u53cd\u51fd\u6570\uff0c\u8bc1\u660e\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc</li> </ul> </li> <li>Fredman-Saks\uff1a\u5e76\u67e5\u96c6\u95ee\u9898\u6ca1\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u7b97\u6cd5</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_5","title":"\u601d\u8003\u9898","text":"<ul> <li>\u8bbe\u8ba1\u5e76\u67e5\u96c6\uff0c\u4f7f\u5176\u652f\u6301\u67e5\u8be2\u4efb\u4e00\u5143\u7d20\u6240\u5728\u96c6\u5408\u7684\u6700\u5927\u5143\uff0c\u4e14\u5408\u5e76\u3001\u67e5\u8be2\u64cd\u4f5c\u4e0d\u80fd\u8d85\u8fc7\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6<ul> <li>\u601d\u8def\u4e00\uff1a\u989d\u5916\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u96c6\u5408\u7684\u6700\u5927\u5143</li> <li>\u601d\u8def\u4e8c\uff1a\u603b\u662f\u628a\u6839\u8282\u70b9\u5c0f\u7684\u6811\u5408\u5e76\u5230\u6839\u8282\u70b9\u5927\u7684\u6811\u4e0a\uff0c\u67e5\u8be2\u6839\u8282\u70b9\u5373\u53ef\u5f97\u5230\u6700\u5927\u5143<ul> <li>\u5b9e\u9645\u4e0a\u6bcf\u68f5\u6811\u90fd\u662f\u4e00\u4e2a\u5806\uff08\u4f18\u5148\u961f\u5217\uff09</li> <li>\u6811\u6709\u53ef\u80fd\u53d8\u5f97\u5f88\u9ad8\uff0c\u5bfc\u81f4\u67e5\u8be2\u5f00\u9500\u8d85\u8fc7\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6</li> </ul> </li> <li>\u601d\u8def\u4e09\uff1a\u52a0\u6743\u5408\u5e76\uff0c\u6bcf\u6b21\u5408\u5e76\u6bd4\u8f83\u4e24\u68f5\u6811\u7684\u6839\u8282\u70b9\u5927\u5c0f\uff0c\u5982\u679c\u8f83\u5927\u7684\u6839\u8282\u70b9\u5c06\u88ab\u5408\u5e76\u5230\u53e6\u4e00\u68f5\u6811\u4e0a\uff0c\u5219\u4ea4\u6362\u4e24\u4e2a\u6839\u8282\u70b9<ul> <li>\u662f\u5bf9\u601d\u8def\u4e8c\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u6bcf\u68f5\u6811\u5e76\u4e0d\u662f\u5806\uff0c\u4f46\u662f\u6839\u8282\u70b9\u5b58\u50a8\u6700\u5927\u5143</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_6","title":"\u6808\u548c\u961f\u5217","text":"<ul> <li>\u6808\u548c\u961f\u5217\u90fd\u662f\u7ebf\u6027\u7684\u6570\u636e\u7ed3\u6784<ul> <li>\u6808\u662f\u540e\u8fdb\u5148\u51fa\u7684\uff08LIFO: last in first out\uff09</li> <li>\u961f\u5217\u662f\u5148\u8fdb\u5148\u51fa\u7684\uff08FIFO: first in first out\uff09</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_7","title":"\u5b9e\u73b0","text":"<ul> <li>\u94fe\u8868\u5b9e\u73b0</li> <li>\u53ef\u53d8\u6570\u7ec4\u5b9e\u73b0<ul> <li>\u5f53\u6570\u7ec4\u6ee1\u4e86\u7684\u65f6\u5019\uff0c\u65b0\u5efa\u4e00\u4e2a\u4e24\u500d\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u5e76\u628a\u6570\u636e\u8fc1\u79fb\u5230\u65b0\u6570\u7ec4</li> <li>\u5f53\u6570\u7ec4\u56db\u5206\u4e4b\u4e00\u6ee1\u7684\u65f6\u5019\uff0c\u65b0\u5efa\u4e00\u4e2a\u4e00\u534a\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u5e76\u628a\u6570\u636e\u8fc1\u79fb\u5230\u65b0\u6570\u7ec4<ul> <li>\u5f53\u6570\u7ec4\u534a\u6ee1\u7684\u65f6\u5019 resize \u662f\u4e0d\u5408\u7406\u7684\uff0c\u6bd4\u5982\u5728\u534a\u6ee1\u4f4d\u7f6e\u53cd\u590d\u6267\u884c push \u548c pop \u64cd\u4f5c\u4f1a\u5bfc\u81f4\u53cd\u590d resize\uff0c\u6548\u7387\u6781\u4f4e</li> </ul> </li> </ul> </li> <li>\u94fe\u8868\uff1a<ul> <li>\u6bcf\u4e2a\u64cd\u4f5c\u603b\u662f\u6d88\u8017\u5e38\u6570\u65f6\u95f4\uff0c\u5373\u4f7f\u662f\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff1b</li> <li>\u9700\u8981\u6d88\u8017\u989d\u5916\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u6765\u5904\u7406\u94fe\u8868\u7ed3\u6784\uff1b</li> </ul> </li> <li>\u53ef\u53d8\u6570\u7ec4\uff1a<ul> <li>\u5747\u644a\u5206\u6790\u540e\u5177\u6709\u66f4\u9ad8\u7684\u5e73\u5747\u6548\u7387\uff0c\u4f46\u662f\u6d88\u8017\u4f1a\u96c6\u4e2d\u5728\u5728\u4e34\u754c\u72b6\u6001\uff08\u9700\u8981\u500d\u589e\u6216\u500d\u51cf\u6570\u7ec4\u65f6\uff09\u53d1\u751f\uff1b</li> <li>\u6d6a\u8d39\u66f4\u5c11\u7684\u7a7a\u95f4\uff1b</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_8","title":"\u4ee3\u7801","text":"Stack: Java Implementation Linked-List Stack of Generic Items<pre><code>package edu.princeton.cs.algs4;\nimport java.util.NoSuchElementException;\n\npublic class Stack&lt;Item&gt; {\n    private Node&lt;Item&gt; first;     // top of stack\n    private int n;                // size of the stack\n\n    // helper linked list class\n    private static class Node&lt;Item&gt; {\n        private Item item;\n        private Node&lt;Item&gt; next;\n    }\n\n    public Stack() {\n        first = null;\n        n = 0;\n    }\n\n    public boolean isEmpty() {\n        return first == null;\n    }\n\n    public int size() {\n        return n;\n    }\n\n    public void push(Item item) {\n        Node&lt;Item&gt; oldfirst = first;\n        first = new Node&lt;Item&gt;();\n        first.item = item;\n        first.next = oldfirst;\n        n++;\n    }\n\n    public Item pop() {\n        if (isEmpty()) throw new NoSuchElementException(\"Stack underflow\");\n        Item item = first.item;        // save item to return\n        first = first.next;            // delete first node\n        n--;\n        return item;                   // return the saved item\n    }\n\n    public Item peek() {\n        if (isEmpty()) throw new NoSuchElementException(\"Stack underflow\");\n        return first.item;\n    }\n}\n</code></pre> Queue: Java Implementation Linked-List Queue of Generic Items<pre><code>package edu.princeton.cs.algs4;\nimport java.util.NoSuchElementException;\n\npublic class Queue&lt;Item&gt; {\n    private Node&lt;Item&gt; first;    // beginning of queue\n    private Node&lt;Item&gt; last;     // end of queue\n    private int n;               // number of elements on queue\n\n    // helper linked list class\n    private static class Node&lt;Item&gt; {\n        private Item item;\n        private Node&lt;Item&gt; next;\n    }\n\n    public Queue() {\n        first = null;\n        last  = null;\n        n = 0;\n    }\n\n    public boolean isEmpty() {\n        return first == null;\n    }\n\n    public int size() {\n        return n;\n    }\n\n    public Item peek() {\n        if (isEmpty()) throw new NoSuchElementException(\"Queue underflow\");\n        return first.item;\n    }\n\n    public void enqueue(Item item) {\n        Node&lt;Item&gt; oldlast = last;\n        last = new Node&lt;Item&gt;();\n        last.item = item;\n        last.next = null;\n        if (isEmpty()) first = last;\n        else           oldlast.next = last;\n        n++;\n    }\n\n    public Item dequeue() {\n        if (isEmpty()) throw new NoSuchElementException(\"Queue underflow\");\n        Item item = first.item;\n        first = first.next;\n        n--;\n        if (isEmpty()) last = null;   // to avoid loitering\n        return item;\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/princeton/note1/#_9","title":"\u601d\u8003\u9898","text":"<ul> <li>\u6808\u548c\u961f\u5217\u53ef\u4ee5\u76f8\u4e92\u5b9e\u73b0<ul> <li>\u7528\u53cc\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\uff0c\u8981\u6c42\u51fa\u5165\u961f\u64cd\u4f5c\u7684\u5747\u644a\u5f00\u9500\u4e3a\u5e38\u6570\u65f6\u95f4</li> <li>\u7528\u53cc\u961f\u5217\u5b9e\u73b0\u4e00\u4e2a\u6808\uff0c\u8981\u6c42\u51fa\u5165\u6808\u64cd\u4f5c\u7684\u5747\u644a\u5f00\u9500\u4e3a\u5e38\u6570\u65f6\u95f4</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_10","title":"\u6392\u5e8f\u57fa\u7840","text":"<ul> <li>\u6392\u5e8f\u7b97\u6cd5\u7684\u524d\u63d0\u662f\u6570\u636e\u662f\u53ef\u6392\u5e8f\u7684\uff0c\u5728\u6570\u5b66\u4e0a\u57fa\u4e8e\u5168\u5e8f\u5173\u7cfb</li> <li>\u5206\u4eab\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u6392\u5e8f\u7b97\u6cd5\u53ef\u89c6\u5316\u7f51\u7ad9\uff1a https://www.toptal.com/developers/sorting-algorithms</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_11","title":"\u6392\u5e8f\u590d\u6742\u5ea6","text":"<ul> <li>\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u81f3\u5c11\u9700\u8981 $\\log (N!) \\sim N\\log N$ \u6b21\u6bd4\u8f83<ul> <li>\u8bc1\u660e\uff1a\u51b3\u7b56\u6811 + Stirling \u8fd1\u4f3c</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_12","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<ul> <li>\u5e0c\u5c14\u6392\u5e8f\u57fa\u4e8e\u4e00\u4e2a\u589e\u91cf\u5e8f\u5217\uff0c\u4e0d\u65ad\u5bf9\u539f\u59cb\u6570\u636e\u6309\u4e00\u5b9a\u95f4\u9694\u53d6\u5b50\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f</li> <li>\u4e3a\u4ec0\u4e48\u5e0c\u5c14\u6392\u5e8f\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u5e8f\u5217\u7684\u5177\u4f53\u6392\u5e8f\u7b97\u6cd5\u662f\u63d2\u5165\u6392\u5e8f\uff1f<ul> <li>\u5bf9\u4e8e\u589e\u91cf\u5e8f\u5217\u4e2d\u7684\u8f83\u5927\u503c\uff0c\u53d6\u51fa\u7684\u6bcf\u4e2a\u5b50\u5e8f\u5217\u4e2d\u6570\u636e\u6570\u91cf\u90fd\u5f88\u5c11\uff0c\u5c0f\u89c4\u6a21\u6570\u636e\u63d2\u5165\u6392\u5e8f\u7684\u8868\u73b0\u5e76\u4e0d\u5dee</li> <li>\u5bf9\u4e8e\u589e\u91cf\u5e8f\u5217\u4e2d\u7684\u8f83\u5c0f\u503c\uff0c\u6b64\u65f6\u7684\u6570\u636e\u5df2\u7ecf\u51e0\u4e4e\u6709\u5e8f\u4e86\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u8868\u73b0\u975e\u5e38\u597d<ul> <li>\u57fa\u4e8e\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5927\u589e\u91cf\u6709\u5e8f\u7684\u6570\u636e\u5728\u5c0f\u589e\u91cf\u6392\u5e8f\u540e\u4ecd\u7136\u662f\u5927\u589e\u91cf\u6709\u5e8f\u7684\uff0c\u8bc1\u660e\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_13","title":"\u4ee3\u7801","text":"Java Implementation Shell Sort with Knuth's Increment Sequence<pre><code>package edu.princeton.cs.algs4;\n\npublic class Shell {\n    // This class should not be instantiated.\n    private Shell() { }\n\n    public static void sort(Comparable[] a) {\n        int n = a.length;\n\n        // 3x+1 increment sequence:  1, 4, 13, 40, 121, 364, 1093, ...\n        int h = 1;\n        while (h &lt; n/3) h = 3*h + 1;\n\n        while (h &gt;= 1) {\n            // h-sort the array\n            for (int i = h; i &lt; n; i++) {\n                for (int j = i; j &gt;= h &amp;&amp; less(a[j], a[j-h]); j -= h) {\n                    exch(a, j, j-h);\n                }\n            }\n            h /= 3;\n        }\n    }\n\n    // is v &lt; w ?\n    private static boolean less(Comparable v, Comparable w) {\n        return v.compareTo(w) &lt; 0;\n    }\n\n    // exchange a[i] and a[j]\n    private static void exch(Object[] a, int i, int j) {\n        Object swap = a[i];\n        a[i] = a[j];\n        a[j] = swap;\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/princeton/note1/#_14","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<ul> <li>\u5e0c\u5c14\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u589e\u91cf\u5e8f\u5217\u7684\u9009\u53d6\u6709\u5173<ul> <li>Knuth\uff1a1,4,13,40,121,364,...<ul> <li>$h_{k}=3h_{k-1}+1$</li> <li>\u6bd4\u8f83\u5bb9\u6613\u8ba1\u7b97\u5b9e\u73b0\uff0c\u6700\u574f\u60c5\u51b5\u6bd4\u8f83\u6b21\u6570\u4e3a $\\Omicron(N^ {3/2})$</li> </ul> </li> <li>Sedgewick\uff1a1,5,19,41,109,209,...<ul> <li>\u5947\u5076\u4ea4\u66ff\u7531 $(9\\times 4^ i)-(9\\times 2^ i)+1$ \u548c $4^ i-(3\\times 2^ i)+1$ \u8ba1\u7b97\u5f97\u5230</li> <li>\u5728\u73b0\u6709\u7814\u7a76\u4e2d\u51e0\u4e4e\u662f\u8868\u73b0\u6700\u597d\u7684</li> </ul> </li> </ul> </li> <li>\u5e0c\u5c14\u6392\u5e8f\u7684\u6700\u4f73\u589e\u91cf\u5e8f\u5217\u548c\u6700\u4f73\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u662f\u4e00\u4e2a\u5c1a\u672a\u89e3\u51b3\u7684\u5f00\u653e\u6027\u95ee\u9898</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_15","title":"\u5e94\u7528","text":"<ul> <li>\u5e0c\u5c14\u6392\u5e8f\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5f88\u6709\u4ef7\u503c<ul> <li>\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u7684\u6570\u636e\uff0c\u5e0c\u5c14\u6392\u5e8f\u7684\u901f\u5ea6\u975e\u5e38\u5feb</li> <li>\u5e0c\u5c14\u6392\u5e8f\u7684\u4ee3\u7801\u89c4\u6a21\u5f88\u5c0f\uff0c\u5e38\u7528\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7b49</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_16","title":"\u5f52\u5e76\u6392\u5e8f","text":"<ul> <li>\u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u3001\u901a\u7528\u7684\u3001\u7a33\u5b9a\u7684\u57fa\u4e8e\u6bd4\u8f83\u7684\u7b97\u6cd5</li> <li>\u5173\u4e8e\u5f52\u5e76\u6392\u5e8f\u7684\u7814\u7a76\u5df2\u7ecf\u6bd4\u8f83\u6210\u719f\uff0c\u5e94\u7528\u4e5f\u975e\u5e38\u5e7f\u6cdb</li> <li>\u901a\u5e38\u7684\u5f52\u5e76\u6392\u5e8f\u9700\u8981 $\\Omicron(N)$ \u7684\u8f85\u52a9\u7a7a\u95f4\uff0c\u4f46\u5df2\u7ecf\u6709\u5f88\u591a\u7814\u7a76\u63d0\u51fa\u4e86\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(1)$ \u7684\u539f\u5730\u5f52\u5e76\uff0c\u4f46\u5b83\u4eec\u7684\u5b9e\u73b0\u90fd\u975e\u5e38\u7e41\u7410\u590d\u6742\uff0c\u5728\u73b0\u5b9e\u4e2d\u5f88\u5c11\u88ab\u5e94\u7528</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_17","title":"\u5b9e\u73b0","text":"<ul> <li>\u81ea\u4e0a\u800c\u4e0b\uff08top-down\uff09\u9012\u5f52\u5b9e\u73b0<ul> <li>\u4f18\u5316\u4e00\uff1a\u9012\u5f52\u5230\u5c0f\u89c4\u6a21\u6570\u636e\u65f6\u6539\u7528\u63d2\u5165\u6392\u5e8f</li> <li>\u4f18\u5316\u4e8c\uff1a\u5982\u679c\u5f85\u5408\u5e76\u7684\u4e24\u4e32\u6570\u636e\u5df2\u7ecf\u6709\u5e8f\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\uff0c\u51cf\u5c11\u5408\u5e76\u64cd\u4f5c\u7684\u5f00\u9500<ul> <li>\u6bd4\u8f83\u524d\u4e00\u4e32\u6570\u636e\u7684\u6700\u5927\u503c\u548c\u540e\u4e00\u4e32\u6570\u636e\u7684\u6700\u5c0f\u503c</li> <li>\u5904\u7406\u51e0\u4e4e\u6709\u5e8f\u7684\u6570\u7ec4\u6548\u679c\u5f88\u597d</li> </ul> </li> <li>\u4f18\u5316\u4e09\uff1a\u6bcf\u6b21\u9012\u5f52\u65f6\u4ea4\u6362\u8f93\u5165\u6570\u7ec4\u548c\u8f85\u52a9\u6570\u7ec4\u7684\u8eab\u4efd\uff0c\u53ef\u4ee5\u8282\u7701\u591a\u6b21\u590d\u5236\u6570\u7ec4\u7684\u65f6\u95f4\u5f00\u9500<ul> <li>\u672a\u4f18\u5316\u65f6\uff0c\u6bcf\u6b21\u5408\u5e76\u64cd\u4f5c\u90fd\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u5b8c\u6574\u7684\u6570\u7ec4\u590d\u5236\uff0c\u4ece\u800c\u4fdd\u8bc1\u5408\u5e76\u540e\u7684\u6570\u636e\u603b\u662f\u5b58\u50a8\u5728\u8f93\u5165\u6570\u7ec4\u4e2d</li> <li>\u4f18\u5316\u540e\uff0c\u5408\u5e76\u64cd\u4f5c\u4e0d\u518d\u9700\u8981\u6570\u7ec4\u590d\u5236\uff0c\u53ea\u9700\u8981\u5728\u6392\u5e8f\u4e4b\u521d\u5c06\u8f93\u5165\u6570\u7ec4\u5b8c\u6574\u590d\u5236\u5230\u8f85\u52a9\u6570\u7ec4\uff0c\u5e76\u4e0d\u65ad\u4ea4\u6362\u4e24\u8005\u7684\u8eab\u4efd\u5373\u53ef\uff1b\u81ea\u4e0a\u800c\u4e0b\u9012\u5f52\u80fd\u4fdd\u8bc1\u6700\u7ec8\u6709\u5e8f\u7684\u6570\u636e\u5b58\u50a8\u5728\u8f93\u5165\u6570\u7ec4\u4e2d</li> </ul> </li> <li>\u4e0b\u6587\u7684\u4ee3\u7801\u540c\u65f6\u5b9e\u73b0\u4e86\u8fd9\u4e09\u79cd\u4f18\u5316</li> </ul> </li> <li>\u81ea\u4e0b\u800c\u4e0a\uff08bottom-up\uff09\u8fed\u4ee3\u5b9e\u73b0<ul> <li>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u81ea\u4e0b\u800c\u4e0a\u8fed\u4ee3\u5b9e\u73b0\u7684\u5f52\u5e76\u6392\u5e8f\u8981\u6bd4\u81ea\u4e0a\u800c\u4e0b\u9012\u5f52\u5b9e\u73b0\u7684\u5f52\u5e76\u6392\u5e8f\u6162 10%</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_18","title":"\u4ee3\u7801","text":"Java Implementation Merge Sort with Optimization<pre><code>package edu.princeton.cs.algs4;\n\npublic class Merge {\n    private static final int CUTOFF = 7;  // cutoff to insertion sort\n\n    // This class should not be instantiated.\n    private Merge() { }\n\n    private static void merge(Comparable[] src, Comparable[] dst, int lo, int mid, int hi) {\n        int i = lo, j = mid+1;\n        for (int k = lo; k &lt;= hi; k++) {\n            if      (i &gt; mid)              dst[k] = src[j++];\n            else if (j &gt; hi)               dst[k] = src[i++];\n            else if (less(src[j], src[i])) dst[k] = src[j++];   // to ensure stability\n            else                           dst[k] = src[i++];\n        }\n    }\n\n    private static void sort(Comparable[] src, Comparable[] dst, int lo, int hi) {\n        // if (hi &lt;= lo) return;\n        if (hi &lt;= lo + CUTOFF) {\n            insertionSort(dst, lo, hi);\n            return;\n        }\n        int mid = lo + (hi - lo) / 2;\n        sort(dst, src, lo, mid);\n        sort(dst, src, mid+1, hi);\n\n        // if (!less(src[mid+1], src[mid])) {\n        //    for (int i = lo; i &lt;= hi; i++) dst[i] = src[i];\n        //    return;\n        // }\n\n        // using System.arraycopy() is a bit faster than the above loop\n        if (!less(src[mid+1], src[mid])) {\n            System.arraycopy(src, lo, dst, lo, hi - lo + 1);\n            return;\n        }\n\n        merge(src, dst, lo, mid, hi);\n    }\n\n    public static void sort(Comparable[] a) {\n        Comparable[] aux = a.clone();\n        sort(aux, a, 0, a.length-1);\n    }\n\n    // sort from a[lo] to a[hi] using insertion sort\n    private static void insertionSort(Comparable[] a, int lo, int hi) {\n        for (int i = lo; i &lt;= hi; i++)\n            for (int j = i; j &gt; lo &amp;&amp; less(a[j], a[j-1]); j--)\n                exch(a, j, j-1);\n    }\n\n    // exchange a[i] and a[j]\n    private static void exch(Object[] a, int i, int j) {\n        Object swap = a[i];\n        a[i] = a[j];\n        a[j] = swap;\n    }\n\n    // is a[i] &lt; a[j]?\n    private static boolean less(Comparable a, Comparable b) {\n        return a.compareTo(b) &lt; 0;\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/princeton/note1/#_19","title":"\u601d\u8003\u9898","text":"<ul> <li>\u7528\u5f52\u5e76\u6392\u5e8f\u8ba1\u7b97\u6570\u636e\u4e2d\u9006\u5e8f\u5bf9\u7684\u6570\u91cf<ul> <li>\u6bcf\u6b21\u5408\u5e76\u64cd\u4f5c\u4e2d\uff0c\u540e\u6bb5\u9996\u5143\u7d20\u88ab\u4f5c\u4e3a\u5f53\u524d\u6700\u5c0f\u503c\u53d6\u51fa\u65f6\uff0c\u524d\u6bb5\u5269\u4f59\u5143\u7d20\u4e2a\u6570\u5373\u4e3a\u8fd9\u6b21\u5408\u5e76\u64cd\u4f5c\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u6570</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_20","title":"\u5feb\u901f\u6392\u5e8f","text":"<ul> <li>\u5feb\u901f\u6392\u5e8f\u88ab\u8a89\u4e3a\u4e8c\u5341\u4e16\u7eaa\u6700\u4f1f\u5927\u7684\u5341\u5927\u7b97\u6cd5\u4e4b\u4e00</li> <li>\u5173\u4e8e\u5feb\u901f\u6392\u5e8f\u7684\u7814\u7a76\u5df2\u7ecf\u6bd4\u8f83\u6210\u719f\uff0c\u5e94\u7528\u4e5f\u975e\u5e38\u5e7f\u6cdb</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_21","title":"\u5b9e\u73b0","text":"<ul> <li>\u5feb\u901f\u6392\u5e8f\u57fa\u672c\u6b65\u9aa4<ul> <li>\u5bf9\u6570\u7ec4\u8fdb\u884c\u968f\u673a\u6d17\u724c\uff08shuffle\uff09\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6\u5143\u7d20</li> <li>\u5bf9\u6570\u7ec4\u8fdb\u884c\u5212\u5206\uff08partition\uff09\uff0c\u4f7f\u5f97\u57fa\u51c6\u5143\u7d20\u4f4d\u4e8e\u5176\u6700\u7ec8\u4f4d\u7f6e\uff0c\u5176\u5de6\u8fb9\u7684\u5143\u7d20\u90fd\u4e0d\u5927\u4e8e\u5b83\uff0c\u5176\u53f3\u8fb9\u7684\u5143\u7d20\u90fd\u4e0d\u5c0f\u4e8e\u5b83</li> <li>\u9012\u5f52\u5730\u5904\u7406\u5212\u5206\u5f97\u5230\u7684\u4e24\u90e8\u5206</li> </ul> </li> <li>\u6ce8\u610f\uff1a\u5bf9\u4e8e\u91cd\u590d\u952e\u503c\u7684\u5904\u7406\uff0c\u5e94\u5f53\u5728\u9047\u5230\u548c\u57fa\u51c6\u5143\u7d20\u6709\u76f8\u540c\u952e\u503c\u7684\u5143\u7d20\u65f6\u505c\u6b62<ul> <li>\u867d\u7136\u6709\u4e9b\u53cd\u76f4\u89c9\uff0c\u4f46\u8fd9\u786e\u5b9e\u662f\u66f4\u4f18\u7684\u9009\u62e9\uff0c\u8be6\u7ec6\u89e3\u91ca\u8bf7\u79fb\u6b65\u91cd\u590d\u952e\u503c</li> </ul> </li> <li>\u4f18\u5316\u4e00\uff1a\u9012\u5f52\u5230\u5c0f\u89c4\u6a21\u6570\u636e\u65f6\u6539\u7528\u63d2\u5165\u6392\u5e8f</li> <li>\u4f18\u5316\u4e8c\uff1a\u53d6\u6837\u672c\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u57fa\u51c6\u5143\u7d20<ul> <li>\u6700\u4f18\u7684\u60c5\u51b5\u662f\uff0c\u603b\u662f\u9009\u62e9\u6570\u636e\u7684\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u57fa\u51c6\u5143\u7d20</li> <li>\u7528\u82e5\u5e72\u4e2a\u6837\u672c\u7684\u4e2d\u4f4d\u6570\u6765\u8fd1\u4f3c\u4ee3\u66ff\u6240\u6709\u6570\u636e\u7684\u4e2d\u4f4d\u6570\uff0c\u4e5f\u80fd\u53d6\u5f97\u4e0d\u9519\u7684\u6548\u679c\uff0c\u6bd4\u5982\u4f7f\u7528 3 \u4e2a\u968f\u673a\u5143\u7d20\u7684\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u57fa\u51c6\u5143\u7d20</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_22","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<ul> <li>\u5bf9\u4e8e\u542b\u6709 $N$ \u4e2a\u76f8\u5f02\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u5feb\u6392\u7684\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a $\\sim 2(N+1)\\ln N \\approx 1.39N\\log N$</li> <li>\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u6570\u636e\u5df2\u7ecf\u6709\u5e8f\u6216\u9006\u5e8f\uff09\uff0c\u5feb\u6392\u7684\u6bd4\u8f83\u6b21\u6570 $\\sim \\frac{1}{2}N^ 2$</li> <li>\u5e73\u5747\u60c5\u51b5\u4e0b\uff0c\u5feb\u6392\u867d\u7136\u6bd4\u5f52\u5e76\u591a\u6d88\u8017 39% \u7684\u6bd4\u8f83\u6b21\u6570\uff0c\u4f46\u8fd0\u884c\u901f\u5ea6\u6bd4\u5f52\u5e76\u66f4\u5feb\uff0c\u56e0\u4e3a\u5feb\u6392\u5bf9\u6570\u636e\u7684\u79fb\u52a8\u64cd\u4f5c\u6bd4\u8f83\u5c11</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_23","title":"\u9009\u62e9\u7b97\u6cd5","text":"<ul> <li>\u9009\u62e9\u7b97\u6cd5\u7528\u4e8e\u627e\u7b2c k \u5927\u7684\u6570</li> <li>\u57fa\u4e8e\u5feb\u901f\u6392\u5e8f\u7684\u9009\u62e9\u7b97\u6cd5\uff0c\u5e73\u5747\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u627e\u5230\u7b2c k \u5927\u7684\u6570<ul> <li>\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u6bd4\u8f83\u6b21\u6570\u9000\u5316\u4e3a $\\sim \\frac{1}{2}N^ 2$</li> </ul> </li> <li>Blum\uff0cFloyd\uff0cPratt\uff0cRivest\uff0cTarjan\uff1a\u57fa\u4e8e\u6bd4\u8f83\u7684\u9009\u62e9\u7b97\u6cd5\u5373\u4f7f\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u662f\u7ebf\u6027\u7684<ul> <li>\u4f46\u662f\uff0c\u76ee\u524d\u5df2\u77e5\u7684\u80fd\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u4fdd\u6301\u7ebf\u6027\u7684\u9009\u62e9\u7b97\u6cd5\u90fd\u5177\u6709\u8f83\u5927\u7684\u5e38\u6570\u56e0\u5b50\uff0c\u6240\u4ee5\u8fd0\u884c\u901f\u5ea6\u8f83\u6162\uff0c\u5728\u5b9e\u8df5\u4e2d\u5f88\u5c11\u88ab\u4f7f\u7528</li> </ul> </li> <li>\u5bfb\u627e\u5177\u6709\u5b9e\u7528\u4ef7\u503c\u7684\u80fd\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u4fdd\u6301\u7ebf\u6027\u7684\u9009\u62e9\u7b97\u6cd5\uff0c\u81f3\u4eca\u4ecd\u7136\u662f\u4e00\u4e2a\u5c1a\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff1b\u800c\u5728\u627e\u5230\u8fd9\u6837\u4e00\u4e2a\u7b97\u6cd5\u4e4b\u524d\uff0c\u57fa\u4e8e\u5feb\u901f\u6392\u5e8f\u7684\u9009\u62e9\u7b97\u6cd5\u4ecd\u7136\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5177\u6709\u8f83\u9ad8\u7684\u5b9e\u7528\u4ef7\u503c</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_24","title":"\u91cd\u590d\u952e\u503c","text":"<ul> <li>\u5b9e\u8df5\u4e2d\uff0c\u5f88\u591a\u65f6\u5019\u9700\u8981\u6392\u5e8f\u7684\u6570\u636e\u4f1a\u5177\u6709\u5927\u91cf\u7684\u91cd\u590d\u952e\u503c</li> <li>\u5b9e\u73b0\u4e00\uff1a\u5feb\u6392\uff0c\u628a\u6240\u6709\u548c\u57fa\u51c6\u5143\u7d20\u76f8\u7b49\u7684\u5143\u7d20\u90fd\u653e\u5728\u57fa\u51c6\u7684\u67d0\u4e00\u4fa7<ul> <li>\u5f53\u6240\u6709\u5143\u7d20\u90fd\u76f8\u7b49\u65f6\uff0c\u6bd4\u8f83\u6b21\u6570\u9000\u5316\u4e3a $\\sim \\frac{1}{2}N^ 2$</li> <li>\u8fd9\u662f\u9519\u8bef\u7684\u5feb\u6392\u5b9e\u73b0</li> </ul> </li> <li>\u5b9e\u73b0\u4e8c\uff1a\u5feb\u6392\uff0c\u5f53\u9047\u5230\u548c\u57fa\u51c6\u5143\u7d20\u76f8\u7b49\u7684\u5143\u7d20\u65f6\u505c\u6b62<ul> <li>\u5f53\u6240\u6709\u5143\u7d20\u90fd\u76f8\u7b49\u65f6\uff0c\u6bd4\u8f83\u6b21\u6570\u4ecd\u4fdd\u6301 $\\sim N\\log N$</li> <li>\u8fd9\u662f\u6807\u51c6\u7684\u5feb\u6392\u5b9e\u73b0</li> </ul> </li> <li>\u5b9e\u73b0\u4e09\uff1a\u4e09\u8def\u5feb\u6392<ul> <li>\u5c06\u6570\u7ec4\u5212\u5206\u4e3a 3 \u4e2a\u90e8\u5206\uff0c\u5c0f\u4e8e\u57fa\u51c6\u3001\u7b49\u4e8e\u57fa\u51c6\u548c\u5927\u4e8e\u57fa\u51c6</li> <li>\u6e90\u81ea Dijkstra \u63d0\u51fa\u7684\u8377\u5170\u56fd\u65d7\u95ee\u9898</li> </ul> </li> <li>\u5bf9\u4e8e\u542b\u6709 $n$ \u4e2a\u76f8\u5f02\u5143\u7d20\u4e14\u7b2c $i$ \u4e2a\u5143\u7d20\u91cd\u590d\u4e86 $x_i$ \u6b21\u7684\u6570\u7ec4\uff0c\u4efb\u4f55\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u81f3\u5c11 $\\log (\\frac{N!}{x_1!x_2!\\cdots x_n!}) \\sim -\\sum_{i=1}^ {n}x_i\\log \\frac{x_i}{N}$ \u6b21\u6bd4\u8f83<ul> <li>\u5f53\u6240\u6709\u5143\u7d20\u90fd\u76f8\u5f02\u65f6\uff0c\u4e0a\u5f0f\u7684\u503c\u4e3a $N\\log N$</li> <li>\u5f53\u6570\u7ec4\u4e2d\u4ec5\u6709\u5e38\u6570\u79cd\u76f8\u5f02\u5143\u7d20\u65f6\uff0c\u4e0a\u5f0f\u7684\u503c\u662f\u7ebf\u6027\u7684</li> </ul> </li> <li>Sedgewick-Bentley\uff1a\u4e09\u8def\u5feb\u6392\u662f\u71b5\u6700\u4f18\u7684\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u62e5\u6709\u6700\u5c0f\u7684\u4e0b\u754c\uff09</li> <li>\u8865\u5145\uff1aBentley-McIlroy \u4e09\u8def\u5feb\u6392<ul> <li>\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\uff0c\u6539\u7528\u63d2\u5165\u6392\u5e8f</li> <li>\u5bf9\u4e8e\u5927\u89c4\u6a21\u6570\u636e\uff0c\u4f7f\u7528 Tukey's ninther \u65b9\u6cd5\u8fdb\u884c\u5212\u5206\uff0c\u5373\u53d6 3 \u4e2a\u6837\u672c\uff08\u6bcf\u4e2a\u6837\u672c\u542b\u6709 3 \u4e2a\u5143\u7d20\uff09\u7684\u4e2d\u4f4d\u6570\u7684\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u57fa\u51c6\u5143\u7d20\uff0c\u76f8\u5f53\u4e8e\u53d6\u8fd9 9 \u4e2a\u5143\u7d20\u7684\u4e2d\u4f4d\u6570\u7684\u4f30\u8ba1\u503c\u4f5c\u4e3a\u57fa\u51c6\u5143\u7d20</li> <li>\u8fd9\u79cd\u4e09\u8def\u5feb\u6392\u65b9\u6cd5\u4e0d\u9700\u8981\u968f\u673a\u6d17\u724c\uff0c\u5f00\u9500\u8f83\u5c0f\uff1b\u4f46\u662f\u7f3a\u70b9\u662f\u5bb9\u6613\u53d7\u5230 killer input \u7684\u653b\u51fb\uff0c\u5373\u7a0b\u5e8f\u5bf9\u4e8e\u4e00\u4e9b\u7279\u522b\u8bbe\u8ba1\u7684\u8f93\u5165\u4f1a\u76f4\u63a5\u5d29\u6e83</li> <li>\u968f\u673a\u6d17\u724c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u907f\u5f00\u8fd9\u79cd\u653b\u51fb\uff0c\u4f46\u5f88\u591a\u7cfb\u7edf\u8bbe\u8ba1\u8005\u4e0d\u559c\u6b22\u968f\u673a\u6d17\u724c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u89c9\u5f97\u8fd9\u79cd\u505a\u6cd5\u6539\u53d8\u4e86\u6570\u636e\u7684\u56fa\u6709\u987a\u5e8f\uff0c\u4e14\u5f00\u9500\u592a\u5927</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_25","title":"\u4ee3\u7801","text":"Quick Sort &amp; Quick Selection: Java Implementation Quick Sort and Quick Selection<pre><code>package edu.princeton.cs.algs4;\n\npublic class Quick {\n    // This class should not be instantiated.\n    private Quick() { }\n\n    public static void sort(Comparable[] a) {\n        StdRandom.shuffle(a);\n        sort(a, 0, a.length - 1);\n    }\n\n    // quicksort the subarray from a[lo] to a[hi]\n    private static void sort(Comparable[] a, int lo, int hi) {\n        if (hi &lt;= lo) return;\n        int j = partition(a, lo, hi);\n        sort(a, lo, j-1);\n        sort(a, j+1, hi);\n    }\n\n    // partition the subarray a[lo..hi] so that a[lo..j-1] &lt;= a[j] &lt;= a[j+1..hi]\n    // and return the index j.\n    private static int partition(Comparable[] a, int lo, int hi) {\n        int i = lo;\n        int j = hi + 1;\n        Comparable v = a[lo];\n        while (true) {\n            // find item on lo to swap\n            while (less(a[++i], v)) {\n                if (i == hi) break;\n            }\n            // find item on hi to swap\n            while (less(v, a[--j])) {\n                if (j == lo) break;      // redundant since a[lo] acts as sentinel\n            }\n            // check if pointers cross\n            if (i &gt;= j) break;\n            exch(a, i, j);\n        }\n        // put partitioning item v at a[j]\n        exch(a, lo, j);\n        // now, a[lo .. j-1] &lt;= a[j] &lt;= a[j+1 .. hi]\n        return j;\n    }\n\n    /**\n     * Rearranges the array so that {@code a[k]} contains the kth smallest key;\n     * {@code a[0]} through {@code a[k-1]} are less than (or equal to) {@code a[k]}; and\n     * {@code a[k+1]} through {@code a[n-1]} are greater than (or equal to) {@code a[k]}.\n     *\n     * @return the key of rank {@code k}\n     */\n    public static Comparable select(Comparable[] a, int k) {\n        if (k &lt; 0 || k &gt;= a.length) {\n            throw new IllegalArgumentException(\"index is not between 0 and \" + a.length + \": \" + k);\n        }\n        StdRandom.shuffle(a);\n        int lo = 0, hi = a.length - 1;\n        while (hi &gt; lo) {\n            int i = partition(a, lo, hi);\n            if      (i &gt; k) hi = i - 1;\n            else if (i &lt; k) lo = i + 1;\n            else return a[i];\n        }\n        return a[lo];\n    }\n\n    // is v &lt; w ?\n    private static boolean less(Comparable v, Comparable w) {\n        if (v == w) return false;   // optimization when reference equals\n        return v.compareTo(w) &lt; 0;\n    }\n\n    // exchange a[i] and a[j]\n    private static void exch(Object[] a, int i, int j) {\n        Object swap = a[i];\n        a[i] = a[j];\n        a[j] = swap;\n    }\n}\n</code></pre> Quick Sort with 3-way Partitioning: Java Implementation Quick Sort with Dijkstra 3-way Partitioning<pre><code>package edu.princeton.cs.algs4;\n\npublic class Quick3way {\n    // This class should not be instantiated.\n    private Quick3way() { }\n\n    public static void sort(Comparable[] a) {\n        StdRandom.shuffle(a);\n        sort(a, 0, a.length - 1);\n    }\n\n    // quicksort the subarray a[lo .. hi] using 3-way partitioning\n    private static void sort(Comparable[] a, int lo, int hi) {\n        if (hi &lt;= lo) return;\n        int lt = lo, gt = hi;\n        Comparable v = a[lo];\n        int i = lo + 1;\n        while (i &lt;= gt) {\n            int cmp = a[i].compareTo(v);\n            if      (cmp &lt; 0) exch(a, lt++, i++);\n            else if (cmp &gt; 0) exch(a, i, gt--);\n            else              i++;\n        }\n\n        // a[lo..lt-1] &lt; v = a[lt..gt] &lt; a[gt+1..hi].\n        sort(a, lo, lt-1);\n        sort(a, gt+1, hi);\n    }\n\n    // is v &lt; w ?\n    private static boolean less(Comparable v, Comparable w) {\n        return v.compareTo(w) &lt; 0;\n    }\n\n    // exchange a[i] and a[j]\n    private static void exch(Object[] a, int i, int j) {\n        Object swap = a[i];\n        a[i] = a[j];\n        a[j] = swap;\n    }\n}\n</code></pre> Quick Sort with Bentley-McIlroy 3-way Partitioning: Java Implementation Quick Sort with Bentley-McIlroy 3-way Partitioning<pre><code>package edu.princeton.cs.algs4;\n\npublic class QuickBentleyMcIlroy {\n    // cutoff to insertion sort, must be &gt;= 1\n    private static final int INSERTION_SORT_CUTOFF = 8;\n    // cutoff to median-of-3 partitioning\n    private static final int MEDIAN_OF_3_CUTOFF = 40;\n\n    // This class should not be instantiated.\n    private QuickBentleyMcIlroy() { }\n\n    public static void sort(Comparable[] a) {\n        sort(a, 0, a.length - 1);\n    }\n\n    private static void sort(Comparable[] a, int lo, int hi) {\n        int n = hi - lo + 1;\n\n        // cutoff to insertion sort\n        if (n &lt;= INSERTION_SORT_CUTOFF) {\n            insertionSort(a, lo, hi);\n            return;\n        }\n\n        // use median-of-3 as partitioning element\n        else if (n &lt;= MEDIAN_OF_3_CUTOFF) {\n            int m = median3(a, lo, lo + n/2, hi);\n            exch(a, m, lo);\n        }\n\n        // use Tukey ninther as partitioning element\n        else  {\n            int eps = n/8;\n            int mid = lo + n/2;\n            int m1 = median3(a, lo, lo + eps, lo + eps + eps);\n            int m2 = median3(a, mid - eps, mid, mid + eps);\n            int m3 = median3(a, hi - eps - eps, hi - eps, hi);\n            int ninther = median3(a, m1, m2, m3);\n            exch(a, ninther, lo);\n        }\n\n        // Bentley-McIlroy 3-way partitioning\n        int i = lo, j = hi+1;\n        int p = lo, q = hi+1;\n        Comparable v = a[lo];\n        while (true) {\n            while (less(a[++i], v))\n                if (i == hi) break;\n            while (less(v, a[--j]))\n                if (j == lo) break;\n\n            // pointers cross\n            if (i == j &amp;&amp; eq(a[i], v))\n                exch(a, ++p, i);\n            if (i &gt;= j) break;\n\n            exch(a, i, j);\n            if (eq(a[i], v)) exch(a, ++p, i);\n            if (eq(a[j], v)) exch(a, --q, j);\n        }\n\n        i = j + 1;\n        for (int k = lo; k &lt;= p; k++)\n            exch(a, k, j--);\n        for (int k = hi; k &gt;= q; k--)\n            exch(a, k, i++);\n\n        sort(a, lo, j);\n        sort(a, i, hi);\n    }\n\n    // sort from a[lo] to a[hi] using insertion sort\n    private static void insertionSort(Comparable[] a, int lo, int hi) {\n        for (int i = lo; i &lt;= hi; i++)\n            for (int j = i; j &gt; lo &amp;&amp; less(a[j], a[j-1]); j--)\n                exch(a, j, j-1);\n    }\n\n    // return the index of the median element among a[i], a[j], and a[k]\n    private static int median3(Comparable[] a, int i, int j, int k) {\n        return (less(a[i], a[j]) ?\n               (less(a[j], a[k]) ? j : less(a[i], a[k]) ? k : i) :\n               (less(a[k], a[j]) ? j : less(a[k], a[i]) ? k : i));\n    }\n\n    // is v &lt; w ?\n    private static boolean less(Comparable v, Comparable w) {\n        if (v == w) return false;    // optimization when reference equal\n        return v.compareTo(w) &lt; 0;\n    }\n\n    // does v == w ?\n    private static boolean eq(Comparable v, Comparable w) {\n        if (v == w) return true;    // optimization when reference equal\n        return v.compareTo(w) == 0;\n    }\n\n    // exchange a[i] and a[j]\n    private static void exch(Object[] a, int i, int j) {\n        Object swap = a[i];\n        a[i] = a[j];\n        a[j] = swap;\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/princeton/note1/#_26","title":"\u4f18\u5148\u961f\u5217","text":""},{"location":"cs/algorithm/princeton/note1/#_27","title":"\u5b9e\u73b0","text":"<ul> <li>\u6570\u7ec4\u7ed3\u6784\u7684\u4e8c\u53c9\u5806\u662f\u4e00\u79cd\u5e38\u7528\u7684\u4f18\u5148\u961f\u5217\u5b9e\u73b0</li> <li>d \u53c9\u5806\u662f\u4e8c\u53c9\u5806\u4f18\u5148\u961f\u5217\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u5728\u4e00\u4e9b\u65f6\u5019\u53ef\u4ee5\u8fbe\u5230\u66f4\u597d\u7684\u6548\u679c</li> <li>\u6590\u6ce2\u90a3\u5951\u5806\u662f\u4e00\u79cd\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b9e\u73b0\u63d2\u5165\u3001\u5728\u5747\u644a $\\log N$ \u65f6\u95f4\u5185\u5b9e\u73b0\u5220\u9664\u6700\u5927\u5143\uff0c\u4f46\u7531\u4e8e\u5b9e\u73b0\u592a\u590d\u6742\u800c\u5f88\u5c11\u5728\u5b9e\u8df5\u4e2d\u88ab\u4f7f\u7528</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_28","title":"\u5806\u6392\u5e8f","text":"<ul> <li>\u4f18\u70b9\uff1a\u5806\u6392\u5e8f\u662f\u4e00\u79cd\u80fd\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u4fdd\u8bc1 $N\\log N$ \u590d\u6742\u5ea6\u7684\u539f\u5730\u6392\u5e8f</li> <li>\u7f3a\u70b9\uff1a<ul> <li>\u5806\u6392\u5e8f\u548c\u5f52\u5e76\u7684\u5faa\u73af\u5185\u64cd\u4f5c\u592a\u591a\uff0c\u6240\u4ee5\u4e24\u8005\u7684\u901f\u5ea6\u90fd\u4e0d\u5982\u5feb\u6392</li> <li>\u5806\u6392\u5e8f\u9700\u8981\u8df3\u8dc3\u5f0f\u5730\u8bbf\u95ee\u6570\u7ec4\uff0c\u4ece\u800c\u4e0d\u50cf\u5feb\u6392\u90a3\u6837\u5177\u6709\u5f88\u597d\u7684\u5185\u5b58\u8bbf\u95ee\u5c40\u90e8\u6027\uff08make good use of cache memory\uff09</li> <li>\u5806\u6392\u5e8f\u548c\u5feb\u6392\u90fd\u662f\u4e0d\u7a33\u5b9a\u7684</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_29","title":"\u4ee3\u7801","text":"Max Heap: Java Implementation Max Priority Queue with a Binary Heap<pre><code>package edu.princeton.cs.algs4;\nimport java.util.NoSuchElementException;\n\npublic class MaxPQ&lt;Key&gt; {\n    private Key[] pq;   // store items at indices 1 to n\n    private int n;      // number of items on priority queue\n\n    public MaxPQ(int initCapacity) {\n        pq = (Key[]) new Object[initCapacity + 1];\n        n = 0;\n    }\n\n    public boolean isEmpty() {\n        return n == 0;\n    }\n\n    public int size() {\n        return n;\n    }\n\n    public Key max() {\n        if (isEmpty()) throw new NoSuchElementException(\"Priority queue underflow\");\n        return pq[1];\n    }\n\n    // resize the underlying array to have the given capacity\n    private void resize(int capacity) {\n        assert capacity &gt; n;\n        Key[] temp = (Key[]) new Object[capacity];\n        for (int i = 1; i &lt;= n; i++) {\n            temp[i] = pq[i];\n        }\n        pq = temp;\n    }\n\n    public void insert(Key x) {\n        // double size of array if necessary\n        if (n == pq.length - 1) resize(2 * pq.length);\n        // add x, and percolate it up to maintain heap invariant\n        pq[++n] = x;\n        swim(n);\n    }\n\n    public Key delMax() {\n        if (isEmpty()) throw new NoSuchElementException(\"Priority queue underflow\");\n        Key max = pq[1];\n        exch(1, n--);\n        sink(1);\n        pq[n+1] = null;     // to avoid loitering and help with garbage collection\n        if ((n &gt; 0) &amp;&amp; (n == (pq.length - 1) / 4)) resize(pq.length / 2);\n        return max;\n    }\n\n    private void swim(int k) {\n        while (k &gt; 1 &amp;&amp; less(k/2, k)) {\n            exch(k/2, k);\n            k = k/2;\n        }\n    }\n\n    private void sink(int k) {\n        while (2*k &lt;= n) {\n            int j = 2*k;\n            if (j &lt; n &amp;&amp; less(j, j+1)) j++;\n            if (!less(k, j)) break;\n            exch(k, j);\n            k = j;\n        }\n    }\n\n    private boolean less(int i, int j) {\n        return pq[i].compareTo(pq[j]) &lt; 0;\n    }\n\n    private void exch(int i, int j) {\n        Key swap = pq[i];\n        pq[i] = pq[j];\n        pq[j] = swap;\n    }\n}\n</code></pre> Heap Sort: Java Implementation Heap Sort<pre><code>package edu.princeton.cs.algs4;\n\npublic class Heap {\n    // This class should not be instantiated.\n    private Heap() { }\n\n    public static void sort(Comparable[] pq) {\n        int n = pq.length;\n\n        // heapify phase\n        for (int k = n/2; k &gt;= 1; k--)\n            sink(pq, k, n);\n\n        // sortdown phase\n        int k = n;\n        while (k &gt; 1) {\n            exch(pq, 1, k--);\n            sink(pq, 1, k);\n        }\n    }\n\n    private static void sink(Comparable[] pq, int k, int n) {\n        while (2*k &lt;= n) {\n            int j = 2*k;\n            if (j &lt; n &amp;&amp; less(pq, j, j+1)) j++;\n            if (!less(pq, k, j)) break;\n            exch(pq, k, j);\n            k = j;\n        }\n    }\n\n    // indices are \"off-by-one\" to support 1-based indexing\n    private static boolean less(Comparable[] pq, int i, int j) {\n        return pq[i-1].compareTo(pq[j-1]) &lt; 0;\n    }\n\n    // indices are \"off-by-one\" to support 1-based indexing\n    private static void exch(Object[] pq, int i, int j) {\n        Object swap = pq[i-1];\n        pq[i-1] = pq[j-1];\n        pq[j-1] = swap;\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/princeton/note1/#_30","title":"\u7b26\u53f7\u8868","text":"<ul> <li>\u7b26\u53f7\u8868\u662f\u4e00\u79cd\u5173\u4e8e\u952e\u503c\u548c\u6570\u636e\u5bf9\uff08key-value pair\uff09\u7684\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u641c\u7d22\uff1a\u7ed9\u5b9a\u952e\u503c\uff0c\u5728\u7b26\u53f7\u8868\u4e2d\u67e5\u627e\u76f8\u5e94\u7684\u6570\u636e</li> <li>\u63d2\u5165\uff1a\u5c06\u5177\u6709\u7279\u5b9a\u952e\u503c\u7684\u6570\u636e\u52a0\u5165\u7b26\u53f7\u8868</li> <li>\u5220\u9664\uff1a\u7ed9\u5b9a\u952e\u503c\uff0c\u5220\u9664\u7b26\u53f7\u8868\u4e2d\u76f8\u5e94\u7684\u952e\u503c\u548c\u6570\u636e\u5bf9</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_31","title":"\u5b9e\u73b0","text":"<ul> <li>\u601d\u8def\u4e00\uff1a\u987a\u5e8f\u641c\u7d22<ul> <li>\u7528\u94fe\u8868\u5b9e\u73b0\u7b26\u53f7\u8868\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u4e00\u5bf9\u952e\u503c\u548c\u6570\u636e</li> <li>\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u7684\u590d\u6742\u5ea6\u5747\u4e3a $\\Omicron(N)$</li> <li>\u4e0d\u652f\u6301\u987a\u5e8f\u904d\u5386\u7b26\u53f7\u8868</li> </ul> </li> <li>\u601d\u8def\u4e8c\uff1a\u4e8c\u5206\u641c\u7d22<ul> <li>\u7528\u53ef\u53d8\u6570\u7ec4\u5b9e\u73b0\u7b26\u53f7\u8868\uff0c\u5206\u522b\u7ef4\u62a4\u4e00\u4e2a\u952e\u503c\u6570\u7ec4\u548c\u6570\u636e\u6570\u7ec4\uff0c\u7528\u76f8\u540c\u7684\u6570\u7ec4\u7d22\u5f15\u628a\u952e\u503c\u548c\u6570\u636e\u8054\u7cfb\u8d77\u6765\uff1b\u6570\u7ec4\u4e2d\u952e\u503c\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u652f\u6301\u4e8c\u5206\u641c\u7d22</li> <li>\u641c\u7d22\u7684\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log N)$\uff0c\u63d2\u5165\u548c\u5220\u9664\u7684\u590d\u6742\u5ea6\u4e3a $\\Omicron(N)$</li> <li>\u652f\u6301\u987a\u5e8f\u904d\u5386\u7b26\u53f7\u8868</li> </ul> </li> <li>\u601d\u8def\u4e09\uff1a\u4e8c\u53c9\u641c\u7d22\u6811<ul> <li>\u5177\u4f53\u5206\u6790\u8bf7\u79fb\u6b65\u8fd9\u91cc</li> <li>\u6700\u574f\u60c5\u51b5\u4e0b\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u7684\u590d\u6742\u5ea6\u5747\u4e3a $\\sim N$</li> <li>\u5e73\u5747\u60c5\u51b5\u4e0b\u641c\u7d22\u548c\u63d2\u5165\u7684\u590d\u6742\u5ea6\u5747\u4e3a $\\sim 1.39\\log N$</li> <li>\u5e73\u5747\u60c5\u51b5\u4e0b\u5220\u9664\u7684\u590d\u6742\u5ea6\u4e3a $\\sim \\sqrt{N}$\uff0c\u4e14\u652f\u6301\u5220\u9664\u64cd\u4f5c\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u5e73\u5747\u60c5\u51b5\u4e0b\u641c\u7d22\u548c\u63d2\u5165\u7684\u590d\u6742\u5ea6\u4f1a\u9000\u5316\u4e3a $\\sim \\sqrt{N}$</li> <li>\u652f\u6301\u987a\u5e8f\u904d\u5386\u7b26\u53f7\u8868\uff08\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff09</li> </ul> </li> <li>\u601d\u8def\u56db\uff1a\u7ea2\u9ed1\u6811<ul> <li>\u5177\u4f53\u5206\u6790\u8bf7\u79fb\u6b65\u8fd9\u91cc</li> <li>\u6700\u574f\u60c5\u51b5\u4e0b\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u7684\u590d\u6742\u5ea6\u5747\u4e3a $\\sim 2\\log N$</li> <li>\u5e73\u5747\u60c5\u51b5\u4e0b\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u7684\u590d\u6742\u5ea6\u5747\u4e3a $\\sim 1.00\\log N$\uff0c\u5e38\u6570\u56e0\u5b50\u7684\u786e\u5207\u6570\u503c\u8fd8\u6ca1\u6709\u88ab\u8bc1\u660e\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\u8868\u73b0\u5f97\u975e\u5e38\u8fd1\u4f3c\u4e8e $1.00$</li> <li>\u652f\u6301\u987a\u5e8f\u904d\u5386\u7b26\u53f7\u8868\uff08\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff09</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_32","title":"\u4e8c\u53c9\u641c\u7d22\u6811","text":"<ul> <li>\u641c\u7d22\u548c\u63d2\u5165\u7684\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u9ad8\u5ea6</li> <li>\u5c06 $N$ \u4e2a\u76f8\u5f02\u5143\u7d20\u4ee5\u968f\u673a\u987a\u5e8f\u63d2\u5165\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u641c\u7d22\u548c\u63d2\u5165\u7684\u6bd4\u8f83\u6b21\u6570\u4e3a $\\sim 2\\ln N \\approx 1.39\\log N$<ul> <li>\u8bc1\u660e\uff1a\u4e0e\u5feb\u6392\u7684\u5212\u5206\u6784\u6210\u4e00\u4e00\u6620\u5c04</li> </ul> </li> <li>Reed\uff1a\u5c06 $N$ \u4e2a\u76f8\u5f02\u5143\u7d20\u4ee5\u968f\u673a\u987a\u5e8f\u63d2\u5165\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6811\u7684\u9ad8\u5ea6\u4e3a $\\sim 4.311 \\ln N$</li> <li>\u6700\u574f\u60c5\u51b5\u4e0b\u6811\u7684\u9ad8\u5ea6\u4e3a $N$</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_33","title":"\u5220\u9664\u64cd\u4f5c","text":"<ul> <li>\u601d\u8def\u4e00\uff1a\u61d2\u60f0<ul> <li>\u76f4\u63a5\u5c06\u9700\u8981\u5220\u9664\u7684\u8282\u70b9\u7684\u6570\u636e\u7f6e\u4e3a null</li> <li>\u5982\u679c\u5220\u9664\u64cd\u4f5c\u5f88\u591a\uff0c\u4f1a\u5bfc\u81f4\u5185\u5b58\u6d6a\u8d39\u4e25\u91cd</li> </ul> </li> <li>\u601d\u8def\u4e8c\uff1aHibbard \u5220\u9664<ul> <li>\u5bf9\u4e8e\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664</li> <li>\u5bf9\u4e8e\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u7528\u5176\u5b50\u8282\u70b9\u66ff\u4ee3\u5b83</li> <li>\u5bf9\u4e8e\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u7528\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u503c\u66ff\u4ee3\u5b83</li> <li>\u5f0a\u7aef\uff1aHibbard \u5220\u9664\u662f\u975e\u5bf9\u79f0\u7684\uff0c\u4f1a\u5bfc\u81f4\u6811\u8d8b\u4e8e\u4e0d\u5e73\u8861</li> </ul> </li> <li>\u7814\u7a76\u53d1\u73b0\uff0c\u7ecf\u8fc7\u8db3\u591f\u591a\u6b21\u7684\u968f\u673a\u63d2\u5165\u548c\u5220\u9664\u540e\uff0c\u6811\u7684\u9ad8\u5ea6\u8d8b\u4e8e $\\sqrt{N}$\uff1b\u5373\u4f7f Hibbard \u5220\u9664\u65f6\u5c1d\u8bd5\u5728\u5de6\u53f3\u5b50\u6811\u4e4b\u95f4\u968f\u673a\u9009\u62e9\uff0c\u4e5f\u4ecd\u7136\u6ca1\u6709\u6548\u679c</li> <li>\u5bfb\u627e\u4e00\u4e2a\u7b80\u5355\u9ad8\u6548\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u5220\u9664\u65b9\u6cd5\uff0c\u81f3\u4eca\u4ecd\u7136\u662f\u4e00\u4e2a\u5c1a\u672a\u89e3\u51b3\u7684\u5f00\u653e\u6027\u95ee\u9898</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_34","title":"\u4ee3\u7801","text":"BST: Java Implementation Binary Search Tree with All Symbol Table Operations<pre><code>package edu.princeton.cs.algs4;\nimport java.util.NoSuchElementException;\n\npublic class BST&lt;Key extends Comparable&lt;Key&gt;, Value&gt; {\n    private Node root;             // root of BST\n\n    private class Node {\n        private Key key;           // sorted by key\n        private Value val;         // associated data\n        private Node left, right;  // left and right subtrees\n        private int size;          // number of nodes in subtree\n\n        public Node(Key key, Value val, int size) {\n            this.key = key;\n            this.val = val;\n            this.size = size;\n        }\n    }\n\n    // initializes an empty symbol table.\n    public BST() { }\n\n    public boolean isEmpty() {\n        return size() == 0;\n    }\n\n    public int size() {\n        return size(root);\n    }\n\n    // return number of key-value pairs in BST rooted at x\n    private int size(Node x) {\n        if (x == null) return 0;\n        else return x.size;\n    }\n\n    /**\n     * Does this symbol table contain the given key?\n     */\n    public boolean contains(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"argument to contains() is null\");\n        return get(key) != null;\n    }\n\n    /**\n     * returns the value associated with the given key.\n     */\n    public Value get(Key key) {\n        return get(root, key);\n    }\n\n    private Value get(Node x, Key key) {\n        if (key == null) throw new IllegalArgumentException(\"calls get() with a null key\");\n        if (x == null) return null;\n        int cmp = key.compareTo(x.key);\n        if      (cmp &lt; 0) return get(x.left, key);\n        else if (cmp &gt; 0) return get(x.right, key);\n        else              return x.val;\n    }\n\n    /**\n     * inserts the specified key-value pair into the symbol table, overwriting the old\n     * value with the new value if the symbol table already contains the specified key.\n     */\n    public void put(Key key, Value val) {\n        if (key == null) throw new IllegalArgumentException(\"calls put() with a null key\");\n        if (val == null) {\n            delete(key);\n            return;\n        }\n        root = put(root, key, val);\n    }\n\n    private Node put(Node x, Key key, Value val) {\n        if (x == null) return new Node(key, val, 1);\n        int cmp = key.compareTo(x.key);\n        if      (cmp &lt; 0) x.left  = put(x.left,  key, val);\n        else if (cmp &gt; 0) x.right = put(x.right, key, val);\n        else              x.val   = val;\n        x.size = 1 + size(x.left) + size(x.right);\n        return x;\n    }\n\n    /**\n     * removes the smallest key and associated value from the symbol table.\n     */\n    public void deleteMin() {\n        if (isEmpty()) throw new NoSuchElementException(\"Symbol table underflow\");\n        root = deleteMin(root);\n    }\n\n    private Node deleteMin(Node x) {\n        if (x.left == null) return x.right;\n        x.left = deleteMin(x.left);\n        x.size = size(x.left) + size(x.right) + 1;\n        return x;\n    }\n\n    /**\n     * removes the largest key and associated value from the symbol table.\n     */\n    public void deleteMax() {\n        if (isEmpty()) throw new NoSuchElementException(\"Symbol table underflow\");\n        root = deleteMax(root);\n    }\n\n    private Node deleteMax(Node x) {\n        if (x.right == null) return x.left;\n        x.right = deleteMax(x.right);\n        x.size = size(x.left) + size(x.right) + 1;\n        return x;\n    }\n\n    /**\n     * removes the specified key and its associated value from this symbol table\n     * (if the key is in this symbol table).\n     */\n    public void delete(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"calls delete() with a null key\");\n        root = delete(root, key);\n    }\n\n    // Hibbard delete\n    private Node delete(Node x, Key key) {\n        if (x == null) return null;\n\n        int cmp = key.compareTo(x.key);\n        if      (cmp &lt; 0) x.left  = delete(x.left,  key);\n        else if (cmp &gt; 0) x.right = delete(x.right, key);\n        else {\n            if (x.right == null) return x.left;\n            if (x.left  == null) return x.right;\n            Node t = x;\n            x = min(t.right);\n            x.right = deleteMin(t.right);\n            x.left = t.left;\n        }\n        x.size = size(x.left) + size(x.right) + 1;\n        return x;\n    }\n\n    /**\n     * returns the smallest key in the symbol table.\n     */\n    public Key min() {\n        if (isEmpty()) throw new NoSuchElementException(\"calls min() with empty symbol table\");\n        return min(root).key;\n    }\n\n    private Node min(Node x) {\n        if (x.left == null) return x;\n        else                return min(x.left);\n    }\n\n    /**\n     * returns the largest key in the symbol table.\n     */\n    public Key max() {\n        if (isEmpty()) throw new NoSuchElementException(\"calls max() with empty symbol table\");\n        return max(root).key;\n    }\n\n    private Node max(Node x) {\n        if (x.right == null) return x;\n        else                 return max(x.right);\n    }\n\n    /**\n     * returns the largest key in the symbol table less than or equal to {@code key}.\n     */\n    public Key floor(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"argument to floor() is null\");\n        if (isEmpty()) throw new NoSuchElementException(\"calls floor() with empty symbol table\");\n        Node x = floor(root, key);\n        if (x == null) throw new NoSuchElementException(\"argument to floor() is too small\");\n        else return x.key;\n    }\n\n    private Node floor(Node x, Key key) {\n        if (x == null) return null;\n        int cmp = key.compareTo(x.key);\n        if (cmp == 0) return x;\n        if (cmp &lt;  0) return floor(x.left, key);\n        Node t = floor(x.right, key);\n        if (t != null) return t;\n        else return x;\n    }\n\n    /**\n     * returns the smallest key in the symbol table greater than or equal to {@code key}.\n     */\n    public Key ceiling(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"argument to ceiling() is null\");\n        if (isEmpty()) throw new NoSuchElementException(\"calls ceiling() with empty symbol table\");\n        Node x = ceiling(root, key);\n        if (x == null) throw new NoSuchElementException(\"argument to ceiling() is too large\");\n        else return x.key;\n    }\n\n    private Node ceiling(Node x, Key key) {\n        if (x == null) return null;\n        int cmp = key.compareTo(x.key);\n        if (cmp == 0) return x;\n        if (cmp &lt; 0) {\n            Node t = ceiling(x.left, key);\n            if (t != null) return t;\n            else return x;\n        }\n        return ceiling(x.right, key);\n    }\n\n    /**\n     * return the key in the symbol table of a given {@code rank}.\n     */\n    public Key select(int rank) {\n        if (rank &lt; 0 || rank &gt;= size()) {\n            throw new IllegalArgumentException(\"argument to select() is invalid: \" + rank);\n        }\n        return select(root, rank);\n    }\n\n    // Return key in BST rooted at x of given rank.\n    // Precondition: rank is in legal range.\n    private Key select(Node x, int rank) {\n        if (x == null) return null;\n        int leftSize = size(x.left);\n        if      (leftSize &gt; rank) return select(x.left,  rank);\n        else if (leftSize &lt; rank) return select(x.right, rank - leftSize - 1);\n        else                      return x.key;\n    }\n\n    /**\n     * return the number of keys in the symbol table strictly less than {@code key}.\n     */\n    public int rank(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"argument to rank() is null\");\n        return rank(key, root);\n    }\n\n    // Number of keys in the subtree less than key.\n    private int rank(Key key, Node x) {\n        if (x == null) return 0;\n        int cmp = key.compareTo(x.key);\n        if      (cmp &lt; 0) return rank(key, x.left);\n        else if (cmp &gt; 0) return 1 + size(x.left) + rank(key, x.right);\n        else              return size(x.left);\n    }\n\n    /**\n     * Returns all keys in the symbol table in ascending order,\n     * as an {@code Iterable}.\n     * To iterate over all of the keys in the symbol table named {@code st},\n     * use the foreach notation: {@code for (Key key : st.keys())}.\n     */\n    public Iterable&lt;Key&gt; keys() {\n        if (isEmpty()) return new Queue&lt;Key&gt;();\n        return keys(min(), max());\n    }\n\n    /**\n     * returns all keys in the symbol table in the given range\n     * in ascending order, as an {@code Iterable}.\n     */\n    public Iterable&lt;Key&gt; keys(Key lo, Key hi) {\n        if (lo == null) throw new IllegalArgumentException(\"first argument to keys() is null\");\n        if (hi == null) throw new IllegalArgumentException(\"second argument to keys() is null\");\n\n        Queue&lt;Key&gt; queue = new Queue&lt;Key&gt;();\n        keys(root, queue, lo, hi);\n        return queue;\n    }\n\n    private void keys(Node x, Queue&lt;Key&gt; queue, Key lo, Key hi) {\n        if (x == null) return;\n        int cmplo = lo.compareTo(x.key);\n        int cmphi = hi.compareTo(x.key);\n        if (cmplo &lt; 0) keys(x.left, queue, lo, hi);\n        if (cmplo &lt;= 0 &amp;&amp; cmphi &gt;= 0) queue.enqueue(x.key);\n        if (cmphi &gt; 0) keys(x.right, queue, lo, hi);\n    }\n\n    /**\n     * returns the number of keys in the symbol table in the given range.\n     */\n    public int size(Key lo, Key hi) {\n        if (lo == null) throw new IllegalArgumentException(\"first argument to size() is null\");\n        if (hi == null) throw new IllegalArgumentException(\"second argument to size() is null\");\n\n        if (lo.compareTo(hi) &gt; 0) return 0;\n        if (contains(hi)) return rank(hi) - rank(lo) + 1;\n        else              return rank(hi) - rank(lo);\n    }\n\n    /**\n     * returns the height of the BST (for debugging).\n     */\n    public int height() {\n        return height(root);\n    }\n    private int height(Node x) {\n        if (x == null) return -1;\n        return 1 + Math.max(height(x.left), height(x.right));\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/princeton/note1/#_35","title":"\u5e73\u8861\u641c\u7d22\u6811","text":"<ul> <li>\u652f\u6301 Hibbard \u5220\u9664\u64cd\u4f5c\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u5927\u7684\u95ee\u9898\u5728\u4e8e\u4e0d\u5e73\u8861\uff0c\u56e0\u800c\u6811\u7684\u9ad8\u5ea6\u4f1a\u5931\u53bb\u5bf9\u6570\u4fdd\u8bc1</li> <li>\u5e73\u8861\u641c\u7d22\u6811\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u7ea2\u9ed1\u6811\u3001B \u6811\u7b49\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#2-3","title":"2-3\u2009\u6811","text":"<ul> <li>\u5b9e\u73b0\uff1a<ul> <li>\u5b58\u5728 2-node \u548c 3-node \u4e24\u79cd\u8282\u70b9</li> <li>\u641c\u7d22\u64cd\u4f5c\u76f8\u5f53\u4e8e\u7ed3\u5408\u4e86\u4e8c\u53c9\u641c\u7d22\u548c\u4e09\u53c9\u641c\u7d22</li> <li>\u63d2\u5165\u64cd\u4f5c\u5c06\u53f6\u8282\u70b9\u5347\u9636\uff0c\u5982\u679c\u5f62\u6210 4-node \u5219\u5206\u88c2\u8be5\u8282\u70b9\u5e76\u5c06\u4e2d\u95f4\u503c\u5411\u4e0a\u4f20\u9012<ul> <li>\u5982\u679c\u6839\u8282\u70b9\u5f62\u6210 4-node \u5219\u5206\u88c2\u6210\u4e09\u4e2a 2-node\uff0c\u5f53\u4e14\u4ec5\u5f53\u6b64\u65f6 2-3 \u6811\u7684\u9ad8\u5ea6\u52a0\u4e00</li> <li>\u8fd9\u79cd\u5206\u88c2\u65b9\u6cd5\u662f\u5c40\u90e8\u7684\uff0c\u53ea\u9700\u8981\u5e38\u6570\u6570\u91cf\u7684\u64cd\u4f5c\u5373\u53ef\u5b9e\u73b0</li> </ul> </li> </ul> </li> <li>\u5206\u6790\uff1a<ul> <li>2-3 \u6811\u603b\u662f\u4fdd\u6301\u5b8c\u5168\u5e73\u8861</li> <li>\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u5168\u90e8\u662f 2-node\uff09\u6811\u7684\u9ad8\u5ea6\u4e3a $\\log N$</li> <li>\u6700\u597d\u60c5\u51b5\u4e0b\uff08\u5168\u90e8\u662f 3-node\uff09\u6811\u7684\u9ad8\u5ea6\u4e3a $\\log _{3}N \\approx 0.631\\log N$</li> <li>\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u7684\u590d\u6742\u5ea6\u5747\u4e3a $\\sim c\\log N$\uff0c\u5e38\u6570\u56e0\u5b50\u53d6\u51b3\u4e8e\u5177\u4f53\u5b9e\u73b0</li> </ul> </li> <li>\u5177\u4f53\u5b9e\u73b0\uff1a<ul> <li>2-3 \u6811\u7684\u5177\u4f53\u5b9e\u73b0\u6bd4\u8f83\u590d\u6742\uff0c\u9700\u8981\u7ef4\u62a4\u4e24\u79cd\u8282\u70b9\uff0c\u800c\u4e14\u9700\u8981\u5728\u6811\u4e0a\u4e0a\u4e0b\u79fb\u52a8\u5e76\u8fdb\u884c\u591a\u6b21\u6bd4\u8f83</li> <li>\u76f8\u8f83\u4e4b\u4e0b\uff0c\u7ea2\u9ed1\u6811\u662f\u4e00\u79cd\u66f4\u52a0\u7b80\u5355\u9ad8\u6548\u7684\u5b9e\u73b0\u65b9\u6cd5</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_36","title":"\u7ea2\u9ed1\u6811","text":"<ul> <li>\u7ea2\u9ed1\u6811\u4f7f\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7ed3\u6784\u5b9e\u73b0\u4e86 2-3 \u6811<ul> <li>\u7528\u5de6\u659c\u7684\u7ea2\u8272\u94fe\u63a5\u6765\u8868\u793a 3-node</li> <li>\u6240\u6709\u8282\u70b9\u81f3\u591a\u6709\u4e00\u6761\u7ea2\u8272\u94fe\u63a5\u4e0e\u4e4b\u76f8\u8fde</li> <li>\u4ece\u6839\u8282\u70b9\u5230\u6240\u6709\u53f6\u8282\u70b9\u7684\u9ed1\u8272\u94fe\u63a5\u6570\u90fd\u662f\u76f8\u540c\u7684\uff0c\u5373\u201c\u9ed1\u8272\u5e73\u8861\u201d</li> </ul> </li> <li>\u7ea2\u9ed1\u6811\u4e0e 2-3 \u6811\u53ef\u4ee5\u6784\u5efa\u4e00\u4e00\u6620\u5c04</li> <li>\u5b9e\u73b0\uff1a<ul> <li>\u641c\u7d22\u64cd\u4f5c\u548c\u4e8c\u53c9\u641c\u7d22\u6811\u5b8c\u5168\u4e00\u81f4\uff0c\u4f46\u901f\u5ea6\u66f4\u5feb\uff08\u56e0\u4e3a\u66f4\u52a0\u5e73\u8861\uff09</li> <li>\u63d2\u5165\u64cd\u4f5c\u9700\u8981\u4fdd\u6301\u7ea2\u9ed1\u6811\u7684\u7279\u6027\u4e0d\u53d8\uff0c\u5305\u62ec\u4ee5\u4e0b\u4e09\u79cd\u5b50\u64cd\u4f5c\uff1a<ul> <li>\u4e0e\u53f3\u513f\u5b50\u901a\u8fc7\u7ea2\u8272\u94fe\u63a5\u76f8\u8fde\uff0c\u4e0e\u5de6\u513f\u5b50\u901a\u8fc7\u9ed1\u8272\u94fe\u63a5\u76f8\u8fde\uff0c\u5219\u5411\u5de6\u65cb\u8f6c\u7ea2\u8272\u94fe\u63a5</li> <li>\u4e0e\u5de6\u513f\u5b50\u901a\u8fc7\u7ea2\u8272\u94fe\u63a5\u76f8\u8fde\uff0c\u5de6\u513f\u5b50\u4e0e\u5176\u5de6\u513f\u5b50\u901a\u8fc7\u7ea2\u8272\u94fe\u63a5\u76f8\u8fde\uff0c\u5219\u5411\u53f3\u65cb\u8f6c\u7ea2\u8272\u94fe\u63a5</li> <li>\u4e0e\u5de6\u53f3\u513f\u5b50\u5747\u901a\u8fc7\u7ea2\u8272\u94fe\u63a5\u76f8\u8fde\uff0c\u5219\u5c06\u8fd9\u4e24\u4e2a\u94fe\u63a5\u53d8\u6362\u4e3a\u9ed1\u8272\uff0c\u5c06\u6307\u5411\u81ea\u8eab\u7684\u8fde\u63a5\u53d8\u6362\u4e3a\u7ea2\u8272</li> </ul> </li> <li>\u5220\u9664\u64cd\u4f5c\u66f4\u52a0\u590d\u6742\uff0c\u4f46\u672c\u8d28\u4e0a\u4e5f\u662f\u9700\u8981\u4fdd\u6301\u7ea2\u9ed1\u6811\u7684\u7279\u6027\u4e0d\u53d8</li> </ul> </li> <li>\u5206\u6790\uff1a<ul> <li>\u7ea2\u9ed1\u6811\u7684\u9ad8\u5ea6\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u8d85\u8fc7 $2\\log N$</li> <li>\u7ea2\u9ed1\u6811\u7684\u5178\u578b\u5b9e\u73b0\u5728\u5e73\u5747\u60c5\u51b5\u4e0b\u6811\u7684\u9ad8\u5ea6\u7ea6\u4e3a $\\sim 1.00\\log N$\uff0c\u5e38\u6570\u56e0\u5b50\u7684\u786e\u5207\u6570\u503c\u8fd8\u6ca1\u6709\u88ab\u8bc1\u660e\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\u8868\u73b0\u5f97\u975e\u5e38\u8fd1\u4f3c\u4e8e $1.00$</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#b","title":"B\u2009\u6811","text":"<ul> <li>B \u6811\u662f\u4e00\u79cd\u6cdb\u5316\u7684 2-3 \u6811\uff0c\u6216\u8005\u8bf4 2-3 \u6811\u662f B \u6811\u7684\u7279\u4f8b\uff084 \u9636 B \u6811\uff09</li> <li>B \u6811\u9002\u5408\u8bfb\u5199\u76f8\u5bf9\u8f83\u5927\u6570\u636e\u5757\u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u548c\u6587\u4ef6\u7cfb\u7edf<ul> <li>\u8fd9\u79cd\u5b58\u50a8\u7cfb\u7edf\u7684\u7279\u70b9\u662f\uff0c\u6570\u636e\u5757\u4ee5\u9875\uff08page\uff09\u4e3a\u5355\u4f4d\u5b58\u50a8\uff0c\u5bfb\u8def\uff08probe\uff0c\u67e5\u8be2\u7279\u5b9a\u7684\u67d0\u4e00\u9875\uff09\u7684\u5f00\u9500\u662f\u5f88\u5927\u7684\uff0c\u800c\u5728\u540c\u4e00\u9875\u4e2d\u8bfb\u53d6\u4e0d\u540c\u952e\u503c\u7684\u5f00\u9500\u76f8\u6bd4\u4e4b\u4e0b\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\uff1b\u56e0\u6b64\u63d0\u9ad8\u6548\u7387\u7684\u5173\u952e\u5728\u4e8e\u51cf\u5c11\u5bfb\u8def\u7684\u6b21\u6570</li> </ul> </li> <li>\u5b9e\u73b0\uff1a<ul> <li>\u5bf9\u4e8e M \u9636 B \u6811\u800c\u8a00\uff0c\u6bcf\u4e2a\u8282\u70b9\u81f3\u591a\u662f M-1 \u9636\u7684\uff08\u5373\u6709 M-1 \u4e2a\u952e\u503c\u548c M \u4e2a\u94fe\u63a5\uff09\uff0c\u901a\u5e38\u9009\u62e9\u4e00\u9875\u80fd\u5b58\u50a8\u7684\u952e\u503c\u6570\u4f5c\u4e3a M</li> <li>\u6839\u8282\u70b9\u81f3\u5c11\u662f 2 \u9636\u7684</li> <li>\u5176\u4ed6\u8282\u70b9\u81f3\u5c11\u662f M/2 \u9636\u7684\uff08\u534a\u6ee1\uff09</li> <li>\u5916\u8282\u70b9\uff08external node\uff09\u662f B \u6811\u7684\u53f6\u8282\u70b9\uff0c\u5b58\u50a8\u6570\u636e\u5757\u7684\u952e\u503c</li> <li>\u5185\u8282\u70b9\uff08internal node\uff09\u662f B \u6811\u7684\u975e\u53f6\u8282\u70b9\uff0c\u5b58\u50a8\u5176\u5404\u4e2a\u5b50\u8282\u70b9\u6570\u636e\u5757\u7684\u7b2c\u4e00\u4e2a\u952e\u503c\uff0c\u7528\u4e8e\u652f\u6301 B \u6811\u7684\u641c\u7d22\u64cd\u4f5c</li> <li>\u5f53\u67d0\u4e2a\u5916\u8282\u70b9\u53d8\u6210 M \u9636\u65f6\uff08\u5168\u6ee1\uff09\uff0c\u5206\u88c2\u8be5\u8282\u70b9\uff0c\u5177\u4f53\u64cd\u4f5c\u7c7b\u4f3c\u4e8e 2-3 \u6811\uff1b\u5f53\u4e14\u4ec5\u5f53\u6839\u8282\u70b9\u5206\u88c2\u65f6 B \u6811\u7684\u9ad8\u5ea6\u52a0\u4e00</li> </ul> </li> <li>\u5206\u6790\uff1a<ul> <li>\u5bf9\u4e8e\u5305\u542b $N$ \u4e2a\u952e\u503c\u7684 $M$ \u9636 B \u6811\uff0c\u641c\u7d22\u548c\u63d2\u5165\u53ea\u9700\u8981 $\\log _ {M-1} N \\sim \\log _ {M/2} N$ \u6b21\u5bfb\u8def</li> <li>\u5728\u5b9e\u8df5\u4e2d\uff0c\u5bfb\u8def\u6b21\u6570\u901a\u5e38\u4e0d\u8d85\u8fc7 4 \u6b21\uff0c\u6bd4\u5982 M = 1024\uff0cN = 62 billion</li> <li>\u4f18\u5316\uff1a\u603b\u662f\u628a\u6839\u8282\u70b9\u90a3\u4e00\u9875\u6570\u636e\u5757\u5b58\u50a8\u5728\u5185\u5b58\u4e2d</li> </ul> </li> <li>\u5e94\u7528\uff1a<ul> <li>\u7ea2\u9ed1\u6811\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u7cfb\u7edf\u7684\u7b26\u53f7\u8868\u4e2d</li> <li>B \u6811\u53ca\u5176\u53d8\u5f0f\uff08B+ \u6811\u3001B* \u6811\u3001B# \u6811\u7b49\uff09\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u6570\u636e\u5e93\u548c\u6587\u4ef6\u7cfb\u7edf\u4e2d</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_37","title":"\u4ee3\u7801","text":"Red-Black BST: Java Implementation Left-Leaning Red-Black Binary Search Tree<pre><code>package edu.princeton.cs.algs4;\nimport java.util.NoSuchElementException;\n\npublic class RedBlackBST&lt;Key extends Comparable&lt;Key&gt;, Value&gt; {\n    private static final boolean RED   = true;\n    private static final boolean BLACK = false;\n    private Node root;     // root of the BST\n\n    // BST helper node data type\n    private class Node {\n        private Key key;           // key\n        private Value val;         // associated data\n        private Node left, right;  // links to left and right subtrees\n        private boolean color;     // color of parent link\n        private int size;          // subtree count\n\n        public Node(Key key, Value val, boolean color, int size) {\n            this.key = key;\n            this.val = val;\n            this.color = color;\n            this.size = size;\n        }\n    }\n\n    // initializes an empty symbol table.\n    public RedBlackBST() {\n    }\n\n    /***************************************************************************\n    *  Node helper methods.\n    ***************************************************************************/\n    // is node x red; false if x is null ?\n    private boolean isRed(Node x) {\n        if (x == null) return false;\n        return x.color == RED;\n    }\n\n    // number of node in subtree rooted at x; 0 if x is null\n    private int size(Node x) {\n        if (x == null) return 0;\n        return x.size;\n    }\n\n    public int size() {\n        return size(root);\n    }\n\n    public boolean isEmpty() {\n        return root == null;\n    }\n\n    /***************************************************************************\n    *  Standard BST search.\n    ***************************************************************************/\n    /**\n     * returns the value associated with the given key.\n     */\n    public Value get(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"argument to get() is null\");\n        return get(root, key);\n    }\n\n    // value associated with the given key in subtree rooted at x; null if no such key\n    private Value get(Node x, Key key) {\n        while (x != null) {\n            int cmp = key.compareTo(x.key);\n            if      (cmp &lt; 0) x = x.left;\n            else if (cmp &gt; 0) x = x.right;\n            else              return x.val;\n        }\n        return null;\n    }\n\n    /**\n     * does this symbol table contain the given key?\n     */\n    public boolean contains(Key key) {\n        return get(key) != null;\n    }\n\n    /***************************************************************************\n    *  Red-black tree insertion.\n    ***************************************************************************/\n    /**\n     * inserts the specified key-value pair into the symbol table, overwriting the old\n     * value with the new value if the symbol table already contains the specified key.\n     */\n    public void put(Key key, Value val) {\n        if (key == null) throw new IllegalArgumentException(\"first argument to put() is null\");\n        if (val == null) {\n            delete(key);\n            return;\n        }\n        root = put(root, key, val);\n        root.color = BLACK;\n    }\n\n    // insert the key-value pair in the subtree rooted at h\n    private Node put(Node h, Key key, Value val) {\n        if (h == null) return new Node(key, val, RED, 1);\n\n        int cmp = key.compareTo(h.key);\n        if      (cmp &lt; 0) h.left  = put(h.left,  key, val);\n        else if (cmp &gt; 0) h.right = put(h.right, key, val);\n        else              h.val   = val;\n\n        // fix-up any right-leaning links\n        if (isRed(h.right) &amp;&amp; !isRed(h.left))      h = rotateLeft(h);\n        if (isRed(h.left)  &amp;&amp;  isRed(h.left.left)) h = rotateRight(h);\n        if (isRed(h.left)  &amp;&amp;  isRed(h.right))     flipColors(h);\n        h.size = size(h.left) + size(h.right) + 1;\n\n        return h;\n    }\n\n    /***************************************************************************\n    *  Red-black tree deletion.\n    ***************************************************************************/\n    /**\n     * removes the smallest key and associated value from the symbol table.\n     */\n    public void deleteMin() {\n        if (isEmpty()) throw new NoSuchElementException(\"BST underflow\");\n\n        // if both children of root are black, set root to red\n        if (!isRed(root.left) &amp;&amp; !isRed(root.right))\n            root.color = RED;\n\n        root = deleteMin(root);\n        if (!isEmpty()) root.color = BLACK;\n    }\n\n    // delete the key-value pair with the minimum key rooted at h\n    private Node deleteMin(Node h) {\n        if (h.left == null)\n            return null;\n\n        if (!isRed(h.left) &amp;&amp; !isRed(h.left.left))\n            h = moveRedLeft(h);\n\n        h.left = deleteMin(h.left);\n        return balance(h);\n    }\n\n    /**\n     * removes the largest key and associated value from the symbol table.\n     */\n    public void deleteMax() {\n        if (isEmpty()) throw new NoSuchElementException(\"BST underflow\");\n\n        // if both children of root are black, set root to red\n        if (!isRed(root.left) &amp;&amp; !isRed(root.right))\n            root.color = RED;\n\n        root = deleteMax(root);\n        if (!isEmpty()) root.color = BLACK;\n    }\n\n    // delete the key-value pair with the maximum key rooted at h\n    private Node deleteMax(Node h) {\n        if (isRed(h.left))\n            h = rotateRight(h);\n\n        if (h.right == null)\n            return null;\n\n        if (!isRed(h.right) &amp;&amp; !isRed(h.right.left))\n            h = moveRedRight(h);\n\n        h.right = deleteMax(h.right);\n\n        return balance(h);\n    }\n\n    /**\n     * removes the specified key and its associated value from this symbol table\n     * (if the key is in this symbol table).\n     */\n    public void delete(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"argument to delete() is null\");\n        if (!contains(key)) return;\n\n        // if both children of root are black, set root to red\n        if (!isRed(root.left) &amp;&amp; !isRed(root.right))\n            root.color = RED;\n\n        root = delete(root, key);\n        if (!isEmpty()) root.color = BLACK;\n    }\n\n    // delete the key-value pair with the given key rooted at h\n    private Node delete(Node h, Key key) {\n        if (key.compareTo(h.key) &lt; 0)  {\n            if (!isRed(h.left) &amp;&amp; !isRed(h.left.left))\n                h = moveRedLeft(h);\n            h.left = delete(h.left, key);\n        }\n        else {\n            if (isRed(h.left))\n                h = rotateRight(h);\n            if (key.compareTo(h.key) == 0 &amp;&amp; (h.right == null))\n                return null;\n            if (!isRed(h.right) &amp;&amp; !isRed(h.right.left))\n                h = moveRedRight(h);\n            if (key.compareTo(h.key) == 0) {\n                Node x = min(h.right);\n                h.key = x.key;\n                h.val = x.val;\n                // h.val = get(h.right, min(h.right).key);\n                // h.key = min(h.right).key;\n                h.right = deleteMin(h.right);\n            }\n            else h.right = delete(h.right, key);\n        }\n        return balance(h);\n    }\n\n    /***************************************************************************\n    *  Red-black tree helper functions.\n    ***************************************************************************/\n    // make a left-leaning link lean to the right\n    private Node rotateRight(Node h) {\n        Node x = h.left;\n        h.left = x.right;\n        x.right = h;\n        x.color = h.color;\n        h.color = RED;\n        x.size = h.size;\n        h.size = size(h.left) + size(h.right) + 1;\n        return x;\n    }\n\n    // make a right-leaning link lean to the left\n    private Node rotateLeft(Node h) {\n        Node x = h.right;\n        h.right = x.left;\n        x.left = h;\n        x.color = h.color;\n        h.color = RED;\n        x.size = h.size;\n        h.size = size(h.left) + size(h.right) + 1;\n        return x;\n    }\n\n    // flip the colors of a node and its two children\n    private void flipColors(Node h) {\n        // h must have opposite color of its two children\n        h.color = !h.color;\n        h.left.color = !h.left.color;\n        h.right.color = !h.right.color;\n    }\n\n    // assuming that h is red and both h.left and h.left.left\n    // are black, make h.left or one of its children red.\n    private Node moveRedLeft(Node h) {\n        flipColors(h);\n        if (isRed(h.right.left)) {\n            h.right = rotateRight(h.right);\n            h = rotateLeft(h);\n            flipColors(h);\n        }\n        return h;\n    }\n\n    // assuming that h is red and both h.right and h.right.left\n    // are black, make h.right or one of its children red.\n    private Node moveRedRight(Node h) {\n        flipColors(h);\n        if (isRed(h.left.left)) {\n            h = rotateRight(h);\n            flipColors(h);\n        }\n        return h;\n    }\n\n    // restore red-black tree invariant\n    private Node balance(Node h) {\n        if (isRed(h.right) &amp;&amp; !isRed(h.left))    h = rotateLeft(h);\n        if (isRed(h.left) &amp;&amp; isRed(h.left.left)) h = rotateRight(h);\n        if (isRed(h.left) &amp;&amp; isRed(h.right))     flipColors(h);\n\n        h.size = size(h.left) + size(h.right) + 1;\n        return h;\n    }\n\n    /***************************************************************************\n    *  Utility functions.\n    ***************************************************************************/\n    /**\n     * returns the height of the BST (for debugging).\n     */\n    public int height() {\n        return height(root);\n    }\n    private int height(Node x) {\n        if (x == null) return -1;\n        return 1 + Math.max(height(x.left), height(x.right));\n    }\n\n    /***************************************************************************\n    *  Ordered symbol table methods.\n    ***************************************************************************/\n    /**\n     * returns the smallest key in the symbol table.\n     */\n    public Key min() {\n        if (isEmpty()) throw new NoSuchElementException(\"calls min() with empty symbol table\");\n        return min(root).key;\n    }\n\n    // the smallest key in subtree rooted at x; null if no such key\n    private Node min(Node x) {\n        if (x.left == null) return x;\n        else                return min(x.left);\n    }\n\n    /**\n     * returns the largest key in the symbol table.\n     */\n    public Key max() {\n        if (isEmpty()) throw new NoSuchElementException(\"calls max() with empty symbol table\");\n        return max(root).key;\n    }\n\n    // the largest key in the subtree rooted at x; null if no such key\n    private Node max(Node x) {\n        if (x.right == null) return x;\n        else                 return max(x.right);\n    }\n\n\n    /**\n     * returns the largest key in the symbol table less than or equal to {@code key}.\n     */\n    public Key floor(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"argument to floor() is null\");\n        if (isEmpty()) throw new NoSuchElementException(\"calls floor() with empty symbol table\");\n        Node x = floor(root, key);\n        if (x == null) throw new NoSuchElementException(\"argument to floor() is too small\");\n        else           return x.key;\n    }\n\n    // the largest key in the subtree rooted at x less than or equal to the given key\n    private Node floor(Node x, Key key) {\n        if (x == null) return null;\n        int cmp = key.compareTo(x.key);\n        if (cmp == 0) return x;\n        if (cmp &lt; 0)  return floor(x.left, key);\n        Node t = floor(x.right, key);\n        if (t != null) return t;\n        else           return x;\n    }\n\n    /**\n     * returns the smallest key in the symbol table greater than or equal to {@code key}.\n     */\n    public Key ceiling(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"argument to ceiling() is null\");\n        if (isEmpty()) throw new NoSuchElementException(\"calls ceiling() with empty symbol table\");\n        Node x = ceiling(root, key);\n        if (x == null) throw new NoSuchElementException(\"argument to ceiling() is too large\");\n        else           return x.key;\n    }\n\n    // the smallest key in the subtree rooted at x greater than or equal to the given key\n    private Node ceiling(Node x, Key key) {\n        if (x == null) return null;\n        int cmp = key.compareTo(x.key);\n        if (cmp == 0) return x;\n        if (cmp &gt; 0)  return ceiling(x.right, key);\n        Node t = ceiling(x.left, key);\n        if (t != null) return t;\n        else           return x;\n    }\n\n    /**\n     * return the key in the symbol table of a given {@code rank}.\n     */\n    public Key select(int rank) {\n        if (rank &lt; 0 || rank &gt;= size()) {\n            throw new IllegalArgumentException(\"argument to select() is invalid: \" + rank);\n        }\n        return select(root, rank);\n    }\n\n    // Return key in BST rooted at x of given rank.\n    // Precondition: rank is in legal range.\n    private Key select(Node x, int rank) {\n        if (x == null) return null;\n        int leftSize = size(x.left);\n        if      (leftSize &gt; rank) return select(x.left,  rank);\n        else if (leftSize &lt; rank) return select(x.right, rank - leftSize - 1);\n        else                      return x.key;\n    }\n\n    /**\n     * return the number of keys in the symbol table strictly less than {@code key}.\n     */\n    public int rank(Key key) {\n        if (key == null) throw new IllegalArgumentException(\"argument to rank() is null\");\n        return rank(key, root);\n    }\n\n    // number of keys less than key in the subtree rooted at x\n    private int rank(Key key, Node x) {\n        if (x == null) return 0;\n        int cmp = key.compareTo(x.key);\n        if      (cmp &lt; 0) return rank(key, x.left);\n        else if (cmp &gt; 0) return 1 + size(x.left) + rank(key, x.right);\n        else              return size(x.left);\n    }\n\n    /***************************************************************************\n    *  Range count and range search.\n    ***************************************************************************/\n    /**\n     * Returns all keys in the symbol table in ascending order as an {@code Iterable}.\n     * To iterate over all of the keys in the symbol table named {@code st},\n     * use the foreach notation: {@code for (Key key : st.keys())}.\n     */\n    public Iterable&lt;Key&gt; keys() {\n        if (isEmpty()) return new Queue&lt;Key&gt;();\n        return keys(min(), max());\n    }\n\n    /**\n     * returns all keys in the symbol table in the given range in ascending order,\n     * as an {@code Iterable}.\n     */\n    public Iterable&lt;Key&gt; keys(Key lo, Key hi) {\n        if (lo == null) throw new IllegalArgumentException(\"first argument to keys() is null\");\n        if (hi == null) throw new IllegalArgumentException(\"second argument to keys() is null\");\n\n        Queue&lt;Key&gt; queue = new Queue&lt;Key&gt;();\n        keys(root, queue, lo, hi);\n        return queue;\n    }\n\n    // add the keys between lo and hi in the subtree rooted at x\n    // to the queue\n    private void keys(Node x, Queue&lt;Key&gt; queue, Key lo, Key hi) {\n        if (x == null) return;\n        int cmplo = lo.compareTo(x.key);\n        int cmphi = hi.compareTo(x.key);\n        if (cmplo &lt; 0) keys(x.left, queue, lo, hi);\n        if (cmplo &lt;= 0 &amp;&amp; cmphi &gt;= 0) queue.enqueue(x.key);\n        if (cmphi &gt; 0) keys(x.right, queue, lo, hi);\n    }\n\n    /**\n     * returns the number of keys in the symbol table in the given range.\n     */\n    public int size(Key lo, Key hi) {\n        if (lo == null) throw new IllegalArgumentException(\"first argument to size() is null\");\n        if (hi == null) throw new IllegalArgumentException(\"second argument to size() is null\");\n\n        if (lo.compareTo(hi) &gt; 0) return 0;\n        if (contains(hi)) return rank(hi) - rank(lo) + 1;\n        else              return rank(hi) - rank(lo);\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/princeton/note1/#bst","title":"BST\u2009\u7684\u51e0\u4f55\u5e94\u7528","text":"<ul> <li>\u524d\u9762\u8ba8\u8bba\u7684 BST \u90fd\u662f\u4ee5\u6570\u503c\u4f5c\u4e3a\u952e\u503c\u7684\uff0c\u4e0b\u9762\u8ba8\u8bba\u7684 BST \u4f1a\u4ee5\u51e0\u4f55\u5bf9\u8c61\u4f5c\u4e3a\u952e\u503c\uff0c\u6bd4\u5982\u70b9\u3001\u7ebf\u6bb5\u3001\u533a\u95f4\u7b49</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_38","title":"\u4e00\u7ef4\u8303\u56f4\u641c\u7d22","text":"<ul> <li>\u6570\u636e\u7ed3\u6784\uff1a\u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff09</li> <li>\u4e00\u7ef4\u8303\u56f4\u641c\u7d22\uff081d range search\uff09\u7814\u7a76\u7684\u662f\u4e00\u7ef4\u5206\u5e03\u7684\u70b9\uff0c\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u4e00\u4e2a BST \u8282\u70b9</li> <li>\u9664\u4e86\u57fa\u672c\u7684\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u5916\uff0c\u8fd8\u652f\u6301\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a<ul> <li>\u8303\u56f4\u641c\u7d22\uff1a\u67e5\u8be2\u5904\u4e8e\u533a\u95f4 [m, n] \u4e4b\u95f4\u7684\u6240\u6709\u70b9</li> <li>\u8303\u56f4\u8ba1\u6570\uff1a\u8ba1\u7b97\u5904\u4e8e\u533a\u95f4 [m, n] \u4e4b\u95f4\u70b9\u7684\u4e2a\u6570</li> </ul> </li> <li>\u590d\u6742\u5ea6\u5206\u6790\uff0c$R$ \u8868\u793a\u5904\u4e8e\u533a\u95f4\u4e4b\u95f4\u7684\u70b9\u7684\u4e2a\u6570<ul> <li>\u8303\u56f4\u641c\u7d22\u590d\u6742\u5ea6\u4e3a $\\Omicron(R+\\log N)$</li> <li>\u8303\u56f4\u8ba1\u6570\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log N)$\uff0c\u901a\u8fc7 BST \u7684 rank \u64cd\u4f5c\u5b9e\u73b0</li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_39","title":"\u4e8c\u7ef4\u6b63\u4ea4\u7ebf\u6bb5\u76f8\u4ea4\u95ee\u9898","text":"<ul> <li>\u7b97\u6cd5\uff1a\u901a\u8fc7\u626b\u63cf\u7ebf\u7b97\u6cd5\uff08sweep-line\uff09\u8f6c\u5316\u4e3a\u4e00\u7ef4\u8303\u56f4\u641c\u7d22\u95ee\u9898</li> <li>\u4e8c\u7ef4\u6b63\u4ea4\u7ebf\u6bb5\u76f8\u4ea4\u95ee\u9898\uff08orthogonal line segment intersection\uff09\u7814\u7a76\u7684\u662f\u4e8c\u7ef4\u7a7a\u95f4\u4e0a\u6b63\u4ea4\u7684\u7ebf\u6bb5\u7684\u4ea4\u70b9</li> <li>\u5177\u4f53\u5b9e\u73b0\uff1a<ul> <li>\u7528\u4e00\u6761\u7ad6\u76f4\u7684\u7ebf\u81ea\u5de6\u5411\u53f3\u626b\u63cf\uff08\u4ee5\u5de6\u53f3\u7aef\u70b9\u7684\u6a2a\u5750\u6807\u5b9a\u4e49\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u6216\u8005\u6392\u5e8f\u5b9e\u73b0\uff09</li> <li>\u9047\u5230\u6c34\u5e73\u7ebf\u6bb5\u7684\u5de6\u7aef\u70b9\uff0c\u5c06\u5176\u7eb5\u5750\u6807\u63d2\u5165 BST</li> <li>\u9047\u5230\u6c34\u5e73\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9\uff0c\u5c06\u5176\u7eb5\u5750\u6807\u4ece BST \u4e2d\u5220\u9664</li> <li>\u9047\u5230\u7ad6\u76f4\u7ebf\u6bb5\uff0c\u4ee5\u5176\u4e24\u7aef\u70b9\u7eb5\u5750\u6807\u4f5c\u4e3a\u8303\u56f4\uff0c\u5bf9 BST \u8fdb\u884c\u4e00\u7ef4\u8303\u56f4\u641c\u7d22\uff0c\u627e\u5230\u6240\u6709\u4e0e\u5176\u76f8\u4ea4\u7684\u7ebf\u6bb5</li> </ul> </li> <li>\u5728 $N$ \u6761\u6b63\u4ea4\u7ebf\u6bb5\u4e2d\u67e5\u8be2 $R$ \u4e2a\u4ea4\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(R+N\\log N)$</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_40","title":"\u4e00\u7ef4\u533a\u95f4\u641c\u7d22","text":"<ul> <li>\u6570\u636e\u7ed3\u6784\uff1a\u533a\u95f4\u641c\u7d22\u6811\uff08BST \u7684\u4e00\u79cd\u53d8\u5f0f\uff09</li> <li>\u4e00\u7ef4\u533a\u95f4\u641c\u7d22\uff081d interval search\uff09\u7814\u7a76\u7684\u662f\u4e00\u7ef4\u5206\u5e03\u7684\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u5bf9\u5e94\u4e00\u4e2a BST \u8282\u70b9</li> <li>\u9664\u4e86\u57fa\u672c\u7684\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u5916\uff0c\u8fd8\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u76f8\u4ea4\u533a\u95f4\u67e5\u8be2\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4 [lo, hi]\uff0c\u627e\u5230\u6240\u6709\u4e0e\u8fd9\u4e2a\u533a\u95f4\u6709\u4ea4\u96c6\u7684\u533a\u95f4</li> </ul> </li> <li>\u5177\u4f53\u5b9e\u73b0\uff1a<ul> <li>\u533a\u95f4\u641c\u7d22\u6811\u4ee5\u533a\u95f4\u5de6\u7aef\u70b9\u4f5c\u4e3a\u641c\u7d22\u7684\u952e\u503c\uff08\u5047\u8bbe\u6240\u6709\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u90fd\u662f\u76f8\u5f02\u7684\uff09</li> <li>\u533a\u95f4\u641c\u7d22\u6811\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u9700\u8981\u989d\u5916\u5b58\u50a8\u4e00\u4e2a\u503c\uff0c\u8868\u793a\u5176\u5b50\u6811\u4e2d\u6240\u6709\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c</li> </ul> </li> <li>\u590d\u6742\u5ea6\u5206\u6790\uff0c$R$ \u8868\u793a\u4e0e\u7ed9\u5b9a\u533a\u95f4\u6709\u4ea4\u96c6\u7684\u533a\u95f4\u4e2a\u6570<ul> <li>\u533a\u95f4\u641c\u7d22\u6811\u5b9e\u73b0\u7684\u4e00\u7ef4\u533a\u95f4\u641c\u7d22\uff0c\u67e5\u8be2\u4efb\u4e00\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4\u6240\u9700\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log N)$</li> <li>\u533a\u95f4\u641c\u7d22\u6811\u5b9e\u73b0\u7684\u4e00\u7ef4\u533a\u95f4\u641c\u7d22\uff0c\u67e5\u8be2\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4\u6240\u9700\u590d\u6742\u5ea6\u4e3a $\\Omicron(R\\log N)$<ul> <li>\u7406\u8bba\u4e0a\u6700\u4f18\u590d\u6742\u5ea6\u4e3a $\\Omicron(R+\\log N)$\uff0c\u4e0d\u8fc7 $\\Omicron(R\\log N)$ \u7684\u5b9e\u8df5\u8868\u73b0\u4e5f\u975e\u5e38\u6709\u6548</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/algorithm/princeton/note1/#_41","title":"\u4e8c\u7ef4\u6b63\u4ea4\u77e9\u5f62\u76f8\u4ea4\u95ee\u9898","text":"<ul> <li>\u7b97\u6cd5\uff1a\u901a\u8fc7\u626b\u63cf\u7ebf\u7b97\u6cd5\uff08sweep-line\uff09\u8f6c\u5316\u4e3a\u4e00\u7ef4\u533a\u95f4\u641c\u7d22\u95ee\u9898</li> <li>\u4e8c\u7ef4\u6b63\u4ea4\u77e9\u5f62\u76f8\u4ea4\u95ee\u9898\uff08orthongonal rectangle intersection\uff09\u7814\u7a76\u7684\u662f\u4e8c\u7ef4\u7a7a\u95f4\u4e0a\u6b63\u4ea4\u7684\u77e9\u5f62\u7684\u76f8\u4ea4\u5173\u7cfb</li> <li>\u5177\u4f53\u5b9e\u73b0\uff1a<ul> <li>\u7528\u4e00\u6761\u7ad6\u76f4\u7684\u7ebf\u81ea\u5de6\u5411\u53f3\u626b\u63cf\uff08\u4ee5\u5de6\u53f3\u8fb9\u7ebf\u7684\u6a2a\u5750\u6807\u5b9a\u4e49\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u6216\u8005\u6392\u5e8f\u5b9e\u73b0\uff09</li> <li>\u5c06\u4e0e\u626b\u63cf\u7ebf\u76f8\u4ea4\u7684\u77e9\u5f62\u7ef4\u62a4\u5728\u533a\u95f4\u641c\u7d22\u6811\u4e0a\uff08\u4ee5\u7eb5\u5750\u6807\u533a\u95f4\u6765\u8868\u793a\uff09</li> <li>\u9047\u5230\u77e9\u5f62\u7684\u5de6\u8fb9\u7ebf\uff0c\u4ee5\u5176\u7eb5\u5750\u6807\u533a\u95f4\u4f5c\u4e3a\u7ed9\u5b9a\u533a\u95f4\uff0c\u5bf9\u533a\u95f4\u641c\u7d22\u6811\u8fdb\u884c\u4e00\u7ef4\u533a\u95f4\u641c\u7d22\uff0c\u627e\u5230\u6240\u6709\u4e0e\u5176\u76f8\u4ea4\u7684\u77e9\u5f62\uff0c\u5e76\u5c06\u5176\u63d2\u5165\u533a\u95f4\u641c\u7d22\u6811</li> <li>\u9047\u5230\u77e9\u5f62\u7684\u53f3\u8fb9\u7ebf\uff0c\u5c06\u5176\u4ece\u533a\u95f4\u641c\u7d22\u6811\u4e2d\u5220\u9664</li> </ul> </li> <li>\u5728 $N$ \u4e2a\u6b63\u4ea4\u77e9\u5f62\u4e2d\u67e5\u8be2 $R$ \u5bf9\u76f8\u4ea4\u5173\u7cfb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(R\\log N+N\\log N)$</li> </ul>"},{"location":"cs/algorithm/princeton/note1/#kd","title":"Kd\u2009\u6811","text":"<ul> <li>\u524d\u9762\u8ba8\u8bba\u7684\u7b26\u53f7\u8868\u90fd\u662f\u4ee5\u6570\u503c\u4f5c\u4e3a\u952e\u503c\u7684\uff0c\u4e0b\u9762\u8ba8\u8bba\u4e00\u79cd\u4ee5\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4f5c\u4e3a\u952e\u503c\u7684\u7b26\u53f7\u8868\uff0c\u5e76\u8fdb\u4e00\u6b65\u63a8\u5e7f\u5230 K \u7ef4</li> <li>\u4ee5\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4f5c\u4e3a\u952e\u503c\u7684\u7b26\u53f7\u8868\uff0c\u9664\u4e86\u57fa\u672c\u7684\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u8fd8\u652f\u6301\u8303\u56f4\u641c\u7d22\u548c\u8303\u56f4\u8ba1\u6570</li> <li>\u5b9e\u73b0\u601d\u8def\u4e00\uff1a\u7f51\u683c\u6cd5<ul> <li>\u5c06\u5e73\u9762\u5206\u5272\u6210 $M\\times M$ \u7684\u7f51\u683c\uff08\u901a\u5e38\u53d6 $M=\\sqrt{N}$\uff09</li> <li>\u5bf9\u6bcf\u4e2a\u7f51\u683c\u7ef4\u62a4\u4e00\u4e2a\u5217\u8868\u6765\u5b58\u50a8\u70b9\uff0c\u7528\u4e8c\u7ef4\u6570\u7ec4\u76f4\u63a5\u7d22\u5f15\u6240\u6709\u7f51\u683c</li> <li>\u8303\u56f4\u641c\u7d22\u65f6\u53ea\u5bf9\u4e0e\u7ed9\u5b9a\u8303\u56f4\u6709\u4ea4\u96c6\u7684\u7f51\u683c\u8fdb\u884c\u641c\u7d22</li> <li>\u6700\u597d\u60c5\u51b5\u4e0b\uff08\u6240\u6709\u7684\u70b9\u5747\u5300\u5206\u6563\uff09\u63d2\u5165\u548c\u8303\u56f4\u641c\u7d22\u7684\u590d\u6742\u5ea6\u5747\u4e3a $1$</li> <li>\u6700\u574f\u60c5\u51b5\u4e0b\u4f1a\u5f88\u7cdf\u7cd5\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u70b9\u90fd\u805a\u96c6\u5728\u540c\u4e00\u4e2a\u7f51\u683c\u9644\u8fd1\uff08cluster\uff09\uff0c\u5217\u8868\u7ef4\u62a4\u548c\u8303\u56f4\u641c\u7d22\u4f1a\u5f00\u9500\u5f88\u5927</li> </ul> </li> <li>\u5b9e\u73b0\u601d\u8def\u4e8c\uff1a2d \u6811<ul> <li>\u9012\u5f52\u5730\u5c06\u5e73\u9762\u4e0d\u65ad\u5206\u5272\u6210 2 \u4e2a\u534a\u5e73\u9762</li> <li>\u7ef4\u62a4\u4e00\u4e2a BST\uff0c\u4ea4\u66ff\u4f7f\u7528\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u4f5c\u4e3a\u952e\u503c\uff0c\u5947\u6570\u5c42\u7684\u8282\u70b9\u6839\u636e\u6a2a\u5750\u6807\u5927\u5c0f\u5206\u5212\u5de6\u53f3\u5b50\u6811\uff08\u5de6\u534a\u5e73\u9762\u548c\u53f3\u534a\u5e73\u9762\uff09\uff0c\u5076\u6570\u5c42\u7684\u8282\u70b9\u6839\u636e\u7eb5\u5750\u6807\u5927\u5c0f\u5206\u5212\u5de6\u53f3\u5b50\u6811\uff08\u4e0b\u534a\u5e73\u9762\u548c\u4e0a\u534a\u5e73\u9762\uff09</li> <li>\u8303\u56f4\u641c\u7d22\uff1a<ul> <li>\u68c0\u67e5\u5f53\u524d\u8282\u70b9\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff08\u5373\u5904\u5728\u7ed9\u5b9a\u8303\u56f4\u4e4b\u4e2d\uff09\uff0c\u7136\u540e\u9012\u5f52\u5730\u641c\u7d22\u53ef\u80fd\u5305\u542b\u6ee1\u8db3\u6761\u4ef6\u7684\u8282\u70b9\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811</li> <li>\u5e73\u5747\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u4e3a $\\sim R+\\log N$\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u4e3a $\\sim R+\\sqrt{N}$\uff08\u5373\u4f7f\u6811\u662f\u5e73\u8861\u7684\uff09</li> </ul> </li> <li>\u6700\u8fd1\u90bb\u641c\u7d22\uff1a<ul> <li>\u7ed9\u5b9a\u4e00\u4e2a\u67e5\u8be2\u70b9\uff0c\u641c\u7d22\u5e73\u9762\u4e2d\u4e0e\u5176\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9</li> <li>\u641c\u7d22\u601d\u8def\u548c\u8303\u56f4\u641c\u7d22\u76f8\u4f3c\uff0c\u671d\u7740\u67e5\u8be2\u70b9\u6240\u5728\u65b9\u5411\u4e0d\u65ad\u9012\u5f52\uff0c\u5e76\u4e0d\u65ad\u66f4\u65b0\u6700\u8fd1\u90bb\uff08\u989d\u5916\u7ef4\u62a4\u4e00\u4e2a\u6570\u503c\u6765\u5b58\u50a8\u6700\u8fd1\u90bb\u7684\u4fe1\u606f\uff09</li> <li>\u6ce8\u610f\u5bf9\u4e8e\u4efb\u4e00\u8282\u70b9\uff0c\u4e00\u4fa7\u5b50\u6811\u662f\u67e5\u8be2\u70b9\u6240\u5728\u65b9\u5411\uff0c\u9700\u8981\u9012\u5f52\uff0c\u53e6\u4e00\u4fa7\u5b50\u6811\u4e0d\u662f\u67e5\u8be2\u70b9\u6240\u5728\u65b9\u5411\uff0c\u53ef\u80fd\u9700\u8981\u9012\u5f52\uff08\u5224\u65ad\u65b9\u6cd5\u662f\uff0c\u6bd4\u8f83\u4ee5\u67e5\u8be2\u70b9\u4e3a\u4e2d\u5fc3\u3001\u4ee5\u5f53\u524d\u6700\u8fd1\u90bb\u8ddd\u79bb\u4e3a\u534a\u5f84\u7684\u5706\u662f\u5426\u4e0e\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u5e73\u9762\u5206\u5272\u7ebf\u76f8\u4ea4\uff0c\u82e5\u76f8\u4ea4\uff0c\u5219\u8be5\u4fa7\u5e73\u9762\u53ef\u80fd\u5b58\u5728\u66f4\u8fd1\u90bb\uff0c\u9700\u8981\u9012\u5f52\uff09</li> <li>\u5e73\u5747\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u4e3a $\\sim \\log N$\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u4e3a $\\sim N$\uff08\u5373\u4f7f\u6811\u662f\u5e73\u8861\u7684\uff09\uff0c\u6b64\u65f6\u76f8\u5f53\u4e8e\u6240\u6709\u8282\u70b9\u90fd\u88ab\u8bbf\u95ee\u4e86\uff0c\u8bd5\u8003\u8651\u4e00\u4e2a\u5e73\u9762\u5185\u6240\u6709\u70b9\u90fd\u5728\u4e00\u4e2a\u5706\u4e0a\u4e14\u67e5\u8be2\u70b9\u4e3a\u5706\u5fc3\u8fd9\u4e00\u60c5\u5f62</li> </ul> </li> <li>\u601d\u8def\u4e8c\u672c\u8d28\u4e0a\u662f\u7528\u6811\u7684\u7ed3\u6784\u4e0d\u65ad\u9012\u5f52\u5730\u5bf9\u5e73\u9762\u4f5c\u5212\u5206\uff0c\u9664\u4e86 2d \u6811\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u56db\u53c9\u6811\u3001BSP \u6811\u7b49</li> </ul> </li> <li>Kd \u6811\uff1a\u662f 2d \u6811\u7684\u63a8\u5e7f\uff0c\u7528\u4ee5\u8868\u793a K \u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4f5c\u4e3a\u952e\u503c\u7684\u7b26\u53f7\u8868<ul> <li>\u9012\u5f52\u5730\u5c06 K \u7ef4\u7a7a\u95f4\u4e0d\u65ad\u5206\u5272\u6210 2 \u4e2a\u534a\u7a7a\u95f4</li> <li>\u7ef4\u62a4\u4e00\u4e2a BST\uff0c\u6309\u7167\u540c\u4f59\u5173\u7cfb\u8f6e\u6362\u4f7f\u7528 K \u7ef4\u5750\u6807\u4f5c\u4e3a\u952e\u503c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5904\u4e8e\u7b2c level \u5c42\u7684\u8282\u70b9\u800c\u8a00\uff0c\u8bbe level $\\equiv$ i (mod) K\uff0c\u5176\u5de6\u5b50\u6811\u8868\u793a\u7b2c i \u7ef4\u5750\u6807\u5c0f\u4e8e\u8be5\u8282\u70b9\u7684\u534a\u7a7a\u95f4\uff0c\u5176\u53f3\u5b50\u6811\u8868\u793a\u7b2c i \u7ef4\u5750\u6807\u5927\u4e8e\u8be5\u8282\u70b9\u7684\u534a\u7a7a\u95f4</li> <li>\u6700\u8fd1\u90bb\u641c\u7d22\u7684\u9012\u5f52\u5224\u65ad\uff1a\u6bd4\u8f83\u4ee5\u67e5\u8be2\u70b9\u4e3a\u4e2d\u5fc3\u3001\u4ee5\u5f53\u524d\u6700\u8fd1\u90bb\u8ddd\u79bb\u4e3a\u534a\u5f84\u7684\u8d85\u7403\u9762\u662f\u5426\u4e0e\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u5206\u5272\u7a7a\u95f4\u7684\u8d85\u5e73\u9762\u76f8\u4ea4</li> </ul> </li> <li>Kd \u6811\u7684\u5e94\u7528\uff1a<ul> <li>Kd \u6811\u5c06 N \u4f53\u6a21\u62df\u4e2d\u7684\u6bcf\u4e00\u6b65\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230 $N\\log N$\uff0c\u6781\u5927\u4fc3\u8fdb\u4e86 N \u4f53\u6a21\u62df\u53ca\u5176\u884d\u751f\u7814\u7a76\u7684\u53d1\u5c55</li> </ul> </li> </ul>"},{"location":"cs/system/digital_logic/","title":"\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1","text":"<p> \u7ea6 175 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66\u300a\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u300b\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\u8bfe\u7a0b\u7684\u6838\u5fc3\u7b14\u8bb0\u5df2\u7ecf\u66f4\u65b0\u5230 Isshiki\u4fee's Notebook \u4e2d\uff0c\u8bf7\u79fb\u6b65\u4fee\u4f6c\u7684\u6570\u903b\u7b14\u8bb0</li> <li>\u8fd9\u91cc\u4ec5\u6536\u5f55\u90e8\u5206\u6570\u903b\u76f8\u5173\u7684\u77e5\u8bc6\u4e0e\u601d\u8003\uff0c\u4f5c\u4e3a\u4e0a\u8ff0\u7b14\u8bb0\u7684\u8865\u5145\u5185\u5bb9</li> <li>\u53c2\u8003\u8d44\u6599\uff1a<ul> <li>Logic and Computer Design Fundamentals   Fifth Edition, M.Morris Mano, Charles R.Kime, Tom Martin</li> </ul> </li> </ul>"},{"location":"cs/system/digital_logic/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u6570\u5b57\u903b\u8f91\u57fa\u7840</li> <li>\u7ec4\u5408\u903b\u8f91\u8bbe\u8ba1<ul> <li>\u63a8\u8350\u9605\u8bfb\uff1a\u4ece\u5168\u52a0\u5668\u5230\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668</li> </ul> </li> <li>\u65f6\u5e8f\u903b\u8f91\u8bbe\u8ba1<ul> <li>\u63a8\u8350\u9605\u8bfb\uff1a\u4ece\u9501\u5b58\u5668\u5230\u89e6\u53d1\u5668</li> </ul> </li> <li>\u6559\u6750\u914d\u5957\u7684 Companion Website \u4e2d\u6709\u90e8\u5206\u4e60\u9898\u89e3\u7b54\u3001\u8865\u5145\u9605\u8bfb\u6750\u6599\u3001Verilog \u793a\u4f8b\u7b49\uff0c\u53ef\u4f9b\u53c2\u8003</li> </ul>"},{"location":"cs/system/digital_logic/note1/","title":"\u6570\u5b57\u903b\u8f91\u57fa\u7840","text":"<p> \u7ea6 1643 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p>"},{"location":"cs/system/digital_logic/note1/#_2","title":"\u6570\u5b57\u7cfb\u7edf\u4e0e\u7f16\u7801","text":""},{"location":"cs/system/digital_logic/note1/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u4e24\u79cd\u903b\u8f91\u7cfb\u7edf\uff1a</p> <ul> <li>\u7ec4\u5408\u903b\u8f91\uff08Combinational Logic\uff09\uff1a\u4efb\u610f\u65f6\u523b\u7684\u8f93\u51fa\u4ec5\u53d6\u51b3\u4e8e\u8be5\u65f6\u523b\u7684\u8f93\u5165</li> <li>\u65f6\u5e8f\u903b\u8f91\uff08Suquential Logic\uff09\uff1a\u4efb\u610f\u65f6\u523b\u7684\u8f93\u51fa\u65e2\u53d6\u51b3\u4e8e\u8be5\u65f6\u523b\u7684\u8f93\u5165\uff0c\u4e5f\u53d6\u51b3\u4e8e\u7535\u8def\u539f\u6765\u7684\u72b6\u6001<ul> <li>\u540c\u6b65\uff08Synchronous\uff09\uff1aState updated at discrete times</li> <li>\u5f02\u6b65\uff08Asynchronous\uff09\uff1aState updated at any time</li> </ul> </li> </ul> <p>\u6570\u5b57\u7cfb\u7edf\u4e0e\u7f16\u7801\u7684\u6982\u5ff5\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4ed4\u7ec6\u601d\u8003\u5c31\u53ef\u4ee5\u53d1\u73b0\u4e24\u8005\u7684\u4e0d\u540c\u4e4b\u5904\uff1a</p> <ul> <li>\u6570\u5b57\u7cfb\u7edf\uff08Number System\uff09\uff1a\u6307\u6570\u5b57\u7684\u4e0d\u540c\u8fdb\u5236\u7cfb\u7edf\uff0c\u5982\u5341\u8fdb\u5236\u3001\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236<ul> <li>\u6570\u5b57\u7cfb\u7edf\u7684\u524d\u5bfc <code>0</code> \u53ef\u4ee5\u7701\u7565</li> </ul> </li> <li>\u7f16\u7801\uff08Codes\uff09\uff1a\u8f83\u4e3a\u7075\u6d3b\uff0c\u53ea\u8981\u6c42\u4e00\u4e00\u6620\u5c04\u5373\u4e3a\u5408\u6cd5\u7f16\u7801<ul> <li>\u7f16\u7801\u7cfb\u7edf\u7684\u524d\u5bfc <code>0</code> \u4e0d\u80fd\u7701\u7565</li> </ul> </li> </ul>"},{"location":"cs/system/digital_logic/note1/#_4","title":"\u4f59\u4e09\u7801\u8865\u5145","text":"<p>\u4f59\u4e09\u7801\u7684\u4e00\u4e2a\u5173\u952e\u70b9\u5728\u4e8e\u5176\u89e3\u51b3\u4e86 BCD \u7801\u7684\u52a0\u51cf\u6cd5\u8fdb\u4f4d\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u660e\u767d\u4f59\u4e09\u7801\u505a\u4e86\u4ec0\u4e48\uff1a</p> BCD \u7801\u7684\u52a0\u6cd5\u793a\u4f8b <p></p>"},{"location":"cs/system/digital_logic/note1/#_5","title":"\u683c\u96f7\u7801\u8865\u5145","text":"<p>\u683c\u96f7\u7801\u7684\u4e00\u79cd\u7b80\u5355\u7c97\u66b4\u7684\u5199\u6cd5\uff0c\u662f\u901a\u8fc7\u300c\u955c\u50cf\u300d\u7684\u6280\u5de7\u6765\u500d\u589e\u5df2\u77e5\u7684\u683c\u96f7\u7f16\u7801\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u73b0\u5728\u6709 <code>0</code> - <code>3</code> \u7684\u683c\u96f7\u7801\uff0c\u5206\u522b\u662f <code>00</code>\uff0c<code>01</code>\uff0c<code>11</code>\uff0c<code>10</code>\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u589e\u6dfb\u4e00\u4f4d\u524d\u5bfc <code>0</code>\uff0c\u7136\u540e\u955c\u9762\u5bf9\u79f0\u5730\u4e66\u5199\u51fa\u5e26\u6709\u524d\u5bfc <code>1</code> \u7684 <code>4</code> - <code>7</code> \u7684\u683c\u96f7\u7801\u3002</p> <p>\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u7684 <code>0</code> - <code>7</code> \u7684\u683c\u96f7\u7801\u662f\uff1a<code>000</code>\uff0c<code>001</code>\uff0c<code>011</code>\uff0c<code>010</code>\uff0c<code>110</code>\uff0c<code>111</code>\uff0c<code>101</code>\uff0c<code>100</code></p>"},{"location":"cs/system/digital_logic/note1/#_6","title":"\u7ec4\u5408\u903b\u8f91\u57fa\u7840","text":""},{"location":"cs/system/digital_logic/note1/#_7","title":"\u5e03\u5c14\u4ee3\u6570\u8865\u5145\u516c\u5f0f","text":"<p>\u9999\u519c\u516c\u5f0f\uff08Shannon formula\uff09\uff1a</p> <p>\u57fa\u4e8e $X \\overline{X} = 0$ \u548c $X X = 1$ \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u516c\u5f0f\uff1a</p> <p>$$ x f( x, \\overline{x}, y,... ) = x f( 1, 0, y,... ) $$</p> <p>$$ \\overline{x} f( x, \\overline{x}, y,... ) = \\overline{x} f( 0, 1, y,... ) $$</p> <p>\u57fa\u4e8e $X + \\overline{X}Y = X + Y$ \u548c $X + XY = X$ \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u516c\u5f0f\uff08\u6216\u8005\u901a\u8fc7\u4e0a\u9762\u7684\u516c\u5f0f\u5bf9\u5076\u5f97\u5230\uff09\uff1a</p> <p>$$ x + f( x, \\overline{x}, y,... ) = x + f( 0, 1, y,... ) $$</p> <p>$$ \\overline{x} + f(  x, \\overline{x}, y,... ) = \\overline{x} + f( 1, 0, y,... ) $$</p> <p>\u903b\u8f91\u51fd\u6570\u5206\u89e3\uff08Shannon Expansion\uff09\uff1a</p> <p>$$ \\begin{aligned} F(x,\\overline{x},y,...) &amp; = xf_1(x,\\overline{x},y,...) + \\overline{x}f_2(x,\\overline{x},y,...) \\cr &amp; = xf_1(1,0,y,...) + \\overline{x}f_2(0,1,y,...) \\end{aligned} $$</p> <p>\u8fd9\u79cd\u5206\u89e3\u601d\u8def\u53ef\u4ee5\u5c06\u4efb\u4f55\u540c\u65f6\u542b\u6709 $x$ \u548c $\\overline{x}$ \u7684\u51fd\u6570\u8fdb\u884c\u5206\u89e3\uff0c\u5e76\u8f6c\u5316\u4e3a\u53ef\u4ee5\u5e94\u7528\u9999\u519c\u516c\u5f0f\u7684\u5f62\u5f0f\uff0c\u4ece\u800c\u5316\u7b80\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9\u4e0d\u542b $x$ \u6216 $\\overline{x}$ \u7684\u9879\u201c\u4e0e\u201d\u4e0a $(x+\\overline{x})$ \u6765\u5b9e\u73b0\u8be5\u8f6c\u5316\u3002</p> <p>\u540c\u6837\u7684\uff0c\u8be5\u516c\u5f0f\u4e5f\u6709\u5bf9\u5076\u5f62\u5f0f\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p> \u4e00\u4e2a\u6709\u8da3\u7684\u63a8\u8bba <p>$$ \\begin{aligned} f(x,y,z) &amp; = xyzf(1,1,1)+xy\\overline{z}f(1,1,0) \\cr &amp; + x\\overline{y}zf(1,0,1)+x\\overline{y}\\overline{z}f(1,0,0) \\cr &amp; + \\overline{x}yzf(0,1,1)+\\overline{x}y\\overline{z}f(0,1,0) \\cr &amp; + \\overline{x}\\overline{y}zf(0,0,1)+\\overline{x}\\overline{y}\\overline{z}f(0,0,0) \\end{aligned} $$</p>"},{"location":"cs/system/digital_logic/note1/#_8","title":"\u6807\u51c6\u5f62\u5f0f\u4e0e\u89c4\u8303\u5f62\u5f0f","text":"<ul> <li>\u6807\u51c6\u5f62\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5e03\u5c14\u8868\u8fbe\u5f0f\u5316\u7b80\u7684\u65b9\u5411\uff08\u4f46\u5176\u5f62\u5f0f\u5e76\u4e0d\u552f\u4e00\u786e\u5b9a\uff0c\u5373\u4e00\u4e2a\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6709\u591a\u4e2a\u6807\u51c6\u5f62\u5f0f\uff09</li> <li>\u89c4\u8303\u5f62\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u552f\u4e00\u786e\u5b9a\u7684\u8868\u8fbe\u5f62\u5f0f\uff08\u8fd9\u5bf9\u4e8e\u628a\u590d\u6742\u7684\u903b\u8f91\u8fd0\u7b97\u4ea4\u7531\u673a\u5668\u53bb\u5b8c\u6210\u662f\u5f88\u91cd\u8981\u7684\uff09</li> </ul> <p>SOP \u4e0e POS\uff1a</p> <p>\u4efb\u4f55\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u5316\u6210 SOP \u548c POS \u8fd9\u6837\u7684\u6807\u51c6\u5f62\u5f0f\u3002</p> <ul> <li>SOP\uff08Standard Sum-of-Products\uff09\u5373\u628a\u8868\u8fbe\u5f0f\u5199\u6210 <code>OR of AND</code> \u7684\u5f62\u5f0f\uff1b</li> <li>POS\uff08Standard Product-of-Sums\uff09\u5373\u628a\u8868\u8fbe\u5f0f\u5199\u6210 <code>AND of OR</code> \u7684\u5f62\u5f0f\uff1b</li> </ul> <p>SOM \u4e0e POM\uff1a</p> <p>SOM\uff08Sum of Minterms\uff09\u4e0e POM\uff08Product of Maxterms\uff09\u8574\u542b\u7740\u4e00\u79cd\u7cbe\u5de7\u7684\u5bf9\u79f0\u6027\uff0c\u5177\u4f53\u4f53\u73b0\u6709\uff1a</p> <ul> <li>SOM \u4e0e POM \u7684\u81ea\u7136\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u5173\u952e\u70b9\u5c31\u5728\u4e8e\u6211\u4eec\u5bf9 <code>1</code> \u548c <code>0</code> \u8c01\u662f\u4e3b\u4f53\u7684\u7406\u89e3\uff0c\u4e24\u8005\u7684\u63a8\u5bfc\u8fc7\u7a0b\u662f\u5b8c\u5168\u5bf9\u79f0\u7684</li> <li>SOM \u4e0e POM \u8fd8\u5b58\u5728\u4e00\u79cd\u53d6\u53cd\u7684\u5bf9\u79f0\u6027\uff0c\u6bd4\u5982\u5047\u8bbe $F(x,y,z)=\\sum_m(1,3,5,7)$ \uff0c\u5219\u6709 $\\overline{F}(x,y,z)=\\sum_m(0,2,4,6) = \\prod_M(1,3,5,7)$\uff0c\u4ee5\u53ca $F(x,y,z)=\\prod_M(0,2,4,6)$</li> </ul> <p>\u4efb\u4f55\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u5316\u6210 SOM \u548c POM \u8fd9\u6837\u7684\u89c4\u8303\u5f62\u5f0f\uff0c\u4ee5\u7531 SOP \u5f97\u5230 SOM \u4e3a\u4f8b\uff1a</p> <p>$$ \\begin{aligned} f &amp; = x + \\overline{x}\\overline{y} \\cr &amp; = x(y+\\overline{y}) + \\overline{x}\\overline{y} \\cr &amp; = xy + x\\overline{y} + \\overline{x}\\overline{y} \\end{aligned} $$</p>"},{"location":"cs/system/digital_logic/note1/#_9","title":"\u4e3b\u8574\u542b\u9879\u9009\u62e9\u89c4\u5219","text":"<p>\u4e3b\u8574\u542b\u9879\u9009\u62e9\u89c4\u5219\uff08Prime Implicant Selection Rule\uff09\u662f\u4e00\u79cd\u5361\u8bfa\u56fe\u4f18\u5316\u6b65\u9aa4\uff0c\u5176\u4e3b\u8981\u601d\u8def\u662f\u5c3d\u53ef\u80fd\u51cf\u5c11\u8574\u542b\u9879\u7684\u91cd\u5408\uff08overlap\uff09\uff1a</p> <ol> <li>\u627e\u5230\u6240\u6709\u4e3b\u8574\u542b\u9879\uff1b</li> <li>\u9009\u4e2d\u6240\u6709\u300c\u57fa\u672c\u4e3b\u8574\u542b\u9879\u300d\uff1b</li> <li>\u9009\u62e9\u5c3d\u91cf\u5c11\u7684\u975e\u57fa\u672c\u4e3b\u8574\u542b\u9879\u6765\u8986\u76d6\u6240\u6709\u6700\u5c0f\u9879\uff08\u6216\u6700\u5927\u9879\uff09\uff1b</li> </ol> Warning <p>\u8bf7\u6ce8\u610f\uff0c\u57fa\u672c\u4e3b\u8574\u542b\u9879\u4e5f\u662f\u4e3b\u8574\u542b\u9879\uff0c\u9700\u8981\u6ee1\u8db3\u300c\u6781\u5927\u300d\u8fd9\u4e2a\u7279\u5f81\u3002</p> <p>\u6211\u4eec\u5728\u505a\u9898\u7684\u65f6\u5019\uff0c\u5f80\u5f80\u4e0d\u4f1a\u6309\u90e8\u5c31\u73ed\u5730\u5148\u627e\u51fa\u6240\u6709\u4e3b\u8574\u542b\u9879\uff0c\u518d\u7b5b\u9009\u51fa\u57fa\u672c\u4e3b\u8574\u542b\u9879\u3002\u6211\u4eec\u5f80\u5f80\u76f4\u63a5\u5f00\u59cb\u6846\u9009\u57fa\u672c\u4e3b\u8574\u542b\u9879\u548c\u975e\u57fa\u672c\u4e3b\u8574\u542b\u9879\u3002\u6709\u65f6\u5019\u5bb9\u6613\u72af\u4e00\u4e9b\u5c0f\u9519\u8bef\uff0c\u6bd4\u5982\u8bef\u4f1a overlap \u7684\u5185\u6db5\uff0c\u4ece\u800c\u6846\u9009\u51fa\u4e86\u4e0d\u591f\u6781\u5927\u7684\u8574\u542b\u9879\uff1a</p> <p></p>"},{"location":"cs/system/digital_logic/note1/#_10","title":"\u7ecf\u5178\u7ec4\u5408\u7535\u8def\u8865\u5145","text":"<p>\u7f13\u51b2\u5668\uff08Buffer\uff09\uff1a$F=X$</p> <ul> <li>buffer \u53ef\u4ee5\u4f5c\u4e3a\u653e\u5927\u5668\uff0c\u63d0\u9ad8\u7535\u8def\u7684\u7535\u538b\u6c34\u5e73\uff08\u56de\u5fc6\u6570\u5b57\u4fe1\u53f7\u7684\u5bbd\u8fdb\u4e25\u51fa\uff09</li> <li>buffer \u53ef\u4ee5\u63d0\u9ad8\u7535\u8def\u8fd0\u884c\u7684\u901f\u5ea6</li> </ul> <p>\u4e09\u6001\u95e8\uff083-State Buffer\uff09</p> \u4e09\u6001\u95e8\u89e3\u51b3\u591a\u8def\u8f93\u51fa\u4e92\u8054\u95ee\u9898\uff08multiplexed output line\uff09\u7684\u4e00\u4e2a\u4f8b\u5b50 <p></p> <p>\u4f20\u8f93\u95e8\uff08Transmission Gate\uff09</p> <p>\u4f20\u8f93\u95e8\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u5f00\u5173\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a</p> <ul> <li>\u4f20\u8f93\u95e8\u4e0e\u4e09\u6001\u95e8\u5e76\u4e0d\u76f8\u540c\uff0c\u5c3d\u7ba1\u4e24\u8005\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u90fd\u53ef\u4ee5\u8d77\u5230\u5f00\u5173\u7684\u4f5c\u7528<ul> <li>\u5173\u4e8e\u4e24\u8005\u5177\u4f53\u6709\u4f55\u533a\u522b\uff0c\u6211\u6682\u65f6\u6ca1\u6709\u627e\u5230\u5f88\u5408\u9002\u7684\u7b54\u6848</li> </ul> </li> <li>\u4f20\u8f93\u95e8\u8fd9\u4e2a\u6982\u5ff5\u653e\u5728\u8fd9\u91cc\u4f3c\u4e4e\u5e76\u4e0d\u5408\u9002\uff0c\u4f46\u662f\u9a6c\u5fb7\u8001\u5e08\u8bb2\u89e3\u5230\u4e86\uff0c\u9042\u63d0\u4e00\u7b14</li> </ul> <p></p> <p>\u5f02\u6216\u95e8 \u540c\u6216\u95e8</p> <ul> <li>\u5f02\u6216\u548c\u540c\u6216\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u5947\u6821\u9a8c\u548c\u5076\u6821\u9a8c\u3002</li> <li>\u800c\u4e14\u89c2\u5bdf\u5176\u5361\u8bfa\u56fe\u7684\u5f62\u72b6\uff08\u68cb\u76d8\u5f62\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u4eec\u662f\u5929\u7136\u4f18\u5316\u7684\uff0c\u5373\u4e0d\u53ef\u4f18\u5316\u7684\u3002</li> </ul>"},{"location":"cs/system/digital_logic/note1/#_11","title":"\u903b\u8f91\u5408\u6210","text":"<p>\u903b\u8f91\u5408\u6210\uff08Logic Synthesis\uff09\u662f\u6240\u8bbe\u8ba1\u6570\u5b57\u7535\u8def\u7684\u9ad8\u62bd\u8c61\u7ea7\u8868\u8fbe\uff0c\u7ecf\u8fc7\u5316\u7b80\u3001\u4f18\u5316\u540e\uff0c\u8f6c\u6362\u5230\u903b\u8f91\u95e8\u7ea7\u522b\u7684\u7535\u8def\u8fde\u7ebf\u7f51\u8868\uff08netlist\uff09\u7684\u8fc7\u7a0b\u3002</p> <p>\u903b\u8f91\u5408\u6210\u662f\u7535\u5b50\u8bbe\u8ba1\u81ea\u52a8\u5316\uff08EDA\uff09\u4e2d\u7535\u8def\u8bbe\u8ba1\u7684\u4e00\u4e2a\u6b65\u9aa4\u3002</p> <p> <p></p> <p></p> <p>\u901a\u5e38\u901a\u8fc7\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\uff08HDL\uff09\u6765\u5b9e\u73b0\u7535\u8def\u7684\u9ad8\u7ea7\u62bd\u8c61\u3002\u4ee5 Verilog \u4e3a\u4f8b\uff0c\u903b\u8f91\u5408\u6210\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a behavioral description \u8f6c\u5316\u4e3a structural description \u7684\u8fc7\u7a0b\u3002</p> Verilog: Structural &amp; Behavioral Description <p>Structural Description:</p> <p></p> <p>Behavioral Description:</p> <p></p>"},{"location":"cs/system/digital_logic/note2/","title":"\u7ec4\u5408\u903b\u8f91\u8bbe\u8ba1","text":"<p> \u7ea6 2827 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p>"},{"location":"cs/system/digital_logic/note2/#_2","title":"\u57fa\u672c\u529f\u80fd\u5757","text":""},{"location":"cs/system/digital_logic/note2/#_3","title":"\u8bd1\u7801\u5668","text":"<p>\u8bd1\u7801\u5668\uff08Decoder\uff09\u80fd\u5c06\u4fe1\u606f\u4ece $n$ \u4e2a\u8f93\u5165\u8f6c\u6362\u4e3a $2^n$ \u4e2a\u6216\u66f4\u5c11\u7684\u552f\u4e00\u8f93\u51fa\u3002\u5177\u4f53\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u5462\uff1f\u8bd1\u7801\u5668\u5b9e\u9645\u4e0a\u662f\u5728\u679a\u4e3e $n$ \u4e2a\u8f93\u5165\u7684\u6240\u6709\u6392\u5217\u65b9\u5f0f\uff08\u5171 $2^n$ \u79cd\uff09\u3002\u66f4\u8fdb\u4e00\u6b65\u7684\uff0c\u8fd9\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u5728\u679a\u4e3e\u6700\u5c0f\u9879\uff08minterms\uff09\u3002\u6bd4\u5982 $3-to-8$ \u8bd1\u7801\u5668\uff0c\u5f53\u8f93\u5165\u4e3a\u67d0\u4e2a\u7279\u5b9a\u7ec4\u5408 <code>101</code> \u65f6\uff0c\u53ea\u6709\u76f8\u5e94\u7684\u8868\u793a <code>101</code>\uff08\u6216\u8005\u8bf4 $\\sum_m(5)$\uff09\u8fd9\u4e2a\u7ec4\u5408\u7684\u8f93\u51fa\u662f <code>1</code>\u3002</p> <p>\u5982\u4f55\u6784\u9020\u4e00\u4e2a $n-to-2^n$ \u8bd1\u7801\u5668\uff1f\u6211\u4eec\u7528\u9012\u5f52\u7684\u601d\u8def\u6765\u6c42\u89e3\uff1a</p> <ol> <li>\u8bbe $k=n$\uff1b</li> <li>\u5982\u679c $k$ \u4e3a\u5076\u6570\uff0c\u95ee\u9898\u5206\u89e3\u4e3a\u8bbe\u8ba1\u4e24\u4e2a $\\frac{k}{2}-to-2^{\\frac{k}{2}}$ \u8bd1\u7801\u5668\uff0c\u5e76\u5c06\u5b83\u4eec\u7528 $2^k$ \u4e2a\u4e0e\u95e8\u8fde\u63a5\u8d77\u6765\uff1b</li> <li>\u5982\u679c $k$ \u4e3a\u5947\u6570\uff0c\u95ee\u9898\u5206\u89e3\u4e3a\u8bbe\u8ba1\u4e00\u4e2a $\\frac{k-1}{2}-to-2^{\\frac{k-1}{2}}$ \u548c\u4e00\u4e2a $\\frac{k+1}{2}-to-2^{\\frac{k+1}{2}}$ \u8bd1\u7801\u5668\uff0c\u5e76\u5c06\u5b83\u4eec\u7528 $2^k$ \u4e2a\u4e0e\u95e8\u8fde\u63a5\u8d77\u6765\uff1b</li> <li>\u5bf9\u6bcf\u4e2a\u8bd1\u7801\u5668\u91cd\u590d\u7b2c\u4e8c\u6b65\uff0c\u76f4\u5230 $k=1$\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a $1-to-2$ \u8bd1\u7801\u5668\uff1b</li> </ol> \u6bd4\u5982\u8fd9\u4e2a $3-to-8$ \u8bd1\u7801\u5668 <p></p> <p>\u524d\u9762\u63d0\u5230\u8bd1\u7801\u5668\u672c\u8d28\u4e0a\u5b8c\u6210\u4e86\u679a\u4e3e\u6700\u5c0f\u9879\u7684\u5de5\u4f5c\uff0c\u5982\u679c\u6211\u4eec\u5728\u8bd1\u7801\u5668\u7684\u8f93\u51fa\u540e\u9762\u63a5\u4e0a\u6216\u95e8\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0 SOM \u7684\u903b\u8f91\u8868\u8fbe\u3002\u56e0\u4e3a SOM \u53ef\u4ee5\u8868\u8fbe\u4efb\u4f55\u7ec4\u5408\u903b\u8f91\uff0c\u6240\u4ee5\u8bd1\u7801\u5668\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4efb\u4f55\u7684\u7ec4\u5408\u903b\u8f91\u3002</p> <p>\u8bd1\u7801\u5668\u7684\u5e94\u7528\u6709\u5f88\u591a\uff0c\u6bd4\u5982\u8bbe\u8ba1\u52a0\u6cd5\u5668\u30017 \u6bb5\u6570\u7801\u7ba1\u7b49\u3002</p> \u52a0\u6cd5\u5668\u7528 7 \u6bb5\u6570\u7801\u7ba1\u663e\u793a BCD \u7801 <p></p> <p></p>"},{"location":"cs/system/digital_logic/note2/#_4","title":"\u7f16\u7801\u5668","text":"<p>\u7f16\u7801\u5668\uff08Encoder\uff09\u4e0e\u8bd1\u7801\u5668\u662f\u5bf9\u79f0\u7684\uff0c\u80fd\u5c06\u4fe1\u606f\u4ece $2^n$ \u4e2a\u6216\u66f4\u5c11\u7684\u8f93\u5165\u8f6c\u6362\u4e3a $n$ \u4e2a\u8f93\u51fa\u3002\u4f46\u548c\u8bd1\u7801\u5668\u4e0d\u540c\u7684\u662f\uff0c\u666e\u901a\u7f16\u7801\u5668\u5fc5\u987b\u8981\u6c42\u8f93\u5165\u662f one-hot \u7684\uff0c\u5373\u53ea\u5141\u8bb8\u5b58\u5728\u4e00\u4e2a\u8f93\u5165\u4e3a <code>1</code>\uff0c\u5426\u5219\u65e0\u6cd5\u5224\u65ad\u5f97\u51fa\u552f\u4e00\u8f93\u51fa\u3002\u6b64\u5916\uff0c\u7f16\u7801\u5668\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u548c\u5177\u4f53\u7535\u8def\u5b9e\u73b0\uff0c\u901a\u5e38\u90fd\u6bd4\u8bd1\u7801\u5668\u66f4\u4e3a\u590d\u6742\u3002</p> <p>\u8bd1\u7801\u5668\u548c\u7f16\u7801\u5668</p> <p>\u8bd1\u7801\u5668\u548c\u7f16\u7801\u5668\u5728\u539f\u7406\u4e0a\u662f\u5bf9\u79f0\u7684\uff0c\u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e\u4ea4\u6362\u4e86 $n$ \u7aef\u548c $2^n$ \u7aef\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c$2^n$ \u7aef\u6bcf\u6b21\u53ea\u5141\u8bb8\u4e00\u4e2a\u4fe1\u53f7\u662f\u6d3b\u52a8\u7684\uff08\u4e00\u822c\u6765\u8bf4\u662f <code>1</code>\uff0c\u5176\u4ed6\u4fe1\u53f7\u5219\u4e3a <code>0</code>\uff09\uff0c\u8fd9\u662f\u56e0\u4e3a $2^n$ \u7aef\u7684\u542b\u4e49\u662f $n$ \u7aef\u4fe1\u53f7\u7684\u67d0\u4e2a\u6392\u5217\u65b9\u5f0f\uff08\u6700\u5c0f\u9879\uff09\uff0c\u6bd4\u5982 $2^n$ \u7aef\u7684 <code>101</code> \u4e0e $n$ \u7aef\u7684 <code>1</code> <code>0</code> <code>1</code> \u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002</p> $10-to-4$ \u7f16\u7801\u5668\u5b9e\u73b0\u5341\u8fdb\u5236\u8f6c BCD \u7801 <p></p> <p></p> <p>\u4f18\u5148\u7f16\u7801\u5668\uff08Priority Encoder\uff09\u53ef\u4ee5\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002\u5728\u4f18\u5148\u7f16\u7801\u5668\u4e2d\uff0c\u5982\u679c\u591a\u4e2a\u8f93\u5165\u5904\u5728\u6d3b\u52a8\u72b6\u6001\uff08\u8f93\u5165\u4e3a <code>1</code>\uff09\uff0c\u5219\u4f18\u5148\u7ea7\u9ad8\u7684\u8f93\u5165\u5c06\u4f18\u5148\uff0c\u800c\u4f18\u5148\u7ea7\u4f4e\u7684\u8f93\u5165\u5c06\u6210\u4e3a\u4e0d\u5b9a\u9879\uff08Don't Cares\uff09\u3002</p> \u4f18\u5148\u7f16\u7801\u5668\u793a\u4f8b <p></p>"},{"location":"cs/system/digital_logic/note2/#_5","title":"\u591a\u8def\u590d\u7528\u5668","text":"<p>\u591a\u8def\u590d\u7528\u5668\uff08Multiplexer\uff0c\u6216\u79f0\u4e3a\u6570\u636e\u9009\u62e9\u5668\uff09\u53ef\u4ee5\u901a\u8fc7 $n$ \u4e2a\u63a7\u5236\u4fe1\u53f7\u8f93\u5165\uff0c\u5bf9 $2^n$ \u4e2a\u6216\u66f4\u5c11\u7684\u6570\u636e\u4fe1\u53f7\u8f93\u5165\u505a\u9009\u62e9\uff0c\u5e76\u5f97\u5230 $1$ \u4e2a\u9009\u62e9\u7ed3\u679c\u8f93\u51fa\u3002</p> <p>MUX \u548c\u8bd1\u7801\u5668\u4e00\u6837\uff0c\u90fd\u53ef\u4ee5\u8868\u8fbe\u4efb\u610f\u7ec4\u5408\u903b\u8f91\u3002\u8fd9\u662f\u56e0\u4e3a MUX \u7684\u5b9e\u73b0\u5185\u90e8\u5c31\u5b58\u5728\u4e00\u4e2a\u8bd1\u7801\u5668\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 MUX \u7684\u63a7\u5236\u7aef\uff08\u4e5f\u5c31\u662f\u8bd1\u7801\u5668\uff09\u7528\u4f5c\u8f93\u5165\uff0c\u5c06\u7ec4\u5408\u903b\u8f91\u7684\u771f\u503c\u8868\u5199\u5165 MUX \u7684\u9009\u9879\u7aef\u8fdb\u884c\u9009\u62e9\uff0c\u5c31\u53ef\u4ee5\u8868\u8fbe\u4efb\u4f55\u7ec4\u5408\u903b\u8f91\u3002</p> <p>\u901a\u5e38\uff0c\u4e00\u4e2a $2^n-to-1$ MUX \u7684\u7ec4\u6210\u4e3a\uff1a</p> <ul> <li>\u4e00\u4e2a $n-to-2^n$ \u8bd1\u7801\u5668\uff08MUX \u5229\u7528\u4e86\u8bd1\u7801\u5668\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\u4e3a <code>1</code> \u7684\u7279\u6027\uff0c\u4ece\u800c\u5b9e\u73b0\u9009\u62e9\u529f\u80fd\uff09\uff1b</li> <li>$2^n \\times 2$ AND-OR\uff1b</li> </ul> \u6bd4\u5982\u8fd9\u4e2a $4-to-1$ MUX <p></p> <p>\u5f53\u7136\uff0c\u591a\u8def\u590d\u7528\u5668\u4e0d\u6b62\u53ef\u4ee5\u9009\u62e9\u5355\u4e2a\u6570\u636e\u4fe1\u53f7\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e00\u7ec4\u6570\u636e\u4fe1\u53f7\uff08\u6216\u79f0\u5411\u91cf\u5f62\u5f0f\u7684\u6570\u636e\u4fe1\u53f7\uff09\uff0c\u8fd9\u7ec4\u4fe1\u53f7\u7531 $m$ \u4e2a\u5355\u4e2a\u6570\u636e\u4fe1\u53f7\u7ec4\u6210\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u7528\u540c\u4e00\u4e2a\u8bd1\u7801\u5668\u6765\u63a7\u5236 $m$ \u4e2a $2^n \\times 2$ AND-OR\u3002</p> \u6bd4\u5982\u8fd9\u4e2a $m-$wide $4-to-1$ MUX <p></p> <p>\u9664\u4e86\u591a\u8def\u590d\u7528\u5668\uff0c\u9009\u62e9\u5668\u8fd8\u6709\u5176\u4ed6\u7684\u7535\u8def\u5b9e\u73b0\u65b9\u6cd5\uff0c\u6bd4\u5982\u4e09\u6001\u95e8\u548c\u4f20\u8f93\u95e8\u3002</p> Three-state logic in place of AND-ORDistributing the decoding across the three-state drivers <p></p> <p></p> <p>\u8fd9\u4e2a\u7535\u8def\u8bbe\u8ba1\u76f8\u5f53\u4e8e\uff0c\u5148\u8fdb\u884c\u56db\u9009\u4e8c\uff0c\u518d\u8fdb\u884c\u4e8c\u9009\u4e00\uff0c\u4ece\u800c\u5b9e\u73b0\u56db\u9009\u4e00\u3002</p> <p>MUX \u7684\u7535\u8def\u5b9e\u73b0\u6709\u4e00\u79cd\u4f18\u5316\u65b9\u6848\uff0c\u5c31\u662f\u901a\u8fc7\u628a\u4e00\u90e8\u5206\u7684\u63a7\u5236\u7aef\u7684\u8f93\u5165\u5199\u5230\u9009\u9879\u7aef\u4f5c\u4e3a\u5e38\u91cf\u6765\u88ab\u9009\u62e9\uff0c\u4ece\u800c\u7b80\u5316\u5143\u4ef6\uff08\u964d\u7ef4\uff09\u3002\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u770b\u770b\u600e\u4e48\u5b9e\u73b0\uff1a</p> MUX \u7684\u964d\u7ef4\u4f18\u5316 <p></p> <p></p> <p></p> <p>\u6ce8\uff1a\u4e0a\u56fe\u6709\u8bef\uff0c\u5e94\u8be5\u662f $4-to-1$ MUX\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u903b\u8f91\u8868\u8fbe\u5f0f\u6765\u66f4\u6df1\u523b\u5730\u7406\u89e3\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u6837\u505a\uff08\u4ee5 $Y$ \u4e3e\u4f8b\uff09\uff1a</p> <p>$$ \\begin{aligned} Y &amp; = \\overline{A}\\overline{B}C+\\overline{A}B\\overline{C}+A\\overline{B}C+AB\\overline{C} \\cr &amp; = \\overline{A}\\overline{B}\\overline{C}\\cdot 0+\\overline{A}\\overline{B}C\\cdot 1+\\overline{A}B\\overline{C}\\cdot 1+\\overline{A}BC\\cdot 0+A\\overline{B}\\overline{C}\\cdot 0+A\\overline{B}C\\cdot 1+AB\\overline{C}\\cdot 1+ABC\\cdot 0 \\cr &amp; = \\overline{A}\\overline{B}(\\overline{C}\\cdot 0+C\\cdot 1)+\\overline{A}B(\\overline{C}\\cdot 1+C\\cdot 0)+A\\overline{B}(\\overline{C}\\cdot 0+C\\cdot 1)+AB(\\overline{C}\\cdot 1+C\\cdot 0) \\end{aligned} $$</p> <p>\u8bd1\u7801\u5668\u4e0e\u591a\u8def\u590d\u7528\u5668</p> <p>\u8bd1\u7801\u5668\u548c\u591a\u8def\u590d\u7528\u5668\u7684\u539f\u7406\u4e0e\u5b9e\u73b0\u90fd\u6709\u76f8\u4f3c\u4e4b\u5904\u3002\u5982\u679c\u6211\u4eec\u8981\u5b9e\u73b0\u4efb\u4f55\u7ec4\u5408\u903b\u8f91\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4f7f\u7528\u8bd1\u7801\u5668\u4f1a\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u8981\u628a\u679a\u4e3e\u51fa\u7684\u6700\u5c0f\u9879\u7528\u4e00\u4e2a\u6216\u95e8\u8fde\u63a5\u5373\u53ef\uff0c\u800c MUX \u5219\u9700\u8981\u7528\u5f88\u591a\u7684\u4e0e\u95e8\u6765\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\u3002\u5f53\u7136\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b MUX \u53ef\u4ee5\u8fdb\u884c\u964d\u7ef4\u4f18\u5316\uff0c\u6709\u65f6\u5019\u4f1a\u6bd4\u8bd1\u7801\u5668\u6548\u679c\u66f4\u597d\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u6837\u7684\u6bd4\u8f83\u4e0d\u7b97\u516c\u5e73\uff0c\u56e0\u4e3a\u5b83\u4eec\u867d\u7136\u5f88\u76f8\u4f3c\uff0c\u4f46\u8bbe\u8ba1\u7684\u76ee\u7684\u662f\u5dee\u522b\u5f88\u5927\u7684\u3002\u8bd1\u7801\u5668\u7528\u4e8e\u8bd1\u7801\uff08interpret a coded data\uff09\uff0c\u800c MUX \u7528\u4e8e\u9009\u62e9\u5e76\u4f20\u8f93\u6570\u636e\uff08select and transmit data\uff09\u3002\u867d\u7136 MUX \u4e2d\u7ecf\u5e38\u7528\u8bd1\u7801\u5668\u6765\u4f5c\u4e3a\u63a7\u5236\u7aef\uff0c\u4f46 MUX \u4e2d\u7684\u8bd1\u7801\u5668\u548c\u4e00\u4e2a\u6b63\u5e38\u7684\u8bd1\u7801\u5668\u7684\u7528\u9014\u76f8\u53bb\u751a\u8fdc\uff1aMUX \u4e2d\u7684\u8bd1\u7801\u5668\u53ea\u7528\u4e8e\u63a7\u5236\uff0c\u5b83\u7528 $n$ \u4e2a\u8f93\u5165\u4fe1\u53f7\u6765\u8868\u793a\u9009\u62e9 $n$ \u4e2a\u5f85\u9009\u9879\u4e2d\u7684\u54ea\u4e00\u9879\uff0c\u8bd1\u7801\u5668\u4fe1\u53f7\u672c\u8eab\u5e76\u4e0d\u4f20\u9012\u9664\u4e86\u201c\u9009\u62e9\u201d\u4e4b\u5916\u7684\u4efb\u4f55\u610f\u4e49\uff1b\u800c\u5728\u4e00\u4e2a\u6b63\u5e38\u7684\u8bd1\u7801\u5668\u4e2d\uff0c$n$ \u4e2a\u8f93\u5165\u663e\u7136\u662f\u6709\u610f\u4e49\u7684\uff0c\u5b83\u4eec\u5c31\u662f\u8bd1\u7801\u5668\u6240\u201c\u8bd1\u201d\u7684\u201c\u7801\u201d\u3002\u8fd9\u5c31\u662f\u4e24\u8005\u7684\u533a\u522b\u3002</p>"},{"location":"cs/system/digital_logic/note2/#_6","title":"\u7b97\u672f\u903b\u8f91\u7535\u8def","text":""},{"location":"cs/system/digital_logic/note2/#_7","title":"\u4ece\u5168\u52a0\u5668\u5230\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668","text":"<p>\u9996\u5148\u6211\u4eec\u5148\u628a\u6ce8\u610f\u529b\u653e\u5728\u4e00\u4e2a\u5168\u52a0\u5668\u4e0a\u3002\u8981\u628a\u591a\u4e2a\u5168\u52a0\u5668\u8fde\u63a5\u8d77\u6765\u5f62\u6210\u80fd\u591f\u8ba1\u7b97\u66f4\u5927\u6570\u636e\u7684\u52a0\u6cd5\u5668\uff0c\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5904\u7406\u597d\u5168\u52a0\u5668\u4e4b\u95f4\u300c\u8fdb\u4f4d\u300d\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5168\u52a0\u5668\u800c\u8a00\uff0c\u5b83\u5411\u540e\u4e00\u4e2a\u5168\u52a0\u5668\u7684\u8fdb\u4f4d\uff08$C$\uff0ccarry\uff09\u6709\u4e24\u4e2a\u6765\u6e90\uff0c\u4e00\u4e2a\u662f\u81ea\u8eab\u52a0\u6cd5\u4ea7\u751f\u7684\u8fdb\u4f4d\uff0c\u8bb0\u4e3a $G$\uff08generate\uff09\uff0c\u53e6\u4e00\u4e2a\u662f\u524d\u4e00\u4e2a\u5168\u52a0\u5668\u4f20\u9012\u8fc7\u6765\u7684\u8fdb\u4f4d\uff0c\u8bb0\u4e3a $P$\uff08propagate\uff09\uff0c\u6211\u4eec\u6709\uff1a</p> <p>$$ C_{i+1} = A_i B_i + (A_i \\oplus B_i) C_i = G_i + P_i \\cdot C_i $$</p> <p>\u5177\u4f53\u7535\u8def\u5b9e\u73b0\u5982\u4e0b\u56fe\uff1a</p> <p>\u6700\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u628a\u5168\u52a0\u5668\u76f4\u63a5\u94fe\u5f0f\u8fde\u63a5\uff0c\u5373\u76f4\u63a5\u628a\u524d\u4e00\u4e2a\u5168\u52a0\u5668\u7684\u8fdb\u4f4d\u8fde\u63a5\u5230\u540e\u4e00\u4e2a\u5168\u52a0\u5668\u4e0a\uff0c\u8fd9\u6837\u7684\u505a\u6cd5\u53eb\u505a\u884c\u6ce2\u52a0\u6cd5\u5668\uff08ripple-carry adder\uff09\u3002\u884c\u6ce2\u52a0\u6cd5\u5668\u6700\u5927\u7684\u5f0a\u7aef\u5728\u4e8e\uff0c\u540e\u4e00\u4e2a\u5168\u52a0\u5668\u9700\u8981\u7b49\u5f85\u524d\u4e00\u4e2a\u5168\u52a0\u5668\u7684\u8ba1\u7b97\u5b8c\u6bd5\u540e\uff0c\u624d\u80fd\u628a\u8fdb\u4f4d\u4f20\u9012\u8fc7\u6765\uff0c\u5f53\u5904\u7406\u8f83\u5927\u6570\u636e\u7684\u52a0\u6cd5\u65f6\uff0c\u884c\u6ce2\u52a0\u6cd5\u5668\u7684\u6548\u7387\u5c31\u592a\u4f4e\u4e86\u3002</p> <p>\u6240\u4ee5\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u63d0\u524d\u628a\u8fdb\u4f4d\u4f20\u9012\u4e0b\u53bb\uff0c\u800c\u4e0d\u9700\u8981\u7b49\u5f85\u524d\u9762\u7684\u5168\u52a0\u5668\u5b8c\u5168\u8ba1\u7b97\u5b8c\u6bd5\u5462\uff1f\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff08carry-lookahead adder, or CLA\uff09\u5c31\u662f\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u3002\u90a3\u4e48\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u662f\u600e\u4e48\u505a\u5230\u63d0\u524d\u628a\u8fdb\u4f4d\u4f20\u9012\u4e0b\u53bb\u7684\u5462\uff1f\u8ba9\u6211\u4eec\u518d\u628a\u6ce8\u610f\u529b\u8f6c\u5411\u516c\u5f0f\u63a8\u5bfc\uff1a</p> <p>$$ C_1 = G_0 + P_0 C_0 $$</p> <p>$$ \\begin{aligned} C_2 &amp; = G_1 + P_1 C_1 = G_1 + P_1 (G_0 + P_0 C_0) \\cr &amp; = G_1 + P_1 G_0 + P_1 P_0 C_0 \\end{aligned} $$</p> <p>$$ \\cdots $$</p> <p>$$ C_4 = G_3 + P_3 G_2 + P_3 P_2 G_1 + P_3 P_2 P_1 G_0 + P_3 P_2 P_1 P_0 C_0 $$</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c$C_4$ \u4e0d\u518d\u4f9d\u8d56\u4e8e $C_3$\uff0c\u800c\u662f\u76f4\u63a5\u4f9d\u8d56\u4e8e $C_0$\u3002\u6211\u4eec\u53ea\u9700\u8981\u5e76\u884c\u8ba1\u7b97\u6bcf\u4e2a\u5168\u52a0\u5668\u7684 $P$ \u548c $G$\uff0c\u7136\u540e\u628a $C_0$ \u4e0e\u5b83\u4eec\u7ed3\u5408\u5373\u53ef\u8ba1\u7b97\u5f97\u51fa\u6bcf\u4e2a\u5168\u52a0\u5668\u5411\u540e\u4f20\u9012\u7684\u8fdb\u4f4d $C_{i+1} = G_{0\\sim i} + P_{0\\sim i} C_0$\u3002</p> <p>\u5177\u4f53\u7535\u8def\u5b9e\u73b0\u5982\u4e0b\u56fe\uff0c\u6211\u4eec\u53d1\u73b0\u6240\u6709\u5168\u52a0\u5668\u7684 $P$ \u548c $G$ \u90fd\u662f\u5e76\u884c\u8ba1\u7b97\u7684\uff0c\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u4f4d\u7684\u8ba1\u7b97\uff0c\u53ea\u9700\u8981\u989d\u5916\u6d88\u8017 $C_0$ \u7ecf\u8fc7\u4e00\u4e2a\u4e0e\u95e8\u548c\u4e00\u4e2a\u6216\u95e8\u7684\u65f6\u95f4\uff1a</p> <p>Source: https://en.wikipedia.org/wiki/Carry-lookahead_adder</p> <p>\u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u867d\u7136\u89e3\u51b3\u4e86\u8fdb\u4f4d\u5ef6\u8fdf\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4ecd\u7136\u65e0\u6cd5\u5927\u89c4\u6a21\u4f7f\u7528\uff0c\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u7535\u8def\u4e2d\u7684\u591a\u8f93\u5165\u4e0e\u95e8\u548c\u6216\u95e8\uff0c\u5982\u679c\u6211\u4eec\u8981\u8fde\u63a5 $n$ \u4e2a\u5168\u52a0\u5668\uff0c\u90a3\u4e48\u5c31\u9700\u8981 $n+1$ \u8f93\u5165\u7684\u4e0e\u95e8\u548c\u6216\u95e8\uff0c\u8fd9\u662f\u4e0d\u73b0\u5b9e\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e00\u4e2a 4-bit \u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u4f5c\u4e3a\u4e00\u4e2a\u6a21\u5757\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u7ec4\u5efa\u66f4\u5927\u7684\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u3002</p> <p>$$ C_4 = G_{0\\sim 3} + P_{0\\sim 3} C_0 $$</p> <p>$$ C_8 = G_{4\\sim 7} + P_{4\\sim 7} C_4 $$</p> <p>$$ \\cdots $$</p> <p>$$ \\begin{aligned} C_{16} &amp; = G_{12\\sim 15} + P_{12\\sim 15} C_12 \\cr &amp; = G_{12\\sim 15} + P_{12\\sim 15} G_{8\\sim 11} + P_{12\\sim 15} P_{8\\sim 11} G_{4\\sim 7} \\cr &amp; + P_{12\\sim 15} P_{8\\sim 11} P_{4\\sim 7} G_{0\\sim 3} + P_{12\\sim 15} P_{8\\sim 11} P_{4\\sim 7} P_{0\\sim 3} C_0 \\end{aligned} $$</p> <p>\u6211\u4eec\u60ca\u8bb6\u5730\u53d1\u73b0\uff0c\u8fd9\u4e2a $C_{16}$ \u8868\u8fbe\u5f0f\u7684\u5199\u6cd5\u548c\u4e4b\u524d\u63a8\u5bfc\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u65f6 $C_4$ \u7684\u5199\u6cd5\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u53ea\u9700\u8981\u505a\u4e00\u4e9b\u4e0b\u6807\u53d8\u6362\u5373\u53ef\u3002\u8fd9\u5c31\u542f\u53d1\u6211\u4eec\u5982\u4f55\u7ec4\u5efa\u66f4\u5927\u89c4\u6a21\u7684\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff1a\u6211\u4eec\u628a\u82e5\u5e72\u4e2a\u5c0f\u7684\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u8fde\u63a5\u8d77\u6765\uff0c\u5c31\u50cf\u6211\u4eec\u5f53\u521d\u628a\u82e5\u5e72\u4e2a\u5168\u52a0\u5668\u8fde\u63a5\u6210\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u4e00\u6837\uff01</p> 4-bit CLA16-bit CLA64-bit CLA <p> </p> <p> </p> <p> </p> <p>Source: https://en.wikipedia.org/wiki/Lookahead_carry_unit</p>"},{"location":"cs/system/digital_logic/note2/#_8","title":"\u52a0\u51cf\u6cd5\u7684\u6ea2\u51fa\u68c0\u67e5","text":"<p>\u5e38\u89c1\u7684\u52a0\u51cf\u6cd5\u6ea2\u51fa\u60c5\u51b5\u662f\uff0c\u540c\u53f7\u76f8\u52a0\u548c\u5f02\u53f7\u76f8\u51cf\u3002\u4e0b\u9762\u7ed9\u51fa\u4e24\u79cd\u6700\u7b80\u5355\u7684\u6ea2\u51fa\u68c0\u67e5\uff08overflow detection\uff09\uff1a</p> <ul> <li>\u68c0\u67e5\u8f93\u51fa\u7684\u7b26\u53f7\u4f4d\u548c\u52a0\u6570\u6216\u51cf\u6570\uff08top operand\uff09\u7684\u7b26\u53f7\u4f4d\u662f\u5426\u4e00\u81f4</li> <li>\u5bf9\u4e8e $n$ \u4f4d\u52a0\u51cf\u6cd5\uff0c\u6ea2\u51fa\u53ef\u4ee5\u8868\u793a\u4e3a $V=C_n\\oplus C_{n-1}$\uff0c$V$ \u4e3a<code>1</code>\u8868\u793a\u6ea2\u51fa</li> </ul>"},{"location":"cs/system/digital_logic/note2/#_9","title":"\u5176\u4ed6\u7b97\u6570\u51fd\u6570","text":"<ul> <li>\u81ea\u589e\uff08incrementing\uff09\u4e0e\u81ea\u51cf\uff08decrementing\uff09<ul> <li>\u81ea\u589e\u4e0e\u81ea\u51cf\u8fd0\u7b97\u53ef\u4ee5\u901a\u8fc7\u5bf9\u52a0\u51cf\u6cd5\u5668\u8fdb\u884c\u6536\u7f29\uff08contraction\uff09\u5f97\u5230</li> <li>\u5177\u4f53\u800c\u8a00\u5c31\u662f\u628a\u52a0\u51cf\u6cd5\u5668\u7684\u5176\u4e2d\u4e00\u4e2a\u8f93\u5165\u8bbe\u4e3a\u5e38\u91cf\uff08\u81ea\u589e\u81ea\u51cf\u7684\u6b65\u957f\uff09</li> </ul> </li> <li>\u4e58\u6cd5\u4e0e\u9664\u6cd5<ul> <li>\u4e0e $2^n$ \u7684\u4e58\u6570\u662f\u6700\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u901a\u8fc7\u79fb\u4f4d\u5c31\u53ef\u4ee5\u5b9e\u73b0</li> <li>\u4efb\u610f\u5e38\u6570\u7684\u4e58\u9664\u7684\u4e00\u79cd\u5b9e\u73b0\u601d\u8def\u662f\uff0c\u62c6\u5206\u6210\u4e0e\u82e5\u5e72\u4e2a $2^n$ \u7684\u4e58\u9664</li> </ul> </li> <li>\u96f6\u6269\u5c55\uff08zero fill\uff09\u4e0e\u7b26\u53f7\u4f4d\u6269\u5c55\uff08extension\uff09</li> </ul>"},{"location":"cs/system/digital_logic/note3/","title":"\u65f6\u5e8f\u903b\u8f91\u8bbe\u8ba1","text":"<p> \u7ea6 1976 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"},{"location":"cs/system/digital_logic/note3/#_2","title":"\u65f6\u5e8f\u903b\u8f91\u7406\u89e3","text":"<p>\u4ee5\u4e0b\u662f Wikipedia \u5bf9\u4e8e\u65f6\u5e8f\u903b\u8f91\u3001\u540c\u6b65\u4e0e\u5f02\u6b65\u7684\u5b9a\u4e49\uff1a</p> <p>Sequential logic is a type of logic circuit whose output depends on the present value of its input signals and on the sequence of past inputs. That is, sequential logic has state (memory) while combinational logic does not.</p> <p>Digital sequential logic circuits are divided into synchronous and asynchronous types. In synchronous sequential circuits, the state of the device changes only at discrete times in response to a clock signal. In asynchronous circuits the state of the device can change at any time in response to changing inputs.</p> <p>\u5f88\u81ea\u7136\u5730\uff0c\u5f02\u6b65\u65f6\u5e8f\u903b\u8f91\u662f input-driven \u7684\uff0c\u6bcf\u5f53\u8f93\u5165\u53d1\u751f\u53d8\u5316\uff0c\u5c31\u8981\u8fdb\u884c\u72b6\u6001\u7684\u66f4\u65b0\u3002\u4f46\u662f\uff0c\u5f02\u6b65\u65f6\u5e8f\u903b\u8f91\u7684\u5f0a\u7aef\u5728\u4e8e\uff0c\u5f53\u8f93\u5165\u5305\u542b\u591a\u4e2a\u53d8\u91cf\u800c\u5b83\u4eec\u7684\u62b5\u8fbe\u6709\u5148\u540e\u533a\u5206\u7684\u65f6\u5019\uff0c\u7535\u8def\u53ef\u80fd\u4f1a\u504f\u79bb\u9884\u671f\u800c\u8fdb\u5165\u9519\u8bef\u7684\u72b6\u6001\u3002</p> <p>\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u65f6\u949f\u4fe1\u53f7\u6765\u540c\u6b65\uff08synchronize, or clock\uff09\u6240\u6709\u8f93\u5165\u53d8\u91cf\u4ea7\u751f\u4f5c\u7528\u7684\u65f6\u95f4\uff0c\u5373\u4f7f\u8f93\u5165\u53d8\u91cf\u5148\u540e\u62b5\u8fbe\uff0c\u5b83\u4eec\u4e5f\u5f97\u7b49\u5f85\u65f6\u949f\u4fe1\u53f7\u6765\u4e34\u65f6\u624d\u80fd\u53d1\u751f\u4f5c\u7528\uff0c\u4ece\u800c\u66f4\u65b0\u7535\u8def\u7684\u72b6\u6001\u3002</p> <p>\u5de5\u7a0b\u5e94\u7528\u4e2d\uff0c\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u5f80\u5f80\u66f4\u4e3a\u666e\u904d\uff0c\u56e0\u4e3a\u5176\u8bbe\u8ba1\u7b80\u5355\u800c\u4e14\u9c81\u68d2\u6027\u5f3a\u3002\u5f02\u6b65\u65f6\u5e8f\u903b\u8f91\u7684\u8bbe\u8ba1\u901a\u5e38\u66f4\u4e3a\u590d\u6742\uff0c\u591a\u7528\u4e8e\u9700\u8981\u66f4\u9ad8\u66f4\u65b0\u901f\u5ea6\u7684\u573a\u5408\uff08\u4e0d\u50cf\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u90a3\u6837\u53d7\u9650\u4e8e\u65f6\u949f\u4fe1\u53f7\u7684\u9891\u7387\uff09\u3002</p> \u65f6\u5e8f\u903b\u8f91\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u5f02\u6b65\u65f6\u5e8f\u903b\u8f91 <p> </p> <p> </p> <p> </p>"},{"location":"cs/system/digital_logic/note3/#_3","title":"\u4ece\u9501\u5b58\u5668\u5230\u89e6\u53d1\u5668","text":"Buffer as a Storage$SR$ Latch with NOR Gates$\\overline{S} \\overline{R}$ Latch with NAND Gates$SR$ Latch with Control Input$D$ Latch <p>\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u5ef6\u8fdf\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u4fe1\u606f\u5b58\u50a8\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5b58\u5728 $t_G$ \u5ef6\u8fdf\u7684 buffer \u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u4fe1\u606f\u5728 $t_G$ \u8fd9\u6bb5\u65f6\u95f4\u5185\u662f\u4e0d\u53d8\u7684\uff0c\u5373\u88ab\u77ed\u6682\u5730\u5b58\u50a8\u4e86\uff08\u5982\u56fe a\uff09\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u628a buffer \u7684\u8f93\u51fa\u548c\u8f93\u5165\u76f8\u8fde\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4fe1\u606f\u7684\u957f\u4e45\u5b58\u50a8\uff08\u5982\u56fe bc\uff09\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u4fe1\u606f\u5b58\u50a8\u5355\u5143\u800c\u8a00\uff0c\u4fee\u6539\u5b58\u50a8\u7684\u4fe1\u606f\u5185\u5bb9\u662f\u4e0d\u65b9\u4fbf\u7684\u3002</p> <p>\u6211\u4eec\u628a\u7ec4\u6210 buffer \u7684\u975e\u95e8\uff08\u5982\u56fe d\uff09\u66ff\u6362\u6210\u6216\u975e\u95e8\u6216\u8005\u4e0e\u975e\u95e8\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u4fee\u6539\u5b58\u50a8\u7684\u4fe1\u606f\u5185\u5bb9\uff0c\u8fd9\u5c31\u662f $SR$ Latch\u3002\u7a0d\u52a0\u601d\u8003\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u4e00\u4e2a $SR$ Latch \u5176\u5b9e\u662f\u5f02\u6b65\u7684\uff0c\u56e0\u800c\u8f93\u5165 S \u548c R \u7684\u5148\u540e\u62b5\u8fbe\u53ef\u80fd\u5bfc\u81f4\u7535\u8def\u504f\u79bb\u9884\u671f\u800c\u8fdb\u5165\u9519\u8bef\u7684\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u4e00\u4e2a\u4f7f\u80fd\u63a7\u5236\u7aef C \u6765\u786e\u4fdd S \u548c R \u90fd\u5230\u4f4d\u65f6\u518d\u4f7f\u80fd\uff0c\u8fd9\u5c31\u662f $SR$ Latch with Control Input\uff08\u6ce8\u610f\u8fd9\u5e76\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u540c\u6b65\uff0c\u5f53 C \u7f6e<code>1</code>\u65f6\u5176\u4ecd\u7136\u662f\u5f02\u6b65\u7684\uff09\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a Latch \u4ecd\u7136\u5b58\u5728\u4e00\u79cd\u672a\u5b9a\u4e49\u72b6\u6001\uff0c\u5373 C\u3001S \u548c R \u5747\u7f6e<code>1</code>\u3002</p> <p>\u5bf9\u4e8e $SR$ Latch with Control Input \u800c\u8a00\uff0c\u7528 S \u548c R \u5747\u7f6e<code>0</code>\u6765\u8868\u793a\u4fdd\u6301\u6001\u662f\u591a\u4f59\u7684\uff08\u56e0\u4e3a C \u7f6e<code>0</code>\u5373\u53ef\u8868\u793a\u4fdd\u6301\u6001\uff09\uff0c\u800c\u4e14\u4e0a\u8ff0\u7684\u672a\u5b9a\u4e49\u72b6\u6001\u4e5f\u5f88\u9ebb\u70e6\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u628a S \u548c R \u5f3a\u5236\u8bbe\u5b9a\u4e3a\u76f8\u53cd\u7684\u4e24\u4e2a\u8f93\u5165\uff0c\u7528 $D$ \u548c $\\overline{D}$ \u6765\u4ee3\u66ff $S$ \u548c $R$\uff0c\u8fd9\u5c31\u662f $D$ Latch\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u4ece buffer \u51fa\u53d1\uff0c\u9010\u6b65\u89e3\u51b3\u4fe1\u606f\u5b58\u50a8\u548c\u4fee\u6539\u7684\u95ee\u9898\uff0c\u6700\u7ec8\u8bbe\u8ba1\u51fa\u4e86 $D$ Latch\u3002\u7136\u800c\uff0c$D$ Latch \u4e5f\u5e76\u4e0d\u662f\u5b8c\u7f8e\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c$D$ Latch \u5b58\u5728\u7684\u95ee\u9898\uff0c\u4e5f\u662f\u6240\u6709\u7684 Latch \u90fd\u65e0\u6cd5\u89c4\u907f\u7684\u95ee\u9898\uff0c\u5373\u900f\u660e\uff08transparent, which means its input value can be seen from the outputs while the control input is <code>1</code>\uff09\u3002</p> <p>\u900f\u660e\u4e3a\u4ec0\u4e48\u4f1a\u4ea7\u751f\u95ee\u9898\u5462\uff1f\u5728\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u4e2d\uff0c\u603b\u662f\u5b58\u5728\u4ece\u4fe1\u606f\u5b58\u50a8\u5355\u5143\u5230\u7ec4\u5408\u903b\u8f91\u7535\u8def\u7684\u53cd\u9988\u8def\u5f84\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a Latch \u800c\u8a00\uff0c\u5176\u8f93\u5165\u603b\u662f\u90e8\u5206\u6765\u81ea\u81ea\u8eab\u6216\u5176\u4ed6 Latch \u7684\u8f93\u51fa\u3002\u7531\u4e8e Latch \u662f\u900f\u660e\u7684\uff0c\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u8f93\u51fa\u53ef\u80fd\u4f1a\u53cd\u8fc7\u6765\u4fee\u6539\u8f93\u5165\uff0c\u4ece\u800c\u5bfc\u81f4 Latch \u7684\u72b6\u6001\u66f4\u65b0\u53d1\u751f\u4e86\u4e0d\u6b62\u4e00\u6b21\u3002\u8fd9\u4e2a\u95ee\u9898\u662f\u5f88\u4e25\u91cd\u7684\uff0c\u5bf9\u4e8e\u900f\u660e\u7684 Latch \u800c\u8a00\uff0c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u72b6\u6001\u66f4\u65b0\u7684\u6b21\u6570\uff0c\u53d6\u51b3\u4e8e\u65f6\u949f\u5468\u671f\u7684\u957f\u77ed\u548c\u53cd\u9988\u8def\u5f84\u7684\u7ec4\u5408\u7535\u8def\u5ef6\u8fdf\uff0c\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u8fd9\u4e2a\u65f6\u949f\u5468\u671f\u7ed3\u675f\u540e Latch \u7a76\u7adf\u5904\u5728\u4ec0\u4e48\u72b6\u6001\u3002</p> $SR$ Master-Slave Flip-FlopNegative-Edge-Triggered $D$ Flip-FlopPositive-Edge-Triggered $D$ Flip-Flop <p> </p> <p> </p> <p> </p> <p>\u4e0a\u6587\u63d0\u5230\uff0cLatch \u662f\u900f\u660e\u7684\uff0c\u6240\u4ee5\u65e0\u6cd5\u786e\u5b9a\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u72b6\u6001\u66f4\u65b0\u7684\u6b21\u6570\u3002\u6211\u4eec\u5e0c\u671b\u8bbe\u8ba1\u4e00\u4e2a\u975e\u900f\u660e\u7684\u4fe1\u606f\u5b58\u50a8\u5355\u5143\uff0c\u786e\u4fdd\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u4ec5\u53d1\u751f\u4e00\u6b21\u72b6\u6001\u66f4\u65b0\u3002\u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u628a\u4e24\u4e2a Latch \u4e32\u8054\u8d77\u6765\uff0c\u5f53\u65f6\u949f\u4fe1\u53f7\u4e3a<code>1</code>\u65f6\uff0c\u4e3b Latch \u5199\u5165\uff0c\u4ece Latch \u53ea\u8bfb\uff1b\u5f53\u65f6\u949f\u4fe1\u53f7\u4e3a<code>0</code>\u65f6\uff0c\u4e3b Latch \u53ea\u8bfb\uff0c\u4ece Latch \u5199\u5165\u3002\u56e0\u6b64\uff0c\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u524d\u4e00\u534a\u65f6\u95f4\u66f4\u65b0\u4e3b Latch\uff0c\u540e\u4e00\u534a\u65f6\u95f4\u66f4\u65b0\u4ece Latch\uff0c\u4ece\u800c\u5bf9\u4e8e\u6574\u4f53\u800c\u8a00\uff0c\u4ec5\u53d1\u751f\u4e00\u6b21\u72b6\u6001\u66f4\u65b0\uff0c\u8fd9\u5c31\u662f\u4e3b\u4ece\u89e6\u53d1\u5668\uff08Master-Slave Flip-Flop\uff09\u3002</p> \u6559\u6750\u4e2d\u7684\u4f20\u7edf\u89c2\u70b9 <p>Logic and Computer Design Fundamentals \u6559\u6750\u4e2d\u8ba4\u4e3a\uff0c\u4e3b\u4ece\u89e6\u53d1\u5668\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1apulse-triggered \u548c edge-triggered\u3002</p> <p>$SR$ \u89e6\u53d1\u5668\u5c31\u5c5e\u4e8e\u524d\u8005\u3002\u4f46\u662f\uff0c$SR$ \u89e6\u53d1\u5668\u5b58\u5728\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\uff0c\u5373 1s-catching\u3002\u5f53\u65f6\u949f\u4fe1\u53f7\u4e3a<code>1</code>\u65f6\uff0cS \u6216 R \u77ed\u6682\u7684\u7f6e<code>1</code>\u5747\u4f1a\u88ab Master \u6355\u6349\u5230\uff0c\u5e76\u5728\u65f6\u949f\u4fe1\u53f7\u4e3a<code>0</code>\u65f6\u4f20\u9012\u7ed9\u4ece Slave\u3002\u7531\u4e8e\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u603b\u662f\u5b58\u5728\u53cd\u9988\u8def\u5f84\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185 Master \u7684\u72b6\u6001\u53ef\u80fd\u4f1a\u66f4\u65b0\u591a\u6b21\uff0c\u867d\u7136\u5bf9\u4e8e\u89e6\u53d1\u5668\u6574\u4f53\u800c\u8a00\u4ecd\u7136\u4ec5\u6709\u4e00\u6b21\u72b6\u6001\u66f4\u65b0\uff08\u56e0\u4e3a Slave \u4ec5\u66f4\u65b0\u4e00\u6b21\uff09\uff0c\u4f46\u662f\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u65e0\u6cd5\u786e\u4fdd Master \u4f20\u9012\u7ed9 Slave \u7684\u4fe1\u606f\u548c\u6211\u4eec\u8d77\u521d\u5199\u5165 Master \u7684\u4fe1\u606f\u662f\u5426\u4e00\u81f4\u3002</p> <p>\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3 1s-catching\uff0c\u8ba9\u6211\u4eec\u56de\u5fc6\u4e00\u4e0b\u65f6\u5e8f\u903b\u8f91\u5ef6\u8fdf\u5206\u6790\u4e2d\u63d0\u5230\u7684 setup-time\uff08\u5982\u4e0b\u56fe\uff09\u3002pulse-triggered \u89e6\u53d1\u5668\u4e4b\u6240\u4ee5\u9700\u8981\u6bd4 edge-triggered \u89e6\u53d1\u5668\u66f4\u957f\u7684 setup-time\uff0c\u5c31\u662f\u4e3a\u4e86\u786e\u4fdd\u65f6\u949f\u4fe1\u53f7\u4e3a<code>1</code>\u65f6\u89e6\u53d1\u5668\u8f93\u5165\u7aef\u603b\u662f\u7a33\u5b9a\u7684\uff0c\u4ece\u800c\u786e\u4fdd\u4e0d\u4f1a\u53d1\u751f 1s-catching\u3002</p> <p>\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c1s-catching \u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e9a\u7a33\u6001\uff08metastability\uff09\u7684\u4e00\u79cd\u8868\u73b0\u3002\u5f53\u6211\u4eec\u6ca1\u80fd\u5728 setup-time \u671f\u95f4\u7ef4\u6301\u6570\u636e\u7a33\u5b9a\uff0c\u5c31\u4f1a\u5bfc\u81f4\u89e6\u53d1\u5668\u9677\u5165\u4e9a\u7a33\u6001\u3002\u901a\u5e38\u7684\u89e3\u51b3\u601d\u8def\u662f\u4e32\u8054\u4e24\u5c42\u751a\u81f3\u66f4\u591a\u5c42\u7684\u89e6\u53d1\u5668\u3002</p> <p> </p> <p>\u8bfb\u5230\u8fd9\u91cc\uff0c\u6216\u8bb8\u4f60\u4e5f\u548c\u7b14\u8005\u4e00\u6837\uff0c\u4ea7\u751f\u4e86\u5982\u4e0b\u7684\u7591\u60d1\uff1a \u4e3a\u4ec0\u4e48\u6211\u611f\u89c9 pulse-triggered \u548c 1s-catching \u7684\u6982\u5ff5\u66f4\u50cf\u662f Latch \u7684\u7279\u6027\uff1f \u5982\u679c\u6211\u628a\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u65f6\u949f\u4fe1\u53f7\u8fb9\u6cbf\uff0c\u96be\u9053 pulse-triggered \u4e0d\u4e5f\u5177\u6709 edge-triggered \u7279\u6027\u5417\uff1f \u96be\u9053 pulse-triggered flip-flop \u4e0d\u662f\u4f2a\u547d\u9898\u5417\uff1f</p> <p>\u73b0\u4ee3\u89c2\u70b9\u8ba4\u4e3a\uff0c\u89e6\u53d1\u5668\u5e76\u4e0d\u5b58\u5728\u6240\u8c13\u7684 pulse-triggered\uff08or level-triggered\uff09\u7c7b\u578b\u3002\u6b63\u5982\u9a6c\u5fb7\u8001\u5e08\u5728\u8bfe\u5802\u4e0a\u4e00\u518d\u5f3a\u8c03\u7684\uff0c\u771f\u6b63\u5b58\u5728\u5b9e\u7528\u4ef7\u503c\u7684\u662f\u8fb9\u6cbf\u89e6\u53d1\u5f0f\uff08edge-triggered\uff09\u89e6\u53d1\u5668\uff0c\u6bd4\u5982\u5e7f\u6cdb\u4f7f\u7528\u7684 $D$ \u89e6\u53d1\u5668\u3002\u4e25\u683c\u6765\u8bf4\uff0c\u5728\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u8fd9\u95e8\u8bfe\u4e2d\uff0c\u6211\u4eec\u6240\u8bf4\u7684 $D$ \u89e6\u53d1\u5668\u5176\u5b9e\u662f\u8fb9\u6cbf\u89e6\u53d1\u5f0f $D$ \u4e3b\u4ece\u89e6\u53d1\u5668\uff08Master-Slave Edge-Triggered $D$ Flip-Flop\uff09\u3002</p> <p>\u4ee5\u4e0b\u662f Wikipedia \u5bf9\u4e8e\u89e6\u53d1\u5668\u7684\u63cf\u8ff0\uff1a</p> <p>The term flip-flop has historically referred generically to both level-triggered (asynchronous, transparent, or opaque) and edge-triggered (synchronous, or clocked) circuits that store a single bit of data using gates.</p> <p>Modern authors reserve the term flip-flop exclusively for edge-triggered storage elements and latches for level-triggered ones.</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff1a</p> <ul> <li>Latch \u662f\u5f02\u6b65\u7684\u3001\u900f\u660e\u7684\u3001\u8109\u51b2\u89e6\u53d1\u7684\uff0c\u5728\u6574\u4e2a\u65f6\u949f\u4fe1\u53f7\u4e3a<code>1</code>\u7684\u8fc7\u7a0b\u4e2d\u5747\u53ef\u5199\u5165\u4fe1\u606f\u5e76\u591a\u6b21\u66f4\u65b0\u72b6\u6001\uff1b</li> <li>Flip-Flop \u662f\u540c\u6b65\u7684\u3001\u975e\u900f\u660e\u7684\u3001\u8fb9\u6cbf\u89e6\u53d1\u7684\uff0c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u4ec5\u5728\u65f6\u949f\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\u8fdb\u884c\u4e00\u6b21\u72b6\u6001\u7684\u66f4\u65b0\uff1b</li> </ul> <p>\u9664\u6b64\u4ee5\u5916\uff0c\u8fd8\u6709\u5f88\u591a\u79cd\u5176\u4ed6\u7684\u89e6\u53d1\u5668\u8bbe\u8ba1\uff0c\u6bd4\u5982\u6570\u903b\u8bfe\u5802\u4e0a\u63d0\u5230\u7684 $T$ Flip-Flop \u548c $JK$ Flip-Flop\uff0c\u66f4\u591a\u76f8\u5173\u77e5\u8bc6\u53ef\u4ee5\u53c2\u8003 https://en.wikipedia.org/wiki/Flip-flop_(electronics)\u3002</p>"},{"location":"cs/tools/markdown/","title":"Markdown","text":"<p> \u7ea6 5043 \u4e2a\u5b57  243 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 23 \u5206\u949f</p>"},{"location":"cs/tools/markdown/#markdown_1","title":"\u4ec0\u4e48\u662f\u2009Markdown","text":"<p>Markdown \u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\uff0c\u7528\u4e8e\u4f7f\u7528\u7eaf\u6587\u672c\u7f16\u8f91\u5668\u521b\u5efa\u683c\u5f0f\u5316\u6587\u672c\u3002John Gruber \u4e8e 2004 \u5e74\u521b\u5efa\u4e86 Markdown\uff0c\u4f5c\u4e3a\u4e00\u79cd\u6613\u4e8e\u4ee5\u6e90\u4ee3\u7801\u5f62\u5f0f\u9605\u8bfb\u7684\u6807\u8bb0\u8bed\u8a00\u3002</p> <p><p>\u2014\u2014\u2014\u2014 Wikipedia</p></p> <p>Markdown \u7684\u4f18\u52bf\u662f\u663e\u8457\u7684\uff0c\u5b83\u8db3\u591f\u8f7b\u5de7\uff0c\u6613\u8bfb\u6613\u5199\uff1b\u4f46\u662f\uff0c\u5176\u7f3a\u9677\u4e5f\u662f\u663e\u8457\u7684\uff0c\u90a3\u5c31\u662f\u521d\u4ee3\u7248\u672c\u7684\u8bed\u6cd5\u89c4\u8303\u6027\u4e0d\u8db3\uff0c\u5728\u5b9e\u73b0\u4e2d\u7ecf\u5e38\u4ea7\u751f\u504f\u79bb\u4f5c\u8005\u610f\u56fe\u7684\u9519\u8bef\uff08\u6700\u91cd\u8981\u7684\u662f Markdown \u672c\u8eab\u6ca1\u6709\u4efb\u4f55\u5185\u5bb9\u4f1a\u88ab\u5224\u5b9a\u4e3a\u201c\u8bed\u6cd5\u9519\u8bef\u201d\uff0c\u6240\u4ee5\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u62a5\u9519\uff09\u3002</p> <p>\u968f\u7740 Markdown \u7684\u5e7f\u6cdb\u5e94\u7528\uff0c\u8bb8\u591a\u66f4\u4e3a\u7ec6\u81f4\u7684\u8bed\u6cd5\u89c4\u8303\u5e94\u8fd0\u800c\u751f\u3002\u5176\u4e2d\u6700\u4e3a\u8457\u540d\u7684\u662f CommonMark\uff08\u6807\u51c6\u5316\uff09\uff0c\u5e38\u89c1\u7684 GFM\uff08GitHub \u98ce\u683c\u7684 Markdown\uff09\u4e5f\u662f\u57fa\u4e8e\u5b83\u6539\u7f16\u7684\u3002</p> <p>Markdown \u7684\u672c\u8d28</p> <p>Markdown \u7684\u672c\u8d28\u662f\u4e00\u79cd\u6807\u8bb0\u8bed\u8a00\uff0c\u53ef\u4ee5\u8f7b\u677e\u8f6c\u6362\u6210 HTML\uff08\u6620\u5c04\u5230 HTML \u7684\u5b50\u96c6\uff09\u3002Markdown \u53ea\u51b3\u5b9a\u89e3\u6790\u51fa\u7684 HTML \u662f\u4ec0\u4e48\uff0c\u4e0d\u4f1a\u51b3\u5b9a\u4efb\u4f55\u89c6\u89c9\u4e0a\u7684\u6837\u5f0f\u3002\u6700\u7ec8\u89c6\u89c9\u4e0a\u7684\u6548\u679c\u7531 HTML\u3001CSS \u7b49\u51b3\u5b9a\u3002</p> <p><p>\u2014\u2014\u2014\u2014 TonyCrane</p></p> <p> </p> <p> image from https://github.com/TonyCrane/PracticalSkillsTutorial </p>"},{"location":"cs/tools/markdown/#markdown_2","title":"Markdown\u2009\u6709\u4ec0\u4e48\u7528","text":"<ul> <li>\u7f16\u5199\u6587\u6863\uff0c\u652f\u6301\u5305\u62ec PDF \u5728\u5185\u7684\u591a\u79cd\u5bfc\u51fa\u683c\u5f0f<ul> <li>VSCode + Markdown Preview Enhanced</li> <li>Typora\uff08not recommend\uff09</li> </ul> </li> <li>\u642d\u5efa\u7f51\u7ad9\uff0c\u6781\u5927\u7a0b\u5ea6\u51cf\u5c0f HTML \u7f51\u9875\u7f16\u5199\u5de5\u4f5c\u91cf<ul> <li>\u7b14\u8bb0\u7c7b\u7f51\u7ad9\u5236\u4f5c\uff1aMkDocs</li> <li>\u535a\u5ba2\u7c7b\u7f51\u7ad9\u5236\u4f5c\uff1aHexo</li> <li>\u5728\u7ebf Slides \u5236\u4f5c\uff1areveal-md</li> </ul> </li> </ul>"},{"location":"cs/tools/markdown/#markdown_3","title":"Markdown\u2009\u8bed\u6cd5\u89c4\u8303","text":"<p>\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u57fa\u672c\u7684 Markdown \u8bed\u6cd5\uff0c\u5982\u679c\u60f3\u8981\u5feb\u901f\u5165\u95e8\uff0c\u5efa\u8bae\u9605\u8bfb CommonMark \u5b98\u7f51\u7684\u6559\u7a0b\u3002</p> <p>Markdown \u8fd8\u6709\u8bb8\u591a\u5e38\u7528\u7684\u6269\u5c55\u8bed\u6cd5\uff0c\u4f8b\u5982\u8868\u683c\u3001\u811a\u6ce8\u3001\u4efb\u52a1\u5217\u8868\u3001\u6d41\u7a0b\u56fe\u3001\u6570\u5b66\u516c\u5f0f\u7b49\u3002\u8fd9\u4e9b\u6269\u5c55\u8bed\u6cd5\u5728 Markdown Extra\u3001LiaScript \u7b49\u53d8\u4f53\u4e2d\u5f15\u5165\uff0c\u76ee\u524d\u8bb8\u591a\u4e3b\u6d41\u7684 Markdown \u7f16\u8f91\u5668\u6216\u89e3\u6790\u5668\u5df2\u7ecf\u53ef\u4ee5\u8bc6\u522b\u5b83\u4eec\u3002</p> <p>Abstract</p> <p>\u63a5\u4e0b\u53bb\u7684\u7bc7\u5e45\u5c06\u4f1a\u5217\u4e3e\u4e00\u4e9b\u503c\u5f97\u5173\u6ce8\u7684 Markdown \u8bed\u6cd5\u89c4\u8303\uff0c\u8bb8\u591a\u4eba\u5728\u4f7f\u7528 Markdown \u7684\u65f6\u5019\u53ef\u80fd\u5e76\u6ca1\u6709\u6ce8\u610f\u5230\u8fd9\u4e9b\u89c4\u8303\u6027\u95ee\u9898\u3002</p> <p>Info</p> <p>\u4ee5\u4e0b\u89c4\u8303\u57fa\u4e8e CommonMark 3.0 \u6807\u51c6\u3002</p> <p>\u4ee5\u4e0b\u793a\u4f8b\u7528\u7684 Markdown \u89e3\u6790\u5668\u4e3a commonmark.js\uff0c\u201c\u89e3\u6790\u4e3a HTML\u201d\u4e25\u683c\u6309\u7167 CommonMark \u89c4\u8303\uff0c\u4f46\u662f\u201c\u6e32\u67d3\u6548\u679c\u201d\u4ec5\u4f9b\u53c2\u8003\uff0c\u56e0\u4e3a\u4e8b\u5b9e\u4e0a\u8fd9\u7bc7\u7b14\u8bb0\u662f\u7528 MkDocs\uff08python-markdown\uff09\u89e3\u6790\u5e76\u53d1\u5e03\u7684\u3002\u6b64\u5916\uff0ccommonmark.js \u4e5f\u63d0\u4f9b\u5728\u7ebf\u89e3\u6790\u670d\u52a1\uff0c\u81ea\u5df1\u4eb2\u624b\u8bd5\u4e00\u8bd5\u5427\uff01</p>"},{"location":"cs/tools/markdown/#_1","title":"\u4e0d\u5efa\u8bae\u4f7f\u7528\u7684\u8bed\u6cd5","text":"<p>\u5f53\u4f60\u5728\u9605\u8bfb Markdown \u57fa\u672c\u8bed\u6cd5\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u73b0\u539f\u6765\u540c\u4e00\u4e2a\u6548\u679c\u53ef\u4ee5\u7531\u591a\u79cd\u5199\u6cd5\u5b9e\u73b0\uff08\u6bd4\u5982\u5206\u5272\u7ebf\u65e2\u53ef\u4ee5\u662f <code>---</code> \u4e5f\u53ef\u4ee5\u662f <code>***</code>\uff09\u3002\u8fd9\u542c\u8d77\u6765\u4f3c\u4e4e\u5f88\u65b9\u4fbf\uff0c\u4f46\u6211\u8ba4\u4e3a\u4e00\u4e2a\u4eba\u7684 Markdown \u8bed\u6cd5\u98ce\u683c\u5e94\u5f53\u662f\u4e00\u4ee5\u8d2f\u4e4b\u7684\uff0c\u56e0\u6b64\u975e\u5e38\u4e0d\u5efa\u8bae\u6df7\u7528\u591a\u79cd\u5199\u6cd5\u3002</p> <p>\u8fd9\u91cc\u7f57\u5217\u4e00\u4e0b\u7b14\u8005\u51e0\u4e4e\u4e0d\u7528\u7684\u8bed\u6cd5\uff1a</p> <p>Setext \u5f0f\u6807\u9898\u3001<code>*</code> <code>_</code> \u5f0f\u5206\u5272\u7ebf\u3001<code>+</code> <code>*</code> \u5f0f\u65e0\u5e8f\u5217\u8868\u3001<code>)</code> \u5f0f\u6709\u5e8f\u5217\u8868\u3001\u7f29\u8fdb\u5f0f\u4ee3\u7801\u5757\u3001<code>&lt; &gt;</code> \u81ea\u52a8\u94fe\u63a5\uff08autolinks\uff09\u3001\u5f15\u7528\u5f0f\u94fe\u63a5\uff08reference links\uff09\u3001<code>_</code> \u5f0f\u5f3a\u8c03\u7b49\u3002</p>"},{"location":"cs/tools/markdown/#_2","title":"\u6bb5\u843d\u3001\u786c\u6362\u884c\u4e0e\u8f6f\u6362\u884c","text":"<p>\u5728\u5f88\u591a\u65f6\u5019\uff0c\u4eba\u4eec\u5f80\u5f80\u503e\u5411\u4e8e\u51cf\u5c11\u7a7a\u884c\u7684\u4f7f\u7528\uff08\u6bd4\u5982\u5199\u4ee3\u7801\u7684\u538b\u884c\uff09\u3002\u4f46\u5728 Markdown \u8bed\u6cd5\u4e2d\uff0c\u7a7a\u884c\u662f\u5f88\u5173\u952e\u7684\uff0c\u6211\u4eec\u751a\u81f3\u5efa\u8bae\u5927\u5bb6\u591a\u7528\u7a7a\u884c\u3002\u56e0\u4e3a\u5982\u679c\u5728\u5e94\u8be5\u7a7a\u884c\u7684\u5730\u65b9\u4e0d\u7a7a\u884c\uff0c\u4f1a\u5f15\u8d77\u6b67\u4e49\u548c\u9519\u8bef\uff0c\u800c\u591a\u7528\u51e0\u4e2a\u7a7a\u884c\u662f\u5b8c\u5168\u6ca1\u95ee\u9898\u7684\uff08Markdown \u4f1a\u6298\u53e0\u8fde\u7eed\u7a7a\u884c\uff0c\u6700\u7ec8\u53ea\u4f1a\u6709\u7a7a\u4e00\u884c\u7684\u6548\u679c\uff09\u3002</p> Markdown \u7a7a\u884c\u7684\u5b9a\u4e49 <p>\u7a7a\u884c\u6307\u7684\u662f\uff0c\u6ca1\u6709\u4efb\u4f55\u5b57\u7b26\uff0c\u6216\u8005\u53ea\u5305\u542b\u7a7a\u683c\uff08<code>U+0020</code>\uff09\u548c\u5236\u8868\u7b26\uff08<code>U+0009</code>\uff09\u7684\u4e00\u884c\u3002</p> <p>Markdown \u4e2d\u6700\u57fa\u672c\u7684\u6587\u672c\u7247\u6bb5\u662f\u6bb5\u843d\uff08paragraphs\uff09\uff0c\u5f88\u591a\u4eba\u4f1a\u6df7\u6dc6\u53e6\u8d77\u4e00\u6bb5\u548c\u53e6\u8d77\u4e00\u884c\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4ed6\u4eec\u7684\u533a\u522b\uff1a</p> \u53e6\u8d77\u4e00\u6bb5\u7a7a\u683c\u786c\u6362\u884c\u53cd\u659c\u6760\u786c\u6362\u884c\u8f6f\u6362\u884c <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>\u8fd9\u662f\u7b2c\u4e00\u6bb5\n\n\u8fd9\u662f\u7b2c\u4e8c\u6bb5\n</code></pre> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;p&gt;\u8fd9\u662f\u7b2c\u4e00\u6bb5&lt;/p&gt;\n&lt;p&gt;\u8fd9\u662f\u7b2c\u4e8c\u6bb5&lt;/p&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><p>\u8fd9\u662f\u7b2c\u4e00\u6bb5</p> <p>\u8fd9\u662f\u7b2c\u4e8c\u6bb5</p></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>\u8fd9\u662f\u7b2c\u4e00\u6bb5  // (1)!\n\u8fd9\u662f\u7b2c\u4e8c\u6bb5\n</code></pre> <ol> <li>\u8fd9\u91cc\u884c\u672b\u9700\u8981\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u7a7a\u683c</li> </ol> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;p&gt;\u8fd9\u662f\u7b2c\u4e00\u6bb5&lt;br /&gt;\n\u8fd9\u662f\u7b2c\u4e8c\u6bb5&lt;/p&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><p>\u8fd9\u662f\u7b2c\u4e00\u6bb5 \u8fd9\u662f\u7b2c\u4e8c\u6bb5</p></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>\u8fd9\u662f\u7b2c\u4e00\u6bb5\\// (1)!\n\u8fd9\u662f\u7b2c\u4e8c\u6bb5\n</code></pre> <ol> <li>\u8fd9\u91cc\u884c\u672b\u9700\u8981\u4e00\u4e2a\u53cd\u659c\u6760 <code>\\</code></li> </ol> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;p&gt;\u8fd9\u662f\u7b2c\u4e00\u6bb5&lt;br /&gt;\n\u8fd9\u662f\u7b2c\u4e8c\u6bb5&lt;/p&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><p>\u8fd9\u662f\u7b2c\u4e00\u6bb5 \u8fd9\u662f\u7b2c\u4e8c\u6bb5</p></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>\u8fd9\u662f\u7b2c\u4e00\u6bb5// (1)!\n\u8fd9\u662f\u7b2c\u4e8c\u6bb5\n</code></pre> <ol> <li>\u8fd9\u91cc\u884c\u672b\u6ca1\u6709\u7a7a\u683c\u6216\u53ea\u6709\u4e00\u4e2a\u7a7a\u683c</li> </ol> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;p&gt;\u8fd9\u662f\u7b2c\u4e00\u6bb5\n\u8fd9\u662f\u7b2c\u4e8c\u6bb5&lt;/p&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><p>\u8fd9\u662f\u7b2c\u4e00\u6bb5 \u8fd9\u662f\u7b2c\u4e8c\u6bb5</p></p> <p>\u8fd9\u51e0\u79cd\u60c5\u5f62\u7684\u533a\u522b\u8fd8\u662f\u633a\u660e\u663e\u7684\u3002\u5f53\u4f60\u60f3\u8981\u53e6\u8d77\u4e00\u6bb5\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u63d2\u5165\u81f3\u5c11\u4e00\u4e2a\u7a7a\u884c\uff1b\u5f53\u4f60\u4ec5\u4ec5\u60f3\u8981\u6362\u884c\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u7528\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u7a7a\u683c\uff0c\u6216\u8005\u4e00\u4e2a\u53cd\u659c\u6760\u6765\u5b9e\u73b0\u3002\u90a3\u4e48\uff0c\u8f6f\u6362\u884c\u5462\uff1f</p> \u4e2d\u6587\u6392\u7248\u4e2d\u4e0d\u5efa\u8bae\u4f7f\u7528\u8f6f\u6362\u884c <p>\u8fd9\u4e2a\u662f\u771f\u7684\u4e0d\u5efa\u8bae\uff0c\u9664\u975e\u4f60\u6e05\u695a\u5730\u77e5\u9053\u4f60\u5728\u7528\u8f6f\u6362\u884c\u505a\u4ec0\u4e48\u3002</p> <p>\u8f6f\u6362\u884c\u7684\u5173\u952e\u5728\u4e8e\uff0c\u5b83\u5728\u8854\u63a5\u4e0a\u4e0b\u6587\u7684\u65f6\u5019\u81ea\u52a8\u8865\u4e0a\u4e86\u4e00\u4e2a\u7a7a\u683c\u3002\u5982\u679c\u8fd9\u662f\u897f\u6587\u6392\u7248\uff0c\u90a3\u8fd9\u4e2a\u7a7a\u683c\u5c31\u975e\u5e38\u5408\u9002\uff1b\u4f46\u5982\u679c\u8fd9\u662f\u4e2d\u6587\u6392\u7248\uff0c\u90a3\u8fd9\u4e2a\u7a7a\u683c\u5c31\u975e\u5e38\u7a81\u5140\u3002</p> \u897f\u6587\u6392\u7248\u7684\u8f6f\u6362\u884c\u4e2d\u6587\u6392\u7248\u7684\u8f6f\u6362\u884c <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>This is line 1.\nAnd this is line 2, but this sentence is ended\nin line 3.\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><p>This is line 1. And this is line 2, but this sentence is ended in line 3.</p></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>\u8fd9\u662f\u7b2c\u4e00\u884c\u3002\n\u8fd9\u662f\u7b2c\u4e8c\u884c\uff0c\u4f46\u8fd9\u4e2a\u53e5\u5b50\u4f1a\u5728\n\u7b2c\u4e09\u884c\u7ed3\u675f\u3002\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><p>\u8fd9\u662f\u7b2c\u4e00\u884c\u3002 \u8fd9\u662f\u7b2c\u4e8c\u884c\uff0c\u4f46\u8fd9\u4e2a\u53e5\u5b50\u4f1a\u5728 \u7b2c\u4e09\u884c\u7ed3\u675f\u3002</p></p> <p>\u5173\u4e8e\u6bb5\u843d\u548c\u6362\u884c\uff0c\u8fd8\u6709\u4e00\u4e9b\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\uff1a</p> <ul> <li>\u4e00\u5b9a\u8981\u517b\u6210\u6dfb\u52a0\u7a7a\u884c\u7684\u4e60\u60ef\uff0c\u4ece\u800c\u786e\u4fdd\u4f60\u7684 Markdown \u6e90\u7801\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u80fd\u88ab\u6b63\u786e\u89e3\u6790\u3002<ul> <li>\u9664\u4e86\u6bb5\u843d\u4e4b\u5916\uff0c\u5efa\u8bae\u5728\u4e0d\u540c\u7684\u7ed3\u6784\u4e4b\u95f4\u90fd\u63d2\u5165\u7a7a\u884c\uff0c\u6bd4\u5982\u6bb5\u843d\u548c\u5217\u8868\u4e4b\u95f4\u3001\u6bb5\u843d\u548c\u5f15\u7528\u4e4b\u95f4\u3001\u6bb5\u843d\u548c\u4ee3\u7801\u5757\u4e4b\u95f4\u7b49\u3002   \u8fd9\u4e9b\u7a7a\u884c\u5e76\u4e0d\u90fd\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u672c\u7740\u5b81\u591a\u4e0d\u5c11\u3001\u4e00\u4ee5\u8d2f\u4e4b\u7684\u539f\u5219\uff0c\u8fd8\u662f\u5efa\u8bae\u517b\u6210\u6dfb\u52a0\u7a7a\u884c\u7684\u4e60\u60ef\u3002</li> </ul> </li> <li>\u662f\u5426\u4f7f\u7528\u786c\u6362\u884c\u662f\u4e2a\u89c1\u4ec1\u89c1\u667a\u7684\u95ee\u9898\u3002<ul> <li>\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u4e0d\u559c\u6b22\u7528\u7a7a\u683c\u6765\u6362\u884c\uff08\u592a\u4e0d\u660e\u663e\u4e86\uff09\uff0c\u4e5f\u4e0d\u559c\u6b22\u7528\u53cd\u659c\u6760\u6765\u6362\u884c\uff08\u6709\u65f6\u5019\u65e0\u6cd5\u6b63\u786e\u89e3\u6790\uff0c\u6bd4\u5982 MkDocs\uff09\u3002   \u6211\u4f1a\u76f4\u63a5\u5728\u884c\u672b\u52a0\u4e0a <code>&lt;br /&gt;</code>\u3002</li> <li>\u4e0d\u8fc7\u66f4\u591a\u65f6\u5019\uff0c\u6211\u8fd8\u662f\u4e60\u60ef\u4e8e\u53ea\u7528\u6bb5\u843d\u4e0d\u7528\u6362\u884c\u3002\u7b14\u8005\u8ba4\u4e3a\u4e00\u6bb5\u8bdd\u5728 Markdown \u6e90\u7801\u91cc\u5c31\u5e94\u8be5\u540c\u4e00\u884c\u5199\u5b8c\uff0c\u8fd9\u662f\u66f4\u7b26\u5408 Markdown \u8bed\u6cd5\u7406\u5ff5\u7684\u4e60\u60ef\u3002</li> </ul> </li> </ul>"},{"location":"cs/tools/markdown/#_3","title":"\u5bb9\u5668\uff1a\u5757\u5f15\u7528\u4e0e\u5217\u8868\u9879","text":"<p>\u5bb9\u5668\uff08container blocks\uff09\u662f Markdown \u4e2d\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u5757\u7ed3\u6784\uff0c\u5bb9\u5668\u5185\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 Markdown \u8bed\u6cd5\u548c\u7ed3\u6784\uff08\u5305\u62ec\u5d4c\u5957\u5bb9\u5668\u672c\u8eab\uff09\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u662f\u5bb9\u5668\u5185\u88c5\u7740\u4e00\u7bc7\u5b8c\u6574\u7684 Markdown \u6587\u672c\u4e00\u6837\u3002</p> <p>\u5bb9\u5668\u5206\u4e3a\u4e24\u79cd\uff1a\u5757\u5f15\u7528\uff08block quotes\uff09\u4e0e\u5217\u8868\u9879\uff08list items\uff09\u3002\u4e0b\u9762\u5c06\u5206\u522b\u4ecb\u7ecd\u5b83\u4eec\u7684\u8bed\u6cd5\u3002</p> <p>\u5757\u5f15\u7528\u7684\u6807\u8bb0 <code>&gt;</code> \u548c\u5176\u540e\u7684\u6587\u672c\u4e4b\u95f4\u539f\u5219\u4e0a\u9700\u8981\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u4f46\u662f\u8fd9\u4e2a\u7a7a\u683c\u662f\u53ef\u4ee5\u7701\u7565\u7684\uff08\u4f46\u5efa\u8bae\u517b\u6210\u6253\u7a7a\u683c\u7684\u4e60\u60ef\uff0c\u539f\u56e0\u89c1\u4e0b\u6587\u201c\u5982\u4f55\u843d\u5165\u5bb9\u5668\u201d\uff09\uff1a</p> Markdown \u6e90\u7801\u89e3\u6790\u4e3a HTML\u6e32\u67d3\u6548\u679c <pre><code>&gt; \u8fd9\u662f\u4e00\u53e5\u8bdd\n&gt;\n&gt;\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd\n</code></pre> <pre><code>&lt;blockquote&gt;\n&lt;p&gt;\u8fd9\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n&lt;p&gt;\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n&lt;/blockquote&gt;\n</code></pre> <p> <p>\u8fd9\u662f\u4e00\u53e5\u8bdd</p> <p>\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd</p> </p> <p>\u5217\u8868\u9879\u7684\u6807\u8bb0 <code>-</code> <code>.</code> \u548c\u5176\u540e\u7684\u6587\u672c\u4e4b\u95f4\u539f\u5219\u4e0a\u9700\u8981\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u5e76\u4e14\u4e0d\u540c\u4e8e\u5757\u5f15\u7528\uff0c\u8fd9\u4e2a\u7a7a\u683c\u662f\u4e0d\u53ef\u4ee5\u7701\u7565\u7684\uff0c\u800c\u4e14\u4e5f\u6700\u597d\u4e0d\u8981\u63d2\u5165\u8fc7\u591a\u7684\u7a7a\u683c\uff0c\u4ee5\u514d\u88ab\u89e3\u6790\u4e3a\u7f29\u8fdb\u5f0f\u4ee3\u7801\u5757\uff08\u4e0d\u8981\u63d2\u5165\u8fc7\u591a\u7a7a\u683c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u51e0\u4e4e\u6240\u6709 Markdown \u8bed\u6cd5\u90fd\u662f\u6210\u7acb\u7684\uff09\uff1a</p> Markdown \u6e90\u7801\u89e3\u6790\u4e3a HTML\u6e32\u67d3\u6548\u679c <pre><code>- \u8fd9\u662f\u4e00\u53e5\u8bdd\n\n-\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd\n\n1. \u8fd9\u662f\u4e00\u53e5\u8bdd\n\n0.\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd\n</code></pre> <pre><code>&lt;ul&gt;\n&lt;li&gt;\u8fd9\u662f\u4e00\u53e5\u8bdd&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;-\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;\u8fd9\u662f\u4e00\u53e5\u8bdd&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;0.\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n</code></pre> <p><ul> <li>\u8fd9\u662f\u4e00\u53e5\u8bdd</li> </ul> <p>-\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd</p> <ol> <li>\u8fd9\u662f\u4e00\u53e5\u8bdd</li> </ol> <p>0.\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd</p></p> <p>\u5217\u8868\uff08list\uff09\u7531\u540c\u79cd\u7c7b\u578b\u7684\u5217\u8868\u9879\uff08list items\uff09\u7ec4\u6210\uff0c\u5217\u8868\u4e2d\u7684\u7a7a\u884c\u4f1a\u5f71\u54cd\u5217\u8868\u884c\u8ddd\u7684\u5bbd\u7a84\uff0c\u8fd9\u4e00\u70b9\u6709\u4e9b\u590d\u6742\uff08\u6ce8\u610f\u89c2\u5bdf\u6e32\u67d3\u6548\u679c\u7684\u7ec6\u5fae\u5dee\u522b\uff0c\u4ee5\u53ca HTML \u4ee3\u7801\u4e2d\u7684 <code>&lt;p&gt;</code> \u6807\u7b7e\uff09\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4f8b\u5b50\uff1a</p> \u4e0d\u5b58\u5728\u4efb\u4f55\u7a7a\u884c\u6bcd\u5217\u8868\u5b58\u5728\u7a7a\u884c\u5b50\u5217\u8868\u5b58\u5728\u7a7a\u884c\u6bcd\u5b50\u5217\u8868\u90fd\u5b58\u5728\u7a7a\u884c <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><ul> <li>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879 <ul> <li>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879</li> <li>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879</li> </ul> </li> <li>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879</li> </ul></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>- \u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879\n    - \u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879\n    - \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879\n- \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879\n</code></pre> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;ul&gt;\n&lt;li&gt;\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879\n&lt;ul&gt;\n&lt;li&gt;\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879&lt;/li&gt;\n&lt;li&gt;\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><ul> <li> <p>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879</p> <ul> <li>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879</li> <li>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879</li> </ul> </li> <li> <p>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879</p> </li> </ul></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>- \u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879\n// (1)!\n    - \u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879\n    - \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879\n- \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879\n</code></pre> <ol> <li>\u8fd9\u91cc\u662f\u5c5e\u4e8e\u6bcd\u5217\u8868\u7684\u4e00\u4e2a\u7a7a\u884c</li> </ol> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879&lt;/li&gt;\n&lt;li&gt;\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><ul> <li>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879 <ul> <li> <p>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879</p> </li> <li> <p>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879</p> </li> </ul> </li> <li>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879</li> </ul></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>- \u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879\n    - \u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879\n// (1)!\n    - \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879\n- \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879\n</code></pre> <ol> <li>\u8fd9\u91cc\u662f\u5c5e\u4e8e\u5b50\u5217\u8868\u7684\u4e00\u4e2a\u7a7a\u884c</li> </ol> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;ul&gt;\n&lt;li&gt;\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><ul> <li> <p>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879</p> <ul> <li> <p>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879</p> </li> <li> <p>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879</p> </li> </ul> </li> <li> <p>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879</p> </li> </ul></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>- \u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879\n// (1)!\n    - \u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879\n    // (2)!\n    - \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879\n- \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879\n</code></pre> <ol> <li> <p>\u8fd9\u91cc\u662f\u5c5e\u4e8e\u6bcd\u5217\u8868\u7684\u4e00\u4e2a\u7a7a\u884c</p> </li> <li> <p>\u8fd9\u91cc\u662f\u5c5e\u4e8e\u5b50\u5217\u8868\u7684\u4e00\u4e2a\u7a7a\u884c</p> </li> </ol> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6bcd\u5217\u8868\u9879&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b50\u5217\u8868\u9879&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u5b50\u5217\u8868\u9879&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6bcd\u5217\u8868\u9879&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>\u5173\u4e8e\u5217\u8868\u8fd8\u6709\u4e00\u70b9\u503c\u5f97\u6ce8\u610f\uff0c\u5c31\u662f\u5982\u4f55\u5728\u4e0d\u843d\u5165\u4e0a\u4e00\u4e2a\u5217\u8868\u7684\u60c5\u51b5\u4e0b\uff0c\u53e6\u8d77\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff08\u6ce8\u610f\u4ed4\u7ec6\u770b\u6e32\u67d3\u6548\u679c\u7684\u884c\u8ddd\u5dee\u522b\uff09\u3002\u66f4\u6362\u5217\u8868\u9879\u7684\u6807\u8bc6\u662f\u53ef\u884c\u7684\uff0c\u4f46\u662f\u6211\u66f4\u63a8\u8350\u7528 HTML \u7a7a\u767d\u6ce8\u91ca\u6765\u5b9e\u73b0\uff1a</p> \u66f4\u6362\u5217\u8868\u9879\u7684\u6807\u8bc6HTML \u7a7a\u767d\u6ce8\u91ca <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><ul> <li>\u8fd9\u662f\u4e00\u53e5\u8bdd</li> <li>\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd</li> </ul> <ul> <li>\u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd</li> <li>\u8fd9\u4ecd\u7136\u662f\u4e00\u53e5\u8bdd</li> </ul></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>- \u8fd9\u662f\u4e00\u53e5\u8bdd\n- \u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd\n* \u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd\n* \u8fd9\u4ecd\u7136\u662f\u4e00\u53e5\u8bdd\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><ul> <li>\u8fd9\u662f\u4e00\u53e5\u8bdd</li> <li>\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd</li> </ul> <ul> <li>\u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd</li> <li>\u8fd9\u4ecd\u7136\u662f\u4e00\u53e5\u8bdd</li> </ul></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>- \u8fd9\u662f\u4e00\u53e5\u8bdd\n- \u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd\n&lt;!-- --&gt;\n- \u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd\n- \u8fd9\u4ecd\u7136\u662f\u4e00\u53e5\u8bdd\n</code></pre>"},{"location":"cs/tools/markdown/#_4","title":"\u5982\u4f55\u843d\u5165\u5bb9\u5668","text":"<p>\u524d\u9762\u63d0\u5230\uff0c\u5bb9\u5668\u53ef\u4ee5\u5305\u542b\u4e00\u5207 Markdown \u8bed\u6cd5\u548c\u7ed3\u6784\uff0c\u4f46\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5c06\u4e00\u6bb5 Markdown \u4ee3\u7801\u5224\u5b9a\u4e3a\u843d\u5165\u5bb9\u5668\uff08\u6210\u4e3a\u8fd9\u4e2a\u5bb9\u5668\u5185\u7684\u4e00\u90e8\u5206\uff09\u3002</p> <ul> <li>\u5757\u5f15\u7528\u901a\u8fc7 <code>&gt;</code> \u6765\u6807\u8bc6\u67d0\u4e00\u884c\u843d\u5165\u5bb9\u5668\uff0c\u8fd9\u662f\u5f88\u597d\u5224\u65ad\u7684\u3002</li> <li>\u5217\u8868\u9879\u901a\u8fc7\u9002\u5f53\u7684\u7f29\u8fdb\u6765\u6807\u8bc6\u67d0\u4e00\u884c\u843d\u5165\u5bb9\u5668\uff0c\u8fd9\u91cc\u5f88\u5bb9\u6613\u4ea7\u751f\u6b67\u4e49\u3002<ul> <li>\u60f3\u8981\u843d\u5165\u5217\u8868\u9879\uff0c\u5fc5\u987b\u81f3\u5c11\u7f29\u8fdb\u5230\u5217\u8868\u9879 <code>-</code> <code>.</code> \u6807\u8bb0\u540e\u7684\u6587\u672c\u4f4d\u7f6e\uff0c\u4f46\u4e5f\u4e0d\u80fd\u7f29\u8fdb\u592a\u591a\uff0c\u4ee5\u514d\u88ab\u89e3\u6790\u4e3a\u7f29\u8fdb\u5f0f\u4ee3\u7801\u5757\u3002</li> </ul> </li> </ul> <p>\u542c\u8d77\u6765\u6709\u70b9\u62bd\u8c61\uff0c\u6211\u4eec\u6765\u770b\u51e0\u4e2a\u4f8b\u5b50\uff1a</p> \u5757\u5f15\u7528\u5217\u8868\u9879 <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>&gt; \u8fd9\u662f\u4e00\u53e5\u8bdd\n&gt;// (1)!\n&gt; \u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd\n// (2)!\n\u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd\n</code></pre> <ol> <li> <p>\u8fd9\u91cc\u662f\u4e00\u4e2a\u843d\u5165\u5757\u5f15\u7528\u7684\u7a7a\u884c</p> </li> <li> <p>\u8fd9\u91cc\u662f\u4e00\u4e2a\u6ca1\u6709\u843d\u5165\u5757\u5f15\u7528\u7684\u7a7a\u884c</p> </li> </ol> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;blockquote&gt;\n&lt;p&gt;\u8fd9\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n&lt;p&gt;\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;\u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p> <p>\u8fd9\u662f\u4e00\u53e5\u8bdd</p> <p>\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd</p> <p>\u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd</p></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>- \u8fd9\u662f\u4e00\u53e5\u8bdd\n\n  \u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd// (1)!\n\n    \u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd// (2)!\n\n      \u8fd9\u4ecd\u7136\u662f\u4e00\u53e5\u8bdd// (3)!\n</code></pre> <ol> <li> <p>\u8fd9\u4e00\u884c\u524d\u9762\u6709\u4e24\u4e2a\u7a7a\u683c\uff0c\u7f29\u8fdb\u5230\u548c\u201c\u8fd9\u662f\u4e00\u53e5\u8bdd\u201d\u5bf9\u9f50\u7684\u4f4d\u7f6e</p> </li> <li> <p>\u8fd9\u4e00\u884c\u524d\u9762\u6709\u4e00\u4e2a\u5236\u8868\u7b26\uff08\u56db\u4e2a\u7a7a\u683c\uff09\uff0c\u8fd9\u6837\u7684\u7f29\u8fdb\u4e5f\u662f\u53ef\u4ee5\u7684</p> </li> <li> <p>\u8fd9\u4e00\u884c\u524d\u9762\u6709\u516d\u4e2a\u7a7a\u683c\uff0c\u76f8\u5bf9\u201c\u8fd9\u662f\u4e00\u53e5\u8bdd\u201d\u7f29\u8fdb\u4e86\u56db\u4e2a\u7a7a\u683c\uff0c\u88ab\u89e3\u6790\u4e3a\u7f29\u8fdb\u5f0f\u4ee3\u7801\u5757</p> </li> </ol> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u8fd9\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n&lt;p&gt;\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n&lt;p&gt;\u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;\u8fd9\u4ecd\u7136\u662f\u4e00\u53e5\u8bdd\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><ul> <li> <p>\u8fd9\u662f\u4e00\u53e5\u8bdd</p> <p>\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd</p> <p>\u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd</p> <pre><code>\u8fd9\u4ecd\u7136\u662f\u4e00\u53e5\u8bdd\n</code></pre> </li> </ul></p> \u4e3a\u4ec0\u4e48\u5efa\u8bae\u4e0d\u8981\u7701\u7565\u5757\u5f15\u7528\u7684\u7a7a\u683c <p>\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\uff1a</p> \u4e0d\u7701\u7565\u7a7a\u683c\u7701\u7565\u7a7a\u683c <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>&gt; - \u8fd9\u662f\u4e00\u53e5\u8bdd\n&gt;\n&gt;   \u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd// (1)!\n</code></pre> <ol> <li>\u8fd9\u4e00\u884c\u7f29\u8fdb\u5230\u4e86\u548c\u201c\u8fd9\u662f\u4e00\u53e5\u8bdd\u201d\u5bf9\u9f50\u7684\u4f4d\u7f6e\uff0c\u6210\u529f\u843d\u5165\u5217\u8868\u9879</li> </ol> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p> <ul> <li> <p>\u8fd9\u662f\u4e00\u53e5\u8bdd</p> <p>\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd</p> </li> </ul> </p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>&gt;- \u8fd9\u662f\u4e00\u53e5\u8bdd// (1)!\n&gt;\n&gt;   \u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd// (2)!\n&gt;\n&gt;  \u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd// (3)!\n</code></pre> <ol> <li> <p>\u8fd9\u91cc\u7684\u5757\u5f15\u7528 <code>&gt;</code> \u540e\u7701\u7565\u4e86\u7a7a\u683c</p> </li> <li> <p>\u8fd9\u4e00\u884c\u6bd4\u201c\u8fd9\u662f\u4e00\u53e5\u8bdd\u201d\u591a\u7f29\u8fdb\u4e86\u4e00\u683c\uff0c\u6210\u529f\u843d\u5165\u5217\u8868\u9879</p> </li> <li> <p>\u8fd9\u4e00\u884c\u7f29\u8fdb\u5230\u4e86\u548c\u201c\u8fd9\u662f\u4e00\u53e5\u8bdd\u201d\u5bf9\u9f50\u7684\u4f4d\u7f6e\uff0c\u6309\u7406\u8bf4\u5e94\u8be5\u6210\u529f\u843d\u5165\u5217\u8868\u9879\uff0c\u4f46\u662f\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64</p> </li> </ol> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p> <ul> <li> <p>\u8fd9\u662f\u4e00\u53e5\u8bdd</p> <p>\u8fd9\u4e5f\u662f\u4e00\u53e5\u8bdd</p> </li> </ul> <p>\u8fd9\u8fd8\u662f\u4e00\u53e5\u8bdd</p> </p> <p>\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u4ed4\u7ec6\u601d\u8003\u4f60\u5c31\u4f1a\u53d1\u73b0\uff0c\u867d\u7136\u6211\u4eec\u6709\u6743\u7701\u7565\u5757\u5f15\u7528\u540e\u7684\u7a7a\u683c\uff0c\u4f46\u662f\u5728\u5224\u5b9a\u662f\u5426\u843d\u5165\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u5217\u8868\u9879\u53ef\u4e0d\u60ef\u7740\u4f60\uff0c\u5b83\u9ed8\u8ba4\u4f60\u7684 <code>&gt;</code> \u540e\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u6240\u4ee5\u8981\u6c42\u4f60\u5728\u7f29\u8fdb\u7684\u65f6\u5019\u7b97\u4e0a\u8fd9\u4e2a\u7a7a\u683c\u3002\u6362\u8a00\u4e4b\uff0c\u76f4\u63a5\u548c <code>-</code> \u540e\u7684\u6587\u672c\u5bf9\u9f50\u5e76\u4e0d\u603b\u662f\u9002\u7528\uff0c\u6709\u65f6\u4f1a\u9700\u8981\u591a\u6253\u4e00\u4e2a\u7a7a\u683c\u3002</p>"},{"location":"cs/tools/markdown/#_5","title":"\u53cd\u659c\u6760\u8f6c\u4e49","text":"<p>\u5728 Markdown \u4e2d\uff0c\u6240\u6709 ASCII \u4e2d\u7684\u6807\u70b9\u7b26\u53f7\u90fd\u53ef\u4ee5\u88ab <code>\\</code> \u8f6c\u4e49\uff08backslash-escaped\uff09\u3002</p> <p>\u4f46\u662f\u53cd\u659c\u6760\u8f6c\u4e49\u5728\u5185\u8054\u4ee3\u7801\u3001\u4ee3\u7801\u5757\u3001\u81ea\u52a8\u94fe\u63a5\u3001\u7eaf HTML \u4e2d\u662f\u65e0\u6548\u7684\uff0c\u5728\u5176\u4ed6\u8bed\u6cd5\u548c\u7ed3\u6784\u4e2d\u5219\u90fd\u662f\u6709\u6548\u7684\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4f8b\u5b50\uff1a</p> \u5185\u8054\u4ee3\u7801\u7eaf HTMLMarkdown \u94fe\u63a5 <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>`good \\` boy`// (1)!\n</code></pre> <ol> <li>\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u5185\u8054\u662f\u4ece\u5de6\u5f80\u53f3\u987a\u5e8f\u89e3\u6790\u7684\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u53cd\u5f15\u53f7\u4f1a\u548c\u7b2c\u4e8c\u4e2a\u53cd\u5f15\u53f7\u914d\u5bf9</li> </ol> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;p&gt;&lt;code&gt;good \\&lt;/code&gt; boy`&lt;/p&gt;\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p><p><code>good \\</code> boy`</p></p> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>&lt;a href=\"/bar\\/\"&gt;BAR&lt;/a&gt;\n</code></pre> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;p&gt;&lt;a href=\"/bar\\/\"&gt;BAR&lt;/a&gt;&lt;/p&gt;\n</code></pre> <p>Markdown \u6e90\u7801\uff1a</p> <pre><code>[BAR](/bar\\/)\n</code></pre> <p>\u89e3\u6790\u4e3a HTML\uff1a</p> <pre><code>&lt;p&gt;&lt;a href=\"/bar/\"&gt;BAR&lt;/a&gt;&lt;/p&gt;\n</code></pre>"},{"location":"cs/tools/markdown/#_6","title":"\u5185\u8054\u4ee3\u7801","text":"<p>\u4e0a\u6587\u63d0\u5230\u53cd\u659c\u6760\u8f6c\u4e49\u5728\u5185\u8054\u4ee3\u7801\u4e2d\u662f\u65e0\u6548\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u5728\u5185\u8054\u4ee3\u7801\u4e2d\u8f6c\u4e49 <code>`</code> \u5462\uff1f</p> <p>\u7b54\u6848\u5c31\u662f\u901a\u8fc7\u4e0d\u540c\u6570\u91cf\u7684\u53cd\u5f15\u53f7 <code>`</code> \u6765\u5b9e\u73b0\u53cd\u5f15\u53f7\u81ea\u8eab\u7684\u8f6c\u4e49\u3002\u5047\u8bbe\u5185\u8054\u4ee3\u7801\u4e2d\u6709\u6700\u591a\u8fde\u7eed\u53cd\u5f15\u53f7 m \u4e2a\uff0c\u6700\u5c11\u8fde\u7eed\u53cd\u5f15\u53f7 n \u4e2a\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u4f7f\u7528 m+1 \u4e2a\u53cd\u5f15\u53f7\uff0c\u6216\u8005 n-1 \u4e2a\uff08n&gt;1\uff09\u53cd\u5f15\u53f7\u6765\u5305\u88f9\u5185\u8054\u4ee3\u7801\u5b9e\u73b0\u4ee3\u7801\u4e2d\u7684\u53cd\u5f15\u53f7\u8f6c\u4e49\u3002</p> Markdown \u6e90\u7801\u89e3\u6790\u4e3a HTML\u6e32\u67d3\u6548\u679c <pre><code>````im``good```boy````// (1)!\n\n`im``good```boy`\n\n`` ` ``// (2)!\n</code></pre> <ol> <li> <p>\u8fd9\u91cc\u7684\u5185\u8054\u4ee3\u7801\u542b\u6709\u6700\u591a\u8fde\u7eed\u53cd\u5f15\u53f7 3 \u4e2a\uff0c\u6700\u5c11\u8fde\u7eed\u53cd\u5f15\u53f7 2 \u4e2a\u3002</p> </li> <li> <p>\u8fd9\u91cc\u5c55\u793a\u5982\u4f55\u50cf\u4e0a\u6587\u90a3\u6837\u8f6c\u4e49\u5355\u4e2a\u53cd\u5f15\u53f7\u3002\u6ce8\u610f\u53cd\u5f15\u53f7\u4e24\u4fa7\u7684\u7a7a\u683c\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u5177\u4f53\u8bed\u6cd5\u539f\u56e0\u89c1 CommonMark\u3002</p> </li> </ol> <pre><code>&lt;p&gt;&lt;code&gt;im``good```boy&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;im``good```boy&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;`&lt;/code&gt;&lt;/p&gt;\n</code></pre> <p><p><code>im``good```boy</code></p></p> <p><p><code>im``good```boy</code></p></p> <p><p><code>`</code></p> </p>"},{"location":"cs/tools/markdown/#_7","title":"\u5f3a\u8c03\u4e0e\u5f3a\u70c8\u5f3a\u8c03","text":"<p>\u5f3a\u8c03 <code>*</code> \u4e0e\u5f3a\u70c8\u5f3a\u8c03 <code>**</code> \u5728\u5177\u4f53\u4f7f\u7528\u4e2d\u5e76\u4e0d\u50cf\u4f60\u60f3\u8c61\u7684\u90a3\u4e48\u7b80\u5355\uff0c\u6211\u4eec\u901a\u8fc7\u51e0\u4e2a\u4f8b\u5b50\u6765\u770b\u770b\uff1a</p> Markdown \u6e90\u7801\u89e3\u6790\u4e3a HTML\u6e32\u67d3\u6548\u679c <pre><code>\u8fd9\u662f* \u4e00\u53e5 *\u8bdd// (1)!\n\nThis is a sentence*(n.)*.// (2)!\n</code></pre> <ol> <li> <p><code>*</code> \u5305\u88f9\u7684\u5185\u5bb9\u4e24\u4fa7\u4e0d\u80fd\u6709\u7a7a\u683c\u3002</p> </li> <li> <p><code>*</code> \u5305\u88f9\u5185\u5bb9\u7684\u5916\u4fa7\u4e3a\u5b57\u6bcd\u800c\u5185\u4fa7\u4e3a\u6807\u70b9\u7b26\u53f7\u7684\u65f6\u5019\uff0c\u5f3a\u8c03\u65e0\u6548\u3002</p> </li> </ol> <pre><code>&lt;p&gt;\u8fd9\u662f* \u4e00\u53e5 *\u8bdd&lt;/p&gt;\n&lt;p&gt;This is a sentence*(n.)*.&lt;/p&gt;\n</code></pre> <p><p>\u8fd9\u662f* \u4e00\u53e5 *\u8bdd</p> <p>This is a sentence*(n.)*.</p> </p> <p>\u5f3a\u8c03\u548c\u5f3a\u70c8\u5f3a\u8c03\u4f1a\u5728\u4f60\u610f\u60f3\u4e0d\u5230\u7684\u5730\u65b9\u51fa\u73b0\u9519\u8bef\uff0c\u800c\u4e14\u5f53\u4f60\u67e5\u9605 CommonMark \u7684\u65f6\u5019\u5c31\u4f1a\u53d1\u73b0\uff0c\u5b83\u4eec\u7684\u8bed\u6cd5\u771f\u7684\u5f88\u590d\u6742\u4e14\u4e0d\u81ea\u7136\u3002\u6211\u7684\u5efa\u8bae\u662f\uff0c\u5982\u679c\u4f60\u7684\u5f3a\u8c03\u548c\u5f3a\u70c8\u5f3a\u8c03\u65e0\u6cd5\u6210\u529f\u6e32\u67d3\uff0c\u8bf7\u7528 HTML \u6807\u7b7e <code>&lt;em&gt;</code> \u548c <code>&lt;strong&gt;</code> \u4ee3\u66ff\u5b83\u4eec\u3002</p>"},{"location":"cs/tools/markdown/#htmlmarkdown","title":"\u7528\u2009HTML\u2009\u5b8c\u5584\u2009Markdown\u2009\u8bed\u6cd5","text":"<p>Markdown \u7684\u5b9a\u4f4d\u51b3\u5b9a\u4e86\u5b83\u53ea\u4f1a\u6709\u5f88\u5c11\u4e00\u90e8\u5206\u7b80\u5355\u5e38\u7528\u7684\u8bed\u6cd5\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 HTML \u6765\u4e30\u5bcc Markdown \u7684\u8bed\u6cd5\uff0c\u8fd9\u4e3a Markdown \u63d0\u4f9b\u4e86\u975e\u5e38\u597d\u7684\u6269\u5c55\u529f\u80fd\u3002</p> <p>\u8fd9\u91cc\u7b14\u8005\u63a8\u8350\u4e00\u4e9b\u597d\u7528\u7684 HTML \u8bed\u6cd5\u3002</p> <p>Warning</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5728 Markdown \u4e2d\u4f7f\u7528 HTML \u8bed\u6cd5\uff0c\u7406\u8bba\u4e0a\u6765\u8bf4\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002\u4f46\u5177\u4f53\u5230\u6e32\u67d3\u548c\u53d1\u5e03\u8fc7\u7a0b\uff0c\u6bd4\u5982\u4ee5 Material for MkDocs \u4e3a\u4f8b\uff0c\u6709\u65f6\u5019 HTML \u8bed\u6cd5\u5728 Markdown \u4e2d\u786e\u5b9e\u4f1a\u6e32\u67d3\u51fa\u95ee\u9898\u3002\u4e0d\u8fc7\u8fd9\u79cd\u60c5\u51b5\u5f88\u5c11\u53d1\u751f\uff0c\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\u5c31\u597d\u3002</p>"},{"location":"cs/tools/markdown/#_8","title":"\u66f4\u597d\u5730\u63d2\u5165\u56fe\u7247","text":"<pre><code>&lt;div style=\"text-align: center;\"&gt;&lt;!-- (1)! --&gt;\n&lt;img src=\"url\" alt=\"alternatetext\" style=\"width: 60%;\"&gt;&lt;!-- (2)! --&gt;\n&lt;/div&gt;\n</code></pre> <ol> <li>\u8fd9\u91cc\u7684 <code>center</code> \u4e5f\u53ef\u4ee5\u6539\u6210 <code>left</code> \u548c <code>right</code>\uff1b\u4e0d\u5efa\u8bae\u4f7f\u7528 <code>&lt;center&gt;</code> \u6216\u8005 <code>&lt;div align&gt;</code>\uff0c\u5b83\u4eec\u4e0d\u88ab HTML5 \u652f\u6301\u3002</li> <li>\u5efa\u8bae\u50cf\u8fd9\u6837\u7528 <code>style</code> \u6765\u4fdd\u62a4 <code>width</code> \u548c <code>height</code>\uff0c\u4ee5\u514d\u88ab CSS \u5e72\u6270\u3002</li> </ol> <p>Markdown \u8bed\u6cd5\u4e0d\u652f\u6301\u56fe\u7247\u7684\u5927\u5c0f\u7f29\u653e\u548c\u4f4d\u7f6e\u8c03\u6574\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 HTML \u6765\u5b9e\u73b0\u3002</p>"},{"location":"cs/tools/markdown/#_9","title":"\u6587\u672c\u5c45\u4e2d\u4e0e\u5c45\u53f3","text":"<pre><code>&lt;p style=\"text-align: center\"&gt;&lt;!-- (1)! --&gt;\nThis is a sentence.\n&lt;/p&gt;\n</code></pre> <ol> <li>\u8fd9\u91cc\u7684\u8fd9\u91cc\u7684 <code>center</code> \u4e5f\u53ef\u4ee5\u6539\u6210 <code>left</code> \u548c <code>right</code>\u3002</li> </ol> <p>Markdown \u8bed\u6cd5\u4e5f\u4e0d\u652f\u6301\u6587\u672c\u7684\u5c45\u4e2d\u4e0e\u5c45\u53f3\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 HTML \u6765\u5b9e\u73b0\u3002</p>"},{"location":"cs/tools/markdown/#_10","title":"\u66f4\u591a\u7684\u5185\u8054\u6807\u8bb0","text":"<pre><code>\u8fd9\u91cc\u7528\u4e8e&lt;del&gt;\u6d4b\u8bd5&lt;/del&gt;\u5220\u9664\u7ebf\u3002\n\n\u8fd9\u91cc\u7528\u4e8e&lt;u&gt;\u6d4b\u8bd5&lt;/u&gt;\u4e0b\u5212\u7ebf\u3002\n</code></pre> <p>\u6e32\u67d3\u6548\u679c\uff1a</p> <p>\u8fd9\u91cc\u7528\u4e8e\u6d4b\u8bd5\u5220\u9664\u7ebf\u3002</p> <p>\u8fd9\u91cc\u7528\u4e8e\u6d4b\u8bd5\u4e0b\u5212\u7ebf\u3002</p>"},{"location":"cs/tools/markdown/#_11","title":"\u66f4\u591a\u7684\u7a7a\u683c\u4e0e\u7a7a\u884c","text":"<p>Markdown\uff08\u4ee5\u53ca\u6d4f\u89c8\u5668\uff09\u4f1a\u6298\u53e0\u8fde\u7eed\u7a7a\u683c\u4e0e\u7a7a\u884c\uff0c\u4f46\u6709\u7684\u65f6\u5019\u6211\u4eec\u771f\u7684\u60f3\u8981\u66f4\u591a\u7684\u7a7a\u683c\u4e0e\u7a7a\u884c\u3002</p> <ul> <li>\u66f4\u591a\u7a7a\u683c\uff1aHTML \u8f6c\u4e49\u5b57\u7b26<ul> <li><code>&amp;ensp;</code>\uff08\u534a\u89d2\u7a7a\u683c\uff0cen-space\uff09</li> <li><code>&amp;emsp;</code>\uff08\u5168\u89d2\u7a7a\u683c\uff0cem-space\uff09</li> <li><code>&amp;thinsp;</code>\uff08\u901a\u5e38\u4e3a\u5168\u89d2\u7a7a\u683c\u7684 $\\frac{1}{5}$ \u6216 $\\frac{1}{6}$\uff0cthin-space\uff09</li> </ul> </li> <li>\u66f4\u591a\u7a7a\u884c\uff1aHTML \u6807\u7b7e <code>&lt;br&gt;</code></li> </ul>"},{"location":"cs/tools/markdown/#_12","title":"\u6ce8\u91ca","text":"<p>\u53ef\u4ee5\u7528 HTML \u8bed\u6cd5 <code>&lt;!-- --&gt;</code>\uff0c\u5728 Markdown \u4e2d\u4e66\u5199\u6ce8\u91ca\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u6ce8\u91ca\u5199\u6cd5\u4e0d\u4ec5\u5728 Markdown \u6e90\u6587\u4ef6\u4e2d\u53ef\u89c1\uff0c\u5728\u6e32\u67d3\u51fa\u7684 HTML \u6587\u4ef6\u4e2d\u4e5f\u53ef\u89c1\uff0c\u53ea\u662f\u4e0d\u5448\u73b0\u5728\u6d4f\u89c8\u5668\u4e0a\u800c\u5df2\uff1b</p>"},{"location":"cs/tools/markdown/#mkdocs","title":"MkDocs\u2009\u6742\u8bb0","text":"<p>Abstract</p> <p>\u7b14\u8005\u901a\u5e38\u4f7f\u7528 MkDocs \u6765\u4f5c\u4e3a\u53d1\u5e03\u5668\uff08\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff09\uff0c\u4ece\u800c\u8fdb\u884c\u4e2a\u4eba\u7b14\u8bb0\u7f51\u7ad9\u5236\u4f5c\u3002</p> <p>\u63a5\u4e0b\u53bb\u7684\u7bc7\u5e45\u5c06\u4f1a\u6536\u96c6\u4e00\u4e9b\u7b14\u8005\u4f7f\u7528 MkDocs \u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\u3002</p> <p>\u7b14\u8005\u7684\u5de5\u5177\u7248\u672c</p> <p>Material for MkDocs\uff1a9.4.6 (MkDocs\uff1a1.5.3)</p>"},{"location":"cs/tools/markdown/#github-actions","title":"GitHub Actions\u2009\u4e0e\u7248\u672c\u9690\u60a3","text":"<p>\u5f88\u591a\u4eba\u4f1a\u7528 GitHub Actions \u6765\u81ea\u52a8\u5316\u7b14\u8bb0\u7f51\u7ad9\u7684\u90e8\u7f72\uff0c\u4f46\u662f\u5f88\u53ef\u80fd\u5ffd\u7565\u4e86\u5176\u4e2d\u7684\u7248\u672c\u9690\u60a3\u3002\u6211\u4eec\u9996\u5148\u6765\u770b\u770b <code>.github/workflows/xxx.yml</code> \u4e2d\u7684\u8fd9\u90e8\u5206\u5185\u5bb9\uff1a</p> <pre><code>jobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: pip install mkdocs-material # (1)!\n      - run: mkdocs gh-deploy --force\n</code></pre> <ol> <li>\u8fd9\u53e5\u547d\u4ee4\u901a\u8fc7 pip \u4e0b\u8f7d\u4e86\u6700\u65b0\u7248\u672c\u7684 Material for MkDocs</li> </ol> <p>\u8fd9\u91cc\u5b58\u5728\u7684\u9690\u60a3\u5728\u4e8e\uff0c\u6bcf\u6b21\u8fd0\u884c GitHub Actions \u90e8\u7f72\u7f51\u7ad9\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7684\u90fd\u662f\u6700\u65b0\u7248\u672c\u7684 Material for MkDocs\uff0c\u4f46\u6211\u4eec\u5728\u672c\u5730\u901a\u8fc7 <code>mkdocs serve</code> \u6784\u5efa\u7f51\u7ad9\u7684\u65f6\u5019\u6240\u4f7f\u7528\u7684\u5374\u662f\u672c\u5730\u7684 Material for MkDocs\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5982\u679c\u672c\u5730\u7248\u672c\u6ca1\u6709\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\uff0c\u90a3\u4e48\u672c\u5730\u6784\u5efa\u548c\u5b9e\u9645\u90e8\u7f72\u5c31\u53ef\u80fd\u51fa\u73b0\u5dee\u5f02\u3002\u5982\u679c\u4f60\u53d1\u73b0\u81ea\u5df1\u7684\u672c\u5730\u6784\u5efa\u548c\u5b9e\u9645\u90e8\u7f72\u51fa\u6765\u7684\u7f51\u7ad9\u6709\u51fa\u5165\uff0c\u4e0d\u59a8\u8003\u8651\u4e00\u4e0b\u53ef\u80fd\u662f\u7248\u672c\u5dee\u5f02\u95ee\u9898\u5bfc\u81f4\u7684\u3002</p> <p>\u662f\u5426\u8981\u628a\u8f6f\u4ef6\u4fdd\u6301\u6700\u65b0\u7248\u672c\u8fd9\u4e2a\u95ee\u9898\uff0c\u89c1\u4ec1\u89c1\u667a\u3002\u800c\u6211\u4eec\u4e5f\u6709\u76f8\u5e94\u7684\u4e24\u79cd\u89e3\u51b3\u65b9\u6848\uff1a</p> <ul> <li>\u5728\u672c\u5730\u901a\u8fc7 <code>pip install --upgrade --force-reinstall mkdocs-material</code> \u6765\u628a\u672c\u5730\u7248\u672c\u4fdd\u6301\u6700\u65b0\u3002</li> <li>\u5728 <code>.github/workflows/xxx.yaml</code> \u4e2d\u5c06\u76f8\u5e94\u4ee3\u7801\u4fee\u6539\u4e3a <code>run: pip install mkdocs-material==9.4.6</code>\uff0c\u4ece\u800c\u786e\u4fdd GitHub Actions \u7528 9.4.6 \u7248\u672c\u6765\u90e8\u7f72\u7f51\u7ad9\u3002</li> </ul> \u63d0\u9192\u4e00\u4e0b <p>Material for MkDocs \u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u76f8\u5e94\u7248\u672c\u7684 MkDocs\uff0c\u5982\u679c\u5fd8\u8bb0\u4e86\u8fd9\u4ef6\u4e8b\u7684\u8bdd\uff0c\u4e0a\u6587\u770b\u8d77\u6765\u53ef\u80fd\u4f1a\u6709\u4e9b\u5947\u602a\u3002</p>"},{"location":"cs/tools/markdown/#_13","title":"\u6587\u4ef6\u8def\u5f84\u5e94\u8be5\u600e\u4e48\u5199","text":"<p>MkDocs \u5728 1.5.0 \u7684\u7248\u672c\u4e2d\u66f4\u65b0\u4e86\u5bf9\u94fe\u63a5\u6709\u6548\u6027\u7684\u7ea6\u675f\u89c4\u5219\uff0c\u4e00\u4e9b\u4e0d\u89c4\u8303\u7684\u8def\u5f84\u5199\u6cd5\u4f1a\u88ab\u62a5\u544a\u51fa\u6765\uff0c\u6bd4\u5982\uff1a</p> <pre><code>INFO - Doc file 'example.md' contains an absolute link '/foo/bar/', it was left as is. Did you mean 'foo/bar.md'?\nINFO - Doc file 'example.md' contains an absolute link '/assets/images/1.jpg', it was left as is. Did you mean '../../assets/images/1.jpg'?\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u4f8b\u5b50\u4e4b\u6240\u4ee5\u62a5\u9519\uff0c\u6309\u7167 MkDocs \u7684\u8bf4\u6cd5\uff0c\u662f\u56e0\u4e3a\u8fd9\u6837\u7684\u4ee5 <code>/</code> \u5f00\u5934\u6216\u8005\u7ed3\u5c3e\u7684\u8def\u5f84\u5199\u6cd5\u662f fragile \u7684\u3002</p> <ul> <li>\u5bf9\u4e8e\u4ee5 <code>/</code> \u7ed3\u5c3e\u7684\u8def\u5f84\uff0c\u6211\u89c9\u5f97\u786e\u5b9e\u5e94\u8be5\u6539\u4e3a <code>.md</code> \u7ed3\u5c3e\uff0c\u6307\u5b9a\u6587\u4ef6\u7c7b\u578b\u4e0d\u662f\u4e00\u4ef6\u574f\u4e8b\u3002</li> <li>\u5bf9\u4e8e\u4ee5 <code>/</code> \u5f00\u5934\u7684\u8def\u5f84\uff0c\u6211\u60f3\u6211\u4f1a\u7ee7\u7eed\u8fd9\u6837\u5199\u3002<ul> <li><code>/</code> \u5728\u8fd9\u91cc\u4ee3\u8868\u6839\u76ee\u5f55 <code>docs/</code>\uff0c\u6211\u8ba4\u4e3a\u4ece\u6839\u76ee\u5f55\u5f80\u4e0b\u627e\u6587\u4ef6\uff0c\u8981\u6bd4\u4ece\u5f53\u524d\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u5f80\u4e0a\u627e\u6587\u4ef6\u66f4\u52a0\u81ea\u7136\u3002   \u6bd4\u5982\u5728\u63d2\u5165\u4e00\u5f20\u56fe\u7247\u7684\u65f6\u5019\uff0c\u7ea0\u7ed3\u5230\u5e95\u662f <code>../</code> \u8fd8\u662f <code>../../</code> \u771f\u7684\u662f\u4ef6\u5f88\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002</li> </ul> </li> </ul> <p>\u5982\u679c\u4f60\u4e0d\u60f3\u770b\u5230\u8fd9\u4e9b INFO \u63d0\u793a\uff0c\u53ef\u4ee5\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff08\u5c3d\u7ba1 MkDocs \u5e76\u4e0d\u63a8\u8350\u8fd9\u4e48\u505a\uff09\uff1a</p> <pre><code>validation:\n  absolute_links: ignore\n</code></pre>"},{"location":"cs/tools/markdown/#heti","title":"heti\u2009\u4e0e\u4e2d\u897f\u6587\u6df7\u6392\u4f18\u5316","text":"<p>\u539f\u5219\u4e0a\uff0c\u6c49\u5b57\u4e0e\u897f\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u95f4\u4f7f\u7528\u4e0d\u591a\u4e8e\u56db\u5206\u4e4b\u4e00\u4e2a\u6c49\u5b57\u5bbd\u7684\u5b57\u8ddd\u6216\u7a7a\u767d\u3002</p> <p><p>\u2014\u2014\u2014\u2014  CLReq\uff08\u4e2d\u6587\u6392\u7248\u9700\u6c42\uff09</p></p> <p>\u7b14\u8005\u4f7f\u7528 mkdocs-heti-plugin \u6765\u4f18\u5316\u4e2d\u897f\u6587\u6df7\u6392\uff0c\u5728\u4f7f\u7528\u8fd9\u4e2a\u63d2\u4ef6\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u4e00\u4e9b\u503c\u5f97\u5173\u6ce8\u7684\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u5982\u4f55\u8ba9 heti \u5ffd\u7565\u67d0\u90e8\u5206\u6587\u672c\uff1f    \u53ef\u4ee5\u901a\u8fc7\u5bf9 <code>&lt;span&gt;</code>\u3001<code>&lt;p&gt;</code>\u3001<code>&lt;div&gt;</code> \u7b49\u6807\u7b7e\u8bbe\u7f6e <code>style=\"heti-skip\"</code> \u5b9e\u73b0\u76f8\u5e94\u6548\u679c\u3002</p> </li> <li> <p>heti \u65e0\u6cd5\u6e32\u67d3\u9875\u9762\u5de6\u53f3\u4e24\u4fa7\u7684\u76ee\u5f55\u548c\u7d22\u5f15\uff08nav \u548c table of contents\uff09\uff1f    \u63d2\u4ef6\u672c\u8eab\u6682\u65f6\u65e0\u6cd5\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u53ef\u4ee5\u624b\u52a8\u5728\u4e2d\u897f\u6587\u6df7\u6392\u5904\u63d2\u5165 <code>&amp;thinsp;</code> \u51d1\u5408\u7528\u3002</p> </li> </ol>"},{"location":"cs/tools/markdown/#_14","title":"\u66f4\u7f8e\u89c2\u7684\u6807\u9898\u6837\u5f0f","text":"<p>Material for MkDocs \u7684\u6807\u9898\u5b57\u91cd\u8bbe\u8ba1\u5f97\u4e0d\u591f\u5408\u7406\uff08\u5bf9\u4e8e\u4e2d\u6587\u6392\u7248\u800c\u8a00\uff09\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e CSS \u6765\u4f18\u5316\u6807\u9898\u5b57\u91cd\uff1a</p> <code>mkdocs.yml</code><code>extra.css</code> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <pre><code>.md-typeset h1, .md-typeset h2 {\n    font-weight: 600;\n}\n.md-typeset h3 {\n    font-weight: 500;\n}\n</code></pre> <p>source: https://github.com/TonyCrane/lab-hypotensor/</p> <p>\u5728\u6807\u9898\u524d\u9762\u6dfb\u52a0\u7f16\u53f7\u662f\u4e00\u79cd\u5f88\u4e0d\u9519\u7684\u4f18\u5316\u65b9\u6848\u3002\u624b\u52a8\u6dfb\u52a0\u6bd4\u8f83\u7e41\u7410\uff0c\u800c\u4e14\u4f1a\u5bfc\u81f4\u7d22\u5f15\uff08table of contents\uff09\u4e5f\u51fa\u73b0\u7f16\u53f7\uff0c\u5f71\u54cd\u89c2\u611f\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e CSS \u6765\u5b9e\u73b0\u81ea\u52a8\u7f16\u53f7\uff1a</p> <code>mkdocs.yml</code><code>extra.css</code> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <pre><code>h1 {\n    counter-reset: h2;\n}\nh2 {\n    counter-reset: h3;\n}\nh3 {\n    counter-reset: h4;\n}\nh4 {\n    counter-reset: h5;\n}\nh5 {\n    counter-reset: h6;\n}\nh2:before {\n    counter-increment: h2;\n    content: counter(h2);\n    margin-right: 0.8rem;\n}\nh3:before {\n    counter-increment: h3;\n    content: counter(h2) \".\" counter(h3);\n    margin-right: 0.8rem;\n}\nh4:before {\n    counter-increment: h4;\n    content: counter(h2) \".\" counter(h3) \".\" counter(h4);\n    margin-right: 0.8rem;\n}\nh5:before {\n    counter-increment: h5;\n    content: counter(h2) \".\" counter(h3) \".\" counter(h4) \".\" counter(h5);\n    margin-right: 0.8rem;\n}\nh6:before {\n    counter-increment: h6;\n    content: counter(h2) \".\" counter(h3) \".\" counter(h4) \".\" counter(h5) \".\" counter(h6);\n    margin-right: 0.8rem;\n}\n</code></pre> <p>source: https://github.com/TonyCrane/lab-hypotensor/</p>"},{"location":"cs/tools/markdown/#_15","title":"\u8868\u683c\u5c45\u4e2d\u6709\u90a3\u4e48\u96be\u5417","text":""},{"location":"cs/tools/markdown/#katex","title":"KaTeX","text":""},{"location":"cs/tools/markdown/#_16","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>CommonMark</li> <li>\u8ba1\u7b97\u673a\u7c7b\u5b9e\u9a8c\u6587\u6863\u964d\u538b\u5b9d\u5178\uff08\u7f16\u5199\u89c4\u8303\uff09</li> <li>\u6d59\u6c5f\u5927\u5b66\u7cfb\u5217\u670b\u8f88\u8f85\u5b66\u300c\u5b9e\u7528\u6280\u80fd\u62fe\u9057\u300d\u8bfe\u7a0b\u8d44\u6599\u4ed3\u5e93</li> </ul>"},{"location":"math/","title":"Mathematics","text":"<p> \u7ea6 24 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u8fd9\u91cc\u7528\u6765\u5b58\u653e\u6570\u5b66\u7684\u7b14\u8bb0\uff01</p>"},{"location":"math/#_1","title":"\u66f4\u65b0\u4e2d","text":"<ul> <li>\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1</li> </ul>"},{"location":"math/probability/probability_statistics/","title":"\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1","text":"<p> \u7ea6 116 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66\u300a\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u300b\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\u8bfe\u7a0b\u7684\u6838\u5fc3\u7b14\u8bb0\u5df2\u7ecf\u66f4\u65b0\u5230 Isshiki\u4fee's Notebook \u4e2d\uff0c\u8bf7\u79fb\u6b65\u4fee\u4f6c\u7684\u6982\u7edf\u7b14\u8bb0</li> <li>\u8fd9\u91cc\u4ec5\u6536\u5f55\u90e8\u5206\u6982\u7edf\u76f8\u5173\u7684\u77e5\u8bc6\u4e0e\u601d\u8003\uff0c\u4f5c\u4e3a\u4e0a\u8ff0\u7b14\u8bb0\u7684\u8865\u5145\u5185\u5bb9</li> </ul>"},{"location":"math/probability/probability_statistics/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u6982\u7387\u8bba\u57fa\u7840</li> <li>\u6570\u7406\u7edf\u8ba1\u57fa\u7840<ul> <li>\u5047\u8bbe\u68c0\u9a8c\u6ca1\u5199\uff0c\u8865\u5929\u65f6\u5b66\u7684\uff0c\u8003\u5b8c\u4e5f\u4e0d\u60f3\u56de\u6765\u8865\u4e86</li> </ul> </li> </ul>"},{"location":"math/probability/probability_statistics/note1/","title":"\u6982\u7387\u8bba\u57fa\u7840","text":"<p> \u7ea6 1719 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p>"},{"location":"math/probability/probability_statistics/note1/#_2","title":"\u6982\u7387\u8bba\u7684\u57fa\u672c\u6982\u5ff5","text":""},{"location":"math/probability/probability_statistics/note1/#_3","title":"\u5168\u6982\u7387\u516c\u5f0f\u4e0e\u8d1d\u53f6\u65af\u516c\u5f0f","text":"<ul> <li>\u5168\u6982\u7387\u516c\u5f0f\u662f\u300c\u627e\u7ed3\u679c\u300d\uff0c\u800c\u8d1d\u53f6\u65af\u516c\u5f0f\u662f\u300c\u627e\u539f\u56e0\u300d</li> <li>\u5168\u6982\u7387\u516c\u5f0f\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u300c\u5212\u5206\u300d</li> <li>\u8d1d\u53f6\u65af\u516c\u5f0f\u4e2d\u6709\u4e00\u4e9b\u6982\u5ff5\u503c\u5f97\u6ce8\u610f\uff1a<ul> <li>\u5148\u9a8c\u6982\u7387\uff1a$P(B)$</li> <li>\u540e\u9a8c\u6982\u7387\uff1a$P(B|A)$</li> <li>\u4f3c\u7136\u6982\u7387\uff1a$P(A|B)$</li> </ul> </li> </ul> \u5168\u6982\u7387\u516c\u5f0f\u4e0e\u8d1d\u53f6\u65af\u516c\u5f0f <p>$$ P(A) = \\sum_{j=1}^n{P(B_j) P(A|B_j)} $$</p> <p>$$ P(B_i|A) = \\frac{P(AB_i)}{P(A)} = \\frac{P(B_i) P(A|B_i)}{\\sum_{j=1}^n{P(B_j) P(A|B_j)}} $$</p>"},{"location":"math/probability/probability_statistics/note1/#_4","title":"\u968f\u673a\u53d8\u91cf\u53ca\u5176\u6982\u7387\u5206\u5e03","text":""},{"location":"math/probability/probability_statistics/note1/#_5","title":"\u968f\u673a\u53d8\u91cf\u8865\u5145","text":"<ul> <li>\u79bb\u6563\u578b\u548c\u8fde\u7eed\u578b\u662f\u5e38\u89c1\u7684\u4e24\u7c7b\u968f\u673a\u53d8\u91cf\uff0c\u4f46\u968f\u673a\u53d8\u91cf\u5e76\u4e0d\u53ea\u6709\u8fd9\u4e24\u79cd\u3002</li> <li>\u4e66\u5199\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03\u5f8b\u65f6\u5343\u4e07\u4e0d\u8981\u6f0f\u6389\u968f\u673a\u53d8\u91cf\u7684\u53ef\u80fd\u53d6\u503c\u3002\u4f8b\u5982\uff1a$k=1,2,...$</li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_6","title":"\u5206\u5e03\u51fd\u6570\u8865\u5145","text":"<ul> <li>\u5206\u5e03\u51fd\u6570\u901a\u5e38\u5199\u6210\u5927\u5199\u5b57\u6bcd\uff0c\u4f8b\u5982 $F(x)$</li> <li>\u5206\u5e03\u51fd\u6570\u7684\u5b9a\u4e49\u57df\u4e3a\u5168\u4f53\u5b9e\u6570</li> <li>\u5206\u5e03\u51fd\u6570\u7684\u5206\u6bb5\u5199\u6cd5\uff0c\u6309\u7167\u300c\u5de6\u95ed\u53f3\u5f00\u300d\u7684\u533a\u95f4\u8fdb\u884c\u5206\u6bb5\u662f\u4e00\u4e2a\u8f83\u597d\u7684\u4e60\u60ef\uff08\u4e3b\u8981\u9488\u5bf9\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u51fd\u6570\uff09</li> <li>\u652f\u6491\uff08support\uff09\u6307\u7684\u662f\u4f7f\u6982\u7387\u5206\u5e03\u4e3a\u6b63\u7684\u5bc6\u5ea6\u7684\u968f\u673a\u53d8\u91cf\u7684\u53d6\u503c\u7684\u96c6\u5408\uff0c\u5b9a\u4e49\u4e3a $ \\lbrace x: f(x)&gt;0\\rbrace $</li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_7","title":"\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7406\u89e3","text":"<p>\u6709\u4e00\u4e2a\u5e38\u89c1\u7684\u8bef\u533a\uff0c\u5c31\u662f\u9519\u628a\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u300c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u503c\u300d\u548c\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u300c\u6982\u7387\u300d\u76f4\u63a5\u5212\u7b49\u53f7\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u503c\u4ee3\u8868\u7684\u662f\u6982\u7387\u5206\u5e03\u51fd\u6570\u7684\u53d8\u5316\u7387\uff08\u6240\u4ee5\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u503c\u5927\u4e8e $1$ \u4e5f\u662f\u5f88\u5408\u7406\u7684\uff09\uff1b\u800c\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u6982\u7387\uff0c\u53ea\u6709\u67d0\u6bb5\u533a\u95f4\u7684\u6982\u7387\u662f\u6709\u610f\u4e49\u7684\uff0c\u800c\u67d0\u4e2a\u70b9\u7684\u6982\u7387\u6052\u4e3a $0$\u3002</p> <p>\u90a3\u4e48\uff0c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u548c\u6982\u7387\u7684\u8054\u7cfb\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\u7ed3\u8bba\u662f\uff0c\u67d0\u6bb5\u533a\u95f4\u4e0a\u300c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u9762\u79ef\uff08\u79ef\u5206\uff09\u300d\u7b49\u4e8e\u968f\u673a\u53d8\u91cf\u843d\u5728\u8fd9\u6bb5\u533a\u95f4\u4e0a\u7684\u6982\u7387\u3002</p> <p>\u5173\u4e8e\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff0c\u6211\u4eec\u6709\u66f4\u52a0\u76f4\u89c2\u7684\u89e3\u91ca\u3002\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u503c\u8f83\u5927\u7684\u5730\u65b9\uff0c\u4ee3\u8868\u8fd9\u4e2a\u70b9\u9644\u8fd1\u7684\u6982\u7387\u300c\u5bc6\u5ea6\u300d\u8f83\u5927\uff0c\u4e5f\u5c31\u662f\u8bf4\u968f\u673a\u53d8\u91cf\u843d\u5728\u8fd9\u4e2a\u70b9\u9644\u8fd1\u7684\u5355\u4f4d\u957f\u5ea6\u533a\u95f4\u4e0a\u7684\u6982\u7387\u8f83\u5927\u3002\u7528\u6570\u5b66\u516c\u5f0f\u8868\u793a\u5c31\u662f $f(x) \\Delta x = P = \\Delta F(x)$\u3002</p>"},{"location":"math/probability/probability_statistics/note1/#_8","title":"\u6307\u6570\u5206\u5e03\u7684\u65e0\u8bb0\u5fc6\u6027","text":"<p>\u5047\u8bbe $t_0&gt;0$\uff0c$t&gt;0$\uff0c</p> <p>$$ \\begin{aligned} P(X&gt;t_0+t \\;\\; | \\;\\; X&gt;t_0 ) &amp; = \\frac{P(X&gt;t_0+t)}{P(X&gt;t_0)} \\cr &amp; = \\frac{1-F(t_0+t)}{1-F(t_0)} \\cr &amp; = e^{-\\lambda t} = P(X&gt;t) \\end{aligned} $$</p> <p>$$ \\begin{aligned} P(X\\lt t_0+t \\;\\; | \\;\\; X&gt;t_0) &amp; = \\frac{P(t_0\\lt X\\lt t_0+t)}{P(X&gt;t_0)} \\cr &amp; = \\frac{F(t_0+t)-F(t_0)}{1-F(t_0)} \\cr &amp; = 1-e^{-\\lambda t} = P(X&lt;t) \\end{aligned} $$</p> \u65e0\u8bb0\u5fc6\u6027\u7684\u4e00\u4e2a\u4f8b\u5b50 <p>\u5047\u8bbe\u8bbe\u5907\u65e0\u6545\u969c\u8fd0\u884c\u7684\u65f6\u95f4 $T$ \u670d\u4ece\u6307\u6570\u5206\u5e03\u3002\u5df2\u77e5\u8bbe\u5907\u65e0\u6545\u969c\u8fd0\u884c\u4e8610\u4e2a\u5c0f\u65f6\uff0c\u6c42\u8be5\u8bbe\u5907\u518d\u65e0\u6545\u969c\u81f3\u5c11\u8fd0\u884c8\u4e2a\u5c0f\u65f6\u7684\u6982\u7387\u3002</p> <p>$$ P\\lbrace T\\geq 18 \\; | \\; T&gt;10 \\rbrace = \\frac{P\\lbrace T&gt;18\\rbrace }{P\\lbrace T&gt;10\\rbrace} = e^{-8\\lambda} = P\\lbrace T&gt;8\\rbrace $$</p> <p>\u6ce8\u610f\u5230\uff0c\u8fd9\u4e00\u6761\u4ef6\u6982\u7387\u4e0e\u65e0\u6761\u4ef6\u4e0b\u65e0\u6545\u969c\u8fd0\u884c8\u5c0f\u65f6\u7684\u6982\u7387\u6ca1\u6709\u533a\u522b\u3002</p>"},{"location":"math/probability/probability_statistics/note1/#_9","title":"\u6b63\u6001\u5206\u5e03\u6807\u51c6\u5316","text":"<p>\u5f53 $X\\sim N(\\mu,\\sigma^2)$ \u65f6\uff1a</p> <p>$$ P(X\\leq b) = \\int_{-\\infty}^b \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu) ^2}{2\\sigma ^2}} \\mathrm{d}x $$</p> <p>\u505a\u53d8\u6362\uff1a$\\frac{x-\\mu}{\\sigma} = t$</p> <p>$$ \\begin{aligned} P(X\\leq b) &amp; = \\int_{-\\infty}^{\\frac{b-\\mu}{\\sigma}} \\frac{1}{\\sqrt{2\\pi}} e^{-\\frac{t ^2}{2}} \\mathrm{d}t \\cr &amp; = \\Phi(\\frac{b-\\mu}{\\sigma}) \\end{aligned} $$</p> <p>\u6362\u8a00\u4e4b\uff0c\u5f53 $X\\sim N(\\mu,\\sigma^2)$ \u65f6\uff0c$\\frac{X-\\mu}{\\sigma}\\sim N(0,1)$</p> <p>\u6807\u51c6\u6b63\u6001\u5206\u5e03\u8868</p> <p>https://en.wikipedia.org/wiki/Standard_normal_table#Cumulative_(less_than_Z)</p>"},{"location":"math/probability/probability_statistics/note1/#_10","title":"\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u5206\u5e03","text":"<p>\u4e00\u822c\u5730\uff0c\u82e5\u5df2\u77e5 $X$ \u7684\u6982\u7387\u5206\u5e03\uff0c$Y=g(X)$\uff0c\u6c42 $Y$ \u7684\u6982\u7387\u5206\u5e03\u7684\u601d\u8def\u4e3a\uff1a\u5148\u7ed9\u51fa $Y$ \u7684\u53ef\u80fd\u53d6\u503c\uff0c\u518d\u5229\u7528\u300c\u7b49\u4ef7\u4e8b\u4ef6\u300d\u6c42\u89e3 $Y$ \u7684\u6982\u7387\u5206\u5e03\u51fd\u6570\u6216\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u3002</p> <ul> <li>\u5bf9\u4e8e\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\uff1b</li> <li>\u5bf9\u4e8e\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u6c42\u89e3\uff1a<ol> <li>\u5199\u51fa $Y$ \u7684\u6982\u7387\u5206\u5e03\u51fd\u6570 $F_Y(y)=P(Y \\leq y)$\uff1b</li> <li>\u627e\u51fa $(Y \\leq y)$ \u7684\u7b49\u4ef7\u4e8b\u4ef6 $(X \\in D)$\uff0c\u5f97\u5230 $F_Y(y)=P(X \\in D)$\uff0c\u89e3\u51fa $Y$ \u7684\u6982\u7387\u5206\u5e03\u51fd\u6570\uff1b</li> <li>\u8fdb\u800c\u6c42\u89e3 $Y$ \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 $f_Y(y) = \\frac{\\mathrm{d}}{\\mathrm{d}y} F_Y(y)$\uff1b    \u7279\u522b\u5730\uff0c\u82e5\u89e3\u51fa\u6982\u7387\u5206\u5e03\u51fd\u6570\u4e3a $F_Y(y) = F_X(h(y))$\uff0c\u5219\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e5f\u53ef\u5199\u6210 $f_Y(y) = \\frac{\\mathrm{d}}{\\mathrm{d}(h(y))} F_X(h(y)) \\cdot \\frac{\\mathrm{d}(h(y))}{\\mathrm{d}y} = f_X(h(y)) \\cdot h^{\\prime}(y)$\uff1b</li> </ol> </li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_11","title":"\u591a\u5143\u968f\u673a\u53d8\u91cf\u53ca\u5176\u5206\u5e03","text":""},{"location":"math/probability/probability_statistics/note1/#_12","title":"\u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u8865\u5145","text":"<p>\u5bf9\u4e8e\u4efb\u4f55\u5206\u5e03\u5f8b\u90fd\u6709\u4e24\u6761\u6027\u8d28\uff08\u5bf9\u8054\u5408\u3001\u8fb9\u9645\u3001\u6761\u4ef6\u5206\u5e03\u5f8b\u90fd\u6210\u7acb\uff09\uff1a</p> <ul> <li>$p_{ij} \\geq 0, \\; i,j=1,2,\\dots$</li> <li>$\\sum_{i=1}^{\\infty} \\sum_{j=1}^{\\infty} P_{ij} = 1$</li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_13","title":"\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u51fd\u6570\u8865\u5145","text":"<ul> <li>\u8054\u5408\u5206\u5e03\u51fd\u6570 $F(x,y) = P(X \\leq x, Y \\leq y)$ \u662f\u4e8c\u5143\u51fd\u6570</li> <li>\u8fb9\u9645\u5206\u5e03\u51fd\u6570 $F_X(x) = P(X \\leq x) = lim_{y \\rarr +\\infty}F(x,y)$ \u662f\u5173\u4e8e $x$ \u7684\u4e00\u5143\u51fd\u6570</li> <li>\u6761\u4ef6\u5206\u5e03\u51fd\u6570 $F_{X \\mid Y}(x \\mid y) = P(X \\leq x \\mid Y=y)$ \u662f\u5173\u4e8e $x$ \u7684\u4e00\u5143\u51fd\u6570<ul> <li>$\\lim_{\\epsilon \\rarr 0^+}P(X\\leq x\\mid y&lt;Y\\leq y+\\epsilon)$ \u4e5f\u8bb0\u4e3a $P(X \\leq x \\mid Y=y)$\uff0c\u8bf7\u7279\u522b\u6ce8\u610f\u8fd9\u4e2a\u8bb0\u53f7\u6240\u5e26\u6765\u7684\u4e24\u79cd\u7406\u89e3</li> </ul> </li> </ul> <p>\u8054\u5408\u5206\u5e03\u3001\u8fb9\u9645\u5206\u5e03\u3001\u6761\u4ef6\u5206\u5e03\u6ee1\u8db3\u5982\u4e0b\u5173\u7cfb\uff1a</p> <p> </p>"},{"location":"math/probability/probability_statistics/note1/#_14","title":"\u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u8865\u5145","text":"<ul> <li>\u6761\u4ef6\u5bc6\u5ea6\u51fd\u6570\u7684\u91cd\u8981\u6027\u8d28\uff1a<ul> <li>$f(x,y) = f_{X|Y}(x|y)f_Y(y) = f_{Y|X}(y|x)f_X(x)$</li> <li>\u76f4\u89c2\u610f\u4e49\uff1a   $f_{X|Y}(x \\mid y) \\Delta x = \\frac{f(x,y)\\Delta x \\Delta y}{f_Y(y)\\Delta y} \\approx \\frac{P(x&lt;X\\leq x+\\Delta x, \\; y&lt;Y\\leq y+\\Delta y)}{P(y&lt;Y\\leq y+\\Delta y)} = P(x&lt;X\\leq x+\\Delta x \\mid y&lt;Y\\leq y+\\Delta y)$</li> </ul> </li> <li>\u4e8c\u7ef4\u5747\u5300\u5206\u5e03\u7684\u6761\u4ef6\u5206\u5e03\u4e3a\u4e00\u7ef4\u5747\u5300\u5206\u5e03</li> <li>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\u7684\u8fb9\u9645\u5206\u5e03\u548c\u6761\u4ef6\u5206\u5e03\u4e3a\u4e00\u7ef4\u6b63\u6001\u5206\u5e03\uff08\u4e0d\u4f9d\u8d56\u4e8e $\\rho$\uff09<ul> <li>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\u7684\u8bb0\u53f7\uff1a$(X,Y) \\sim N({\\mu}_1, \\; {\\mu_2}; \\; {\\sigma}_1^2, \\; {\\sigma}_2^2; \\; \\rho)$</li> </ul> </li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_15","title":"\u968f\u673a\u53d8\u91cf\u7684\u72ec\u7acb\u6027\u8865\u5145","text":"<ul> <li>\u82e5 $(X,Y)$ \u662f\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff0c\u5219 $X,Y$ \u76f8\u4e92\u72ec\u7acb\u7b49\u4ef7\u4e8e $p_{ij} = p_{i\\cdot}p_{\\cdot j}$ \u5bf9\u4e00\u5207 $i,j$ \u90fd\u6210\u7acb</li> <li>\u82e5 $(X,Y)$ \u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u5219 $X,Y$ \u76f8\u4e92\u72ec\u7acb\u7b49\u4ef7\u4e8e $f(x,y) = f_X(x)f_Y(y)$ \u603b\u662f\u6210\u7acb\uff0c\u5e73\u9762\u4e0a\u201c\u9762\u79ef\u201d\u4e3a\u96f6\u7684\u96c6\u5408\u9664\u5916\uff08\u53ef\u4ee5\u5728\u4e0d\u8fde\u7eed\u70b9\u4e0a\u4e0d\u76f8\u7b49\uff09<ul> <li>\u6b64\u5916\uff0c$X,Y$ \u76f8\u4e92\u72ec\u7acb\u4e5f\u7b49\u4ef7\u4e8e\u5b58\u5728\u4e00\u5143\u51fd\u6570 $m,n$\uff0c\u4f7f\u5f97 $f(x,y)=m(x)n(y)\\;,\\;|x|&lt;+\\infty,|y|&lt;-\\infty$\uff08\u6ce8\u610f\uff1a\u8054\u5408\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u5f0f\u548c\u5b9a\u4e49\u57df\u5747\u987b\u53ef\u5206\uff09</li> <li>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\u662f\u72ec\u7acb\u7684\uff0c\u7b49\u4ef7\u4e8e $\\rho = 0$</li> </ul> </li> <li>$n$ \u7ef4\u968f\u673a\u53d8\u91cf\u72ec\u7acb\u6027\u76f8\u5173\u5b9a\u7406\uff1a<ul> <li>\u8bbe $(X_1,X_2,\\cdots ,X_m)$ \u4e0e $(Y_1,Y_2,\\cdots ,Y_n)$ \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 $X_i(i=1,2,\\cdots ,m)$ \u4e0e $Y_j(j=1,2,\\cdots ,n)$ \u76f8\u4e92\u72ec\u7acb</li> <li>\u8bbe $(X_1,X_2,\\cdots ,X_m)$ \u4e0e $(Y_1,Y_2,\\cdots ,Y_n)$ \u76f8\u4e92\u72ec\u7acb\uff0c\u82e5 $h(x_1,x_2,\\cdots ,x_m)$ \u4e0e $g(y_1,y_2,\\cdots ,y_n)$ \u662f\u8fde\u7eed\u51fd\u6570\uff0c\u5219 $h(X_1,X_2,\\cdots ,X_m)$ \u4e0e $g(Y_1,Y_2,\\cdots ,Y_n)$ \u76f8\u4e92\u72ec\u7acb</li> </ul> </li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_16","title":"\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u5206\u5e03","text":"<ul> <li>$Z=X+Y$ \u7684\u5206\u5e03\uff08\u8fd9\u91cc\u8ba8\u8bba\u8fde\u7eed\u578b\uff0c\u79bb\u6563\u578b\u53ea\u9700\u628a\u79ef\u5206\u7b26\u53f7\u6362\u6210\u6c42\u548c\u7b26\u53f7\u5373\u53ef\uff09<ul> <li>$f_Z(z)=\\int_{-\\infty}^{+\\infty}f(z-y,y)\\mathrm{d}y=\\int_{-\\infty} ^ {+\\infty}f(x,z-x)\\mathrm{d}x$\uff08$x$\uff0c$y$\u662f\u5bf9\u79f0\u7684\uff09</li> <li>\u5f53 $X$ \u548c $Y$ \u76f8\u4e92\u72ec\u7acb\u65f6\uff0c$Z$ \u7684\u5bc6\u5ea6\u51fd\u6570\u516c\u5f0f\u4e5f\u79f0\u4e3a\u5377\u79ef\u516c\u5f0f\uff1a$f_X*f_Y=\\int_{-\\infty}^{+\\infty}f_X(z-y)f_Y(y)\\mathrm{d}y=\\int_{-\\infty} ^ {+\\infty}f_X(x)f_Y(z-x)\\mathrm{d}x$</li> </ul> </li> <li>$M=max(X,Y)$ \u4e0e $N=min(X,Y)$ \u7684\u5206\u5e03\uff08\u57fa\u4e8e $X$ \u548c $Y$ \u76f8\u4e92\u72ec\u7acb\uff09<ul> <li>$F_{max}(z)=F_X(z)F_Y(z)$</li> <li>$F_{min}(z)=1-(1-F_X(z))(1-F_Y(z))$</li> <li>$n$ \u4e2a\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u540c\u7406</li> </ul> </li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_17","title":"\u5e38\u89c1\u5206\u5e03\u7684\u5377\u79ef","text":"<p>\u5206\u5e03\u7684\u5377\u79ef\u95ee\u9898\uff0c\u4e5f\u5373\u662f\u5206\u5e03\u7684\u72ec\u7acb\u53ef\u52a0\u6027\u95ee\u9898\u3002</p> <p>1.\u4e8c\u9879\u5206\u5e03\u7684\u53ef\u52a0\u6027\uff1a\u8bbe $X\\sim B(n,p)$\uff0c$Y\\sim B(m,p)$\uff0c$0&lt;p&lt;1$\uff0c$m$\uff0c$n$ \u5747\u4e3a\u6b63\u6574\u6570\uff0c\u82e5 $X$ \u4e0e $Y$ \u72ec\u7acb\uff0c\u5219</p> <p>$$ X+Y\\sim B(m+n,p) $$</p> <p>\u4e8c\u9879\u5206\u5e03\u7684\u53ef\u52a0\u6027\u6709\u52a9\u4e8e\u7406\u89e3\u4e8c\u9879\u5206\u5e03\u4e0e\u4e24\u70b9\u5206\u5e03\u7684\u53ef\u52a0\u6027\u3002</p> <p>2.\u6cca\u677e\u5206\u5e03\u7684\u53ef\u52a0\u6027\uff1a\u8bbe $X\\sim P({\\lambda}_1)$\uff0c$Y\\sim P({\\lambda}_2)$\uff0c${\\lambda}_i&gt;0$\uff0c$i=1,2$\uff0c\u82e5 $X$ \u4e0e $Y$ \u72ec\u7acb\uff0c\u5219</p> <p>$$ X+Y\\sim P({\\lambda}_1+{\\lambda}_2) $$</p> <p>3.\u6b63\u6001\u5206\u5e03\u7684\u53ef\u52a0\u6027\uff1a\u8bbe $X\\sim N({\\mu}_1,{\\sigma}_1^2)$\uff0c$Y\\sim N({\\mu}_2,{\\sigma}_2^2)$\uff0c$-\\infty &lt;{\\mu}_i&lt;+\\infty$\uff0c${\\sigma}_i&gt;0$\uff0c$i=1,2$\uff0c\u82e5 $X$ \u4e0e $Y$ \u72ec\u7acb\uff0c\u5219</p> <p>$$ X+Y\\sim N({\\mu}_1+{\\mu}_2,{\\sigma}_1^2+{\\sigma}_2 ^ 2) $$</p> <p>\u6b64\u5916\uff0c\u82e5 $(X,Y)\\sim N({\\mu}_1,{\\mu}_2,{\\sigma}_1^2 ,{\\sigma}_2^2 ,\\rho)$\uff0c\u5219\u4e0d\u8bba $X$ \u4e0e $Y$ \u662f\u5426\u72ec\u7acb\uff08\u5373 $\\rho$ \u662f\u5426\u4e3a $0$\uff09\uff0c\u90fd\u6709\uff1a</p> <p>$$ aX+bY+c\\sim N(a{\\mu}_1+b{\\mu}_2+c,a^2 {\\sigma}_1^2 +b^2 {\\sigma}_2 ^ 2 + 2ab{\\sigma}_1{\\sigma}_2\\rho) $$</p> <p>4.$\\Gamma$ \u5206\u5e03\u7684\u53ef\u52a0\u6027\uff1a\u8bbe $X\\sim \\Gamma ({\\alpha}_1,\\beta)$\uff0c$Y\\sim \\Gamma ({\\alpha}_2,\\beta)$\uff0c${\\alpha}_i&gt;0$\uff0c$i=1,2$\uff0c$\\beta &gt;0$ \u5747\u4e3a\u6b63\u6574\u6570\uff0c\u82e5 $X$ \u4e0e $Y$ \u72ec\u7acb\uff0c\u5219</p> <p>$$ X+Y\\sim \\Gamma ({\\alpha}_1+{\\alpha}_2,\\beta) $$</p> <p>\u6307\u6570\u5206\u5e03\u662f\u7279\u6b8a\u7684 $\\Gamma$ \u5206\u5e03\uff0c$E(\\lambda)=\\Gamma (1,\\lambda)$\u3002</p>"},{"location":"math/probability/probability_statistics/note1/#_18","title":"\u968f\u673a\u53d8\u91cf\u7684\u6570\u5b66\u7279\u5f81","text":""},{"location":"math/probability/probability_statistics/note1/#_19","title":"\u5e38\u89c1\u5206\u5e03\u7684\u671f\u671b\u4e0e\u65b9\u5dee","text":"\u5206\u5e03 \u5206\u5e03\u5f8b\u6216\u5bc6\u5ea6\u51fd\u6570 \u6570\u5b66\u671f\u671b \u65b9\u5dee $0-1$ \u5206\u5e03 $P(X=k)=p^k (1-p)^{1-k},\\;\\;k=0,1$ $p$ $p(1-p)$ \u4e8c\u9879\u5206\u5e03 $B(n,p)$ $P(X=k)=C_n^k p^k (1-p)^{1-k},\\;\\;k=0,1,...,n$ $np$ $np(1-p)$ \u6cca\u677e\u5206\u5e03 $P(\\lambda)$ $P(X=k)=\\frac{\\lambda ^k e^{-\\lambda}}{k!},\\;\\;k=0,1,...$ $\\lambda$ $\\lambda$ \u5747\u5300\u5206\u5e03 $U(a,b)$ $f(x)=\\begin{cases} \\frac{1}{b-a} &amp; ,a&lt;x&lt;b \\cr 0 &amp; ,\\text{else} \\end{cases}$ $\\frac{a+b}{2}$ $\\frac{(b-a)^2}{12}$ \u6307\u6570\u5206\u5e03 $E(\\lambda)$ $f(x)=\\begin{cases} \\lambda e^{-\\lambda x} &amp; ,x&gt;0 \\cr 0 &amp; ,\\text{else} \\end{cases}$ $\\frac{1}{\\lambda}$ $\\frac{1}{\\lambda ^2}$ \u6b63\u6001\u5206\u5e03 $N(\\mu ,\\sigma ^2)$ $f(x)=\\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu) ^2 }{2\\sigma ^2 }},\\;\\;-\\infty&lt;x&lt;+\\infty$ $\\mu$ $\\sigma ^2$"},{"location":"math/probability/probability_statistics/note1/#_20","title":"\u6570\u5b66\u671f\u671b\u4e0e\u5206\u5e03\u51fd\u6570\u7684\u5173\u7cfb","text":"<p>\u8bbe\u968f\u673a\u53d8\u91cf $X$ \u7684\u5206\u5e03\u51fd\u6570\u4e3a $F(x)$\uff0c\u5219\u5206\u90e8\u79ef\u5206\u6cd5\u6613\u8bc1\uff1a</p> <p>$$ E(X) = \\int_{0}^{+\\infty} (1-F(x))\\mathrm{d}x-\\int_{-\\infty}^{0} F(x)\\mathrm{d}x $$</p> <ul> <li>\u5f53 $X$ \u4e3a\u975e\u8d1f\u968f\u673a\u53d8\u91cf\uff08\u5373 $P(X\\geq 0)=1$\uff09\u65f6\uff0c\u6709\uff1a$E(X)=\\int _0^{+\\infty} (1-F(x))\\mathrm{d}x$\uff1b</li> <li>\u5f53 $X$ \u4e3a\u53d6\u975e\u8d1f\u6574\u6570\u503c\u5f97\u968f\u673a\u53d8\u91cf\u65f6\uff0c\u6709\uff1a$E(X)=\\sum _{k=1}^{+\\infty} P(X\\geq k)$\uff1b</li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_21","title":"\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u6570\u5b66\u671f\u671b","text":"<p>\u8bbe $Z$ \u662f\u968f\u673a\u53d8\u91cf $X,Y$ \u7684\u51fd\u6570\uff1a$Z=h(X,Y)$\uff08$h$ \u662f\u8fde\u7eed\u51fd\u6570\uff09\uff1a</p> <ul> <li>\u82e5\u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf $(X,Y)$ \u7684\u5206\u5e03\u5f8b\u4e3a $P(X=x_i,Y=y_j)=p_{ij},\\;\\;i,j=1,2,...$\uff0c\u5219\u6709\uff1a$E(Z)=E[h(X,Y)]=\\sum_{i=1}^{\\infty} \\sum_{i=1}^{\\infty} h(x_i,y_j)p_{ij}$\uff0c\u8fd9\u91cc\u8bbe\u4e0a\u5f0f\u53f3\u8fb9\u7684\u7ea7\u6570\u7edd\u5bf9\u6536\u655b\uff1b</li> <li>\u82e5\u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf $(X,Y)$ \u7684\u6982\u7387\u5bc6\u5ea6\u4e3a $f(x,y)$\uff0c\u5219\u6709\uff1a$E(Z)=E[h(X,Y)]=\\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} h(x,y)f(x,y)\\mathrm{d}x\\mathrm{d}y$\uff0c\u8fd9\u91cc\u8bbe\u4e0a\u5f0f\u53f3\u8fb9\u7684\u79ef\u5206\u7edd\u5bf9\u6536\u655b\uff1b</li> <li>\u7279\u522b\u5730\uff1a<ul> <li>$E(XY)=\\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} xyf(x,y)\\mathrm{d}x\\mathrm{d}y$\uff1b</li> <li>$E(X)=\\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} xf(x,y)\\mathrm{d}x\\mathrm{d}y$\uff1b</li> <li>$E(Y)=\\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} yf(x,y)\\mathrm{d}x\\mathrm{d}y$\uff1b</li> </ul> </li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_22","title":"\u6761\u4ef6\u6570\u5b66\u671f\u671b","text":"<p>\u82e5 $(X,Y)$ \u4e3a\u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff0c\u4e14\u5728\u7ed9\u5b9a $X=x$ \u4e0b\uff0c$Y$ \u7684\u6761\u4ef6\u5206\u5e03\u5f8b\u4e3a $P(Y=y_j | X=x)=p_j(x),\\;\\;j=1,2,...$\uff1b\u6216\u8005 $(X,Y)$ \u4e3a\u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u4e14\u5728\u7ed9\u5b9a $X=x$ \u4e0b\uff0c$Y$ \u7684\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a $f_{Y|X}(y|x)$\uff0c\u5219 $Y$ \u7684\u6761\u4ef6\u671f\u671b\u4e3a\uff1a</p> <p>$$ E(Y|X=x)= \\begin{cases} \\sum_{j=1}^{+\\infty} y_j p_j(x) &amp; ,\\text{discrete} \\cr \\int_{-\\infty}^{+\\infty} y f_{Y|X}(y|x) \\mathrm{d}y &amp; ,\\text{continuous} \\end{cases} $$</p> <p>$(X,Y)$ \u4e3a\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\uff0c\u82e5 $E(Y)$ \u5b58\u5728\uff0c\u5219\u6709\u5168\u671f\u671b\u516c\u5f0f\uff08Total Expectation Formula\uff09\uff1a</p> <p>$$ E(Y) = E[E(Y|X)] $$</p>"},{"location":"math/probability/probability_statistics/note1/#_23","title":"\u6807\u51c6\u5316\u53d8\u91cf","text":"<p>\u8bbe\u968f\u673a\u53d8\u91cf $X$ \u5177\u6709\u6570\u5b66\u671f\u671b $E(X)=\\mu$\uff0c\u65b9\u5dee $D(X)=\\sigma ^2 \\neq 0$\uff0c\u8bb0 $X^{*} = \\frac{X-\\mu}{\\sigma}$\u3002$E(X^{*} )=0$\uff0c$D(X^{*})=1$\uff0c\u79f0 $X^{*}$ \u4e3a $X$ \u7684\u6807\u51c6\u5316\u53d8\u91cf\u3002</p> <p>\u7279\u522b\u5730\uff0c\u6b63\u6001\u53d8\u91cf\u7684\u6807\u51c6\u5316\u53d8\u91cf\u670d\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\u3002</p>"},{"location":"math/probability/probability_statistics/note1/#_24","title":"\u72ec\u7acb\u6027\u4e0e\u76f8\u5173\u6027","text":"<p>\u968f\u673a\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u4ec5\u9488\u5bf9\u300c\u7ebf\u6027\u5173\u7cfb\u300d\u800c\u8a00\uff0c$X,Y$ \u4e0d\u76f8\u5173\u7b49\u4ef7\u4e8e $Cov(X,Y)=0$\u3002</p> <p>\u800c\u72ec\u7acb\u6027\u662f\u4e00\u4e2a\u5f88\u5f3a\u7684\u6761\u4ef6\uff0c\u968f\u673a\u53d8\u91cf\u76f8\u4e92\u72ec\u7acb\uff0c\u5b9a\u4e49\u4e0a\u8981\u6c42\u5176\u4e2d\u4efb\u4e00\u53d8\u91cf\u7684\u5b58\u5728\u4e0e\u5426\uff0c\u90fd\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03\u4ea7\u751f\u5f71\u54cd\u3002$X,Y$ \u72ec\u7acb\u7b49\u4ef7\u4e8e $Cov(f(X),g(Y))=0$ \u5bf9\u4efb\u4f55\u51fd\u6570 $f,g$ \u90fd\u6210\u7acb\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u6c42 $X,Y$ \u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5305\u62ec\u7ebf\u6027\u7684\u548c\u975e\u7ebf\u6027\u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\uff0c\u72ec\u7acb\u6027\u6bd4\u76f8\u5173\u6027\u5f3a\u5f97\u591a\uff0c\u72ec\u7acb\u662f\u4e0d\u76f8\u5173\u7684\u5145\u5206\u4e0d\u5fc5\u8981\u6761\u4ef6\u3002\u901a\u4fd7\u5730\u8bb2\uff0c\u72ec\u7acb\u624d\u662f\u6211\u4eec\u6240\u8bf4\u7684\u201c\u6ca1\u6709\u5173\u7cfb\u201d\uff0c\u800c\u4e0d\u76f8\u5173\u4ec5\u4ec5\u8868\u8fbe\u201c\u6ca1\u6709\u7ebf\u6027\u5173\u7cfb\u201d\u3002</p> <p>\u4e8c\u7ef4\u6b63\u6001\u53d8\u91cf $(X,Y)$ \u7684\u72ec\u7acb\u6027\u4e0e\u76f8\u5173\u6027\uff1a</p> <ul> <li>$\\rho _{XY} = \\rho$\uff1b</li> <li>$X,Y$ \u76f8\u4e92\u72ec\u7acb $\\Rightarrow$ $X,Y$ \u4e0d\u76f8\u5173\uff1b</li> </ul>"},{"location":"math/probability/probability_statistics/note1/#_25","title":"\u5176\u5b83\u6570\u5b57\u7279\u5f81","text":"<p>\u8bbe $X,Y$ \u662f\u968f\u673a\u53d8\u91cf\uff1a</p> <ul> <li>\u82e5 $E(X^k),\\;\\;k=1,2,...$ \u5b58\u5728\uff0c\u5219\u79f0\u4e4b\u4e3a $X$ \u7684 $k$ \u9636\uff08\u539f\u70b9\uff09\u77e9\uff1b</li> <li>\u82e5 $E\\lbrace [X-E(X)]^k \\rbrace,\\;\\;k=1,2,...$ \u5b58\u5728\uff0c\u5219\u79f0\u4e4b\u4e3a $X$ \u7684 $k$ \u9636\u4e2d\u5fc3\u77e9\uff1b</li> <li>\u82e5 $E(X^k Y^l),\\;\\;k,l=1,2,...$ \u5b58\u5728\uff0c\u5219\u79f0\u4e4b\u4e3a $X,Y$ \u7684 $k+l$ \u9636\u6df7\u5408\uff08\u539f\u70b9\uff09\u77e9\uff1b</li> <li>\u82e5 $E\\lbrace [X-E(X)]^k [Y-E(Y)]^l \\rbrace,\\;\\;k,l=1,2,...$ \u5b58\u5728\uff0c\u5219\u79f0\u4e4b\u4e3a $X,Y$ \u7684 $k+l$ \u9636\u6df7\u5408\u4e2d\u5fc3\u77e9\uff1b</li> </ul> <p>\u8bbe $X$ \u4e3a\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u5176\u5206\u5e03\u51fd\u6570\u548c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u5206\u522b\u4e3a $F(x)$ \u548c $f(x)$\uff0c\u79f0\u6ee1\u8db3\u6761\u4ef6 $P(X&gt;x_{\\alpha})=1-F(x_{\\alpha})=\\int_{x_{\\alpha}}^{+\\infty} f(x) \\mathrm{d}x = \\alpha$ \u7684\u5b9e\u6570 $x_{\\alpha}$ \u4e3a\u968f\u673a\u53d8\u91cf $X$ \u7684\u4e0a $x_{\\alpha}$ \u5206\u4f4d\u6570\u3002</p> <ul> <li>\u5f53 $\\alpha = \u00bd$ \u65f6\uff0c$x_{\u00bd}$ \u79f0\u4e3a $X$ \u7684\u4e2d\u4f4d\u6570\uff1b</li> <li>\u5bf9\u4e8e\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c$x_{\u00bd}=0$\uff0c$x_{1-\\alpha}=-x_{\\alpha}$\uff1b</li> </ul>"},{"location":"math/probability/probability_statistics/note2/","title":"\u6570\u7406\u7edf\u8ba1\u57fa\u7840","text":"<p> \u7ea6 1963 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"},{"location":"math/probability/probability_statistics/note2/#_2","title":"\u5927\u6570\u5b9a\u5f8b\u53ca\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":""},{"location":"math/probability/probability_statistics/note2/#_3","title":"\u5927\u6570\u5b9a\u5f8b\u8865\u5145","text":"<p>\u5927\u6570\u5b9a\u5f8b\u63ed\u793a\u4e86\u4e00\u4e9b\u968f\u673a\u4e8b\u4ef6\u5728\u5927\u6570\u6761\u4ef6\u4e0b\u5448\u73b0\u51fa\u7684\u7a33\u5b9a\u6027\u3002\u4e0d\u8bba\u662f\u72ec\u7acb\u91cd\u590d\u8bd5\u9a8c\u4e0b\u7684\u4e8b\u4ef6\u53d1\u751f\u9891\u7387\uff08\u4f2f\u52aa\u5229\u5927\u6570\u5b9a\u5f8b\uff09\uff0c\u8fd8\u662f\u968f\u673a\u53d8\u91cf\u5e8f\u5217\u7684\u7b97\u672f\u5e73\u5747\uff08\u8f9b\u94a6\u5927\u6570\u5b9a\u5f8b\uff09\uff0c\u90fd\u80fd\u4f9d\u6982\u7387\u6536\u655b\u5230\u4e00\u4e2a\u7a33\u5b9a\u503c\uff08\u5206\u522b\u662f\u6982\u7387\u548c\u671f\u671b\uff09\u3002</p> <p>In probability theory, the law of large numbers (LLN) is a mathematical theorem that states that the average of the results obtained from a large number of independent and identical random samples converges to the true value, if it exists.</p> <p>\u5728\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u8fd9\u95e8\u8bfe\u7a0b\u4e2d\uff1a</p> <ul> <li>\u4e24\u4e2a\u91cd\u8981\u4e0d\u7b49\u5f0f\u4e2d\uff0c\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f\u66f4\u4e3a\u5e38\u7528\uff1b</li> <li>\u5e38\u89c1\u7684\u51e0\u79cd\u5927\u6570\u5b9a\u5f8b\u4e2d\uff0c\u8f9b\u94a6\u5927\u6570\u5b9a\u5f8b\u6700\u4e3a\u5e38\u7528\uff1b<ul> <li>\u5c24\u5176\u662f\u8f9b\u94a6\u5927\u6570\u5b9a\u5f8b\u7684\u63a8\u8bba\uff0c\u76f4\u63a5\u6307\u51fa\u4e86\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u4f9d\u6982\u7387\u6536\u655b\u5230\u5176\u5747\u503c\uff08\u4e0d\u4e25\u8c28\uff0c\u9700\u8981\u52a0\u4e0a\u4e00\u4e9b\u6761\u4ef6\uff0c\u8be6\u89c1\u5176\u4e25\u683c\u5b9a\u4e49\uff09\uff1b</li> </ul> </li> </ul>"},{"location":"math/probability/probability_statistics/note2/#_4","title":"\u5176\u4ed6\u5e38\u89c1\u7684\u5927\u6570\u5b9a\u5f8b","text":"<p>\u9a6c\u5c14\u53ef\u592b\u5927\u6570\u5b9a\u5f8b</p> <p>\u8bbe $\\lbrace X_i,i \\geq 1 \\rbrace$ \u4e3a\u4e00\u968f\u673a\u53d8\u91cf\u5e8f\u5217\uff0c\u82e5\u5bf9\u6240\u6709\u7684 $i \\geq 1$\uff0c$X_i$ \u7684\u65b9\u5dee\u90fd\u5b58\u5728\uff0c\u4e14 $lim_{n \\rarr +\\infty} \\frac{1}{n^2} Var(\\sum_{i=1}^{n} X_i) = 0$\uff0c\u5219\u5bf9 $\\forall \\epsilon &gt; 0$\uff0c\u6709\uff1a</p> <p>$$ lim_{n \\rarr +\\infty} P \\lbrace | \\frac{1}{n} \\sum_{i=1}^{n}X_i - \\frac{1}{n}E(X_i) | \\geq \\epsilon \\rbrace = 0 $$</p> <p>\u6210\u7acb\uff0c\u5373\u968f\u673a\u53d8\u91cf $\\lbrace X_i,i \\geq 1 \\rbrace$ \u670d\u4ece\u5927\u6570\u5b9a\u5f8b\u3002</p> <p>\u5207\u6bd4\u96ea\u592b\u5927\u6570\u5b9a\u5f8b</p> <p>\u8bbe $\\lbrace X_i,i \\geq 1 \\rbrace$ \u4e3a\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u5e8f\u5217\uff0c\u82e5\u5b58\u5728\u5e38\u6570 $C$\uff0c\u4f7f\u5f97 $Var(X_i) \\leq C , i=1,2,...$\uff0c\u5373\u6240\u6709\u7684 $X_i$ \u7684\u65b9\u5dee\u6709\u5171\u540c\u7684\u4e0a\u754c\uff0c\u5219\u5bf9 $\\forall \\epsilon &gt; 0$\uff0c\u6709\uff1a</p> <p>$$ lim_{n \\rarr +\\infty} P \\lbrace | \\frac{1}{n} \\sum_{i=1}^{n}X_i - \\frac{1}{n}E(X_i) | \\geq \\epsilon \\rbrace = 0 $$</p> <p>\u6210\u7acb\uff0c\u5373\u968f\u673a\u53d8\u91cf $\\lbrace X_i,i \\geq 1 \\rbrace$ \u670d\u4ece\u5927\u6570\u5b9a\u5f8b\u3002</p> <p>\u5207\u6bd4\u96ea\u592b\u5927\u6570\u5b9a\u5f8b\u7684\u63a8\u8bba\uff1a</p> <p>\u8bbe $\\lbrace X_i,i \\geq 1 \\rbrace$ \u4e3a\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u5e8f\u5217\uff0c\u82e5\u5b83\u4eec\u7684\u65b9\u5dee\u5b58\u5728\u4e14\u76f8\u540c\uff08\u8bb0\u4e3a ${\\sigma}^2$\uff09\uff0c\u5219\u968f\u673a\u53d8\u91cf $\\lbrace X_i,i \\geq 1 \\rbrace$ \u670d\u4ece\u5927\u6570\u5b9a\u5f8b\u3002</p> <p>\u7279\u522b\u5730\uff08\u8f83\u5e38\u7528\uff0c\u9700\u8981\u638c\u63e1\uff09\uff0c$\\lbrace X_i,i \\geq 1 \\rbrace$ \u4e3a\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u5e8f\u5217\uff0c\u4e14\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u671f\u671b $\\mu$ \u548c\u76f8\u540c\u7684\u65b9\u5dee ${\\sigma}^2$\uff0c\u5219 $\\frac{1}{n} \\sum_{i=1}^{n}X_i \\xrightarrow{P} \\mu \\; , \\; n \\rarr +\\infty$\u3002</p>"},{"location":"math/probability/probability_statistics/note2/#_5","title":"\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u8865\u5145","text":"<p>\u6709\u8bb8\u591a\u968f\u673a\u53d8\u91cf\uff0c\u5b83\u4eec\u662f\u7531\u5927\u91cf\u7684\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u7684\u7efc\u5408\u5f71\u54cd\u6240\u5f62\u6210\u7684\uff0c\u800c\u5176\u4e2d\u6bcf\u4e2a\u4e2a\u522b\u56e0\u7d20\u7684\u4f5c\u7528\u90fd\u5f88\u5c0f\u3002\u8fd9\u79cd\u968f\u673a\u53d8\u91cf\u5f80\u5f80\u670d\u4ece\u6216\u8fd1\u4f3c\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff0c\u6216\u8005\u8bf4\u5b83\u7684\u6781\u9650\u5206\u5e03\u662f\u6b63\u6001\u5206\u5e03\u3002\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u6b63\u662f\u4ece\u6570\u5b66\u4e0a\u8bba\u8bc1\u4e86\u8fd9\u4e00\u73b0\u8c61\u3002</p>  \u5bf9\u4e8e\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u8fd9\u95e8\u8bfe\u7a0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u638c\u63e1\u72ec\u7acb\u540c\u5206\u5e03\u7684\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff08\u6797\u5fb7\u4f2f\u683c-\u83b1\u7ef4\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff09\u53ca\u5176\u63a8\u8bba\uff08\u4e8c\u9879\u5206\u5e03\u7684\u6b63\u6001\u8fd1\u4f3c\uff0c\u5373\u68e3\u83ab\u5f17-\u62c9\u666e\u62c9\u65af\u5b9a\u7406\uff09\u5373\u53ef\u3002"},{"location":"math/probability/probability_statistics/note2/#_6","title":"\u7edf\u8ba1\u91cf\u4e0e\u62bd\u6837\u5206\u5e03","text":""},{"location":"math/probability/probability_statistics/note2/#_7","title":"\u4ece\u6982\u7387\u8bba\u5230\u6570\u7406\u7edf\u8ba1","text":"<p>\u6982\u7387\u8bba\u544a\u8bc9\u6211\u4eec\uff0c\u73b0\u5b9e\u4e2d\u7684\u8bb8\u591a\u968f\u673a\u4e8b\u4ef6\u90fd\u4f1a\u5728\u5927\u6570\u6761\u4ef6\u4e0b\u5448\u73b0\u51fa\u7a33\u5b9a\u6027\uff08\u89c4\u5f8b\u6027\uff09\uff0c\u56e0\u800c\u7406\u8bba\u4e0a\u53ea\u8981\u5bf9\u968f\u673a\u73b0\u8c61\u8fdb\u884c\u8db3\u591f\u591a\u6b21\u89c2\u5bdf\uff0c\u4e00\u5b9a\u80fd\u6e05\u695a\u5730\u8ba1\u7b97\u51fa\u5404\u79cd\u7ed3\u679c\u7684\u89c4\u5f8b\u6027\u3002\u4f46\u662f\uff0c\u5b9e\u9645\u4e0a\u6240\u5141\u8bb8\u7684\u89c2\u5bdf\u6c38\u8fdc\u662f\u6709\u9650\u7684\uff0c\u751a\u81f3\u662f\u5c11\u91cf\u7684\u3002</p> <p>\u4ece\u6709\u9650\u7684\u89c2\u5bdf\u4e2d\u63a8\u6d4b\u65e0\u9650\u89c2\u5bdf\u624d\u80fd\u5f97\u5230\u7684\u89c4\u5f8b\uff0c\u4ee5\u6837\u672c\u7684\u4fe1\u606f\u6765\u63a8\u65ad\u603b\u4f53\u7684\u4fe1\u606f\uff0c\u8fd9\u5c31\u662f\u6570\u7406\u7edf\u8ba1\u5b66\u7814\u7a76\u7684\u95ee\u9898\u4e4b\u4e00\u3002\u6839\u636e Glivenko-Cantelli \u5b9a\u7406\uff0c\u7ecf\u9a8c\u5206\u5e03\u51fd\u6570\u7684\u6536\u655b\u884c\u4e3a\u968f\u7740\u72ec\u7acb\u540c\u5206\u5e03\u7684\u89c2\u6d4b\u503c\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u5f3a\uff0c\u8fd9\u4e5f\u8bc1\u660e\u4e86\u6570\u7406\u7edf\u8ba1\u5b66\u901a\u8fc7\u6837\u672c\u4fe1\u606f\u63a8\u65ad\u603b\u4f53\u4fe1\u606f\u8fd9\u4e00\u65b9\u6cd5\u7684\u53ef\u884c\u6027\u548c\u6b63\u786e\u6027\u3002</p> <p>\u4e0a\u6587\u63d0\u5230\u7684\u4ece\u6837\u672c\u51fa\u53d1\u63a8\u65ad\u603b\u4f53\uff0c\u6b63\u662f\u6240\u8c13\u7684\u300c\u7edf\u8ba1\u63a8\u65ad\u300d\u3002R.A Fisher \u5c06\u7edf\u8ba1\u63a8\u65ad\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li>\u62bd\u6837\u5206\u5e03\uff08\u7edf\u8ba1\u91cf\u7684\u5206\u5e03\uff09\uff1b</li> <li>\u53c2\u6570\u4f30\u8ba1\uff1b</li> <li>\u5047\u8bbe\u68c0\u9a8c\uff1b</li> </ul>"},{"location":"math/probability/probability_statistics/note2/#_8","title":"\u4e09\u5927\u62bd\u6837\u5206\u5e03\u8868","text":"<p>$\\chi^{2}$ \u5206\u5e03\uff08\u5361\u65b9\u5206\u5e03\uff09\uff1a</p> <p>https://www.obhrm.net/index.php/\u5361\u65b9\u5206\u5e03\u8868_Chi-Square_Probabilities</p> <p>$t$ \u5206\u5e03\uff08\u5b66\u751f\u6c0f\u5206\u5e03\uff09\uff0c\u5173\u6ce8 one-sided \u90e8\u5206\u5373\u53ef\uff1a</p> <p>https://en.wikipedia.org/wiki/Student%27s_t-distribution</p> <p>$F$ \u5206\u5e03\uff1a</p> <p>https://blog.csdn.net/sinat_34439107/article/details/78577412</p> <p>\u788e\u788e\u5ff5</p> <p>\u8fd9\u4e09\u5f20\u5206\u5e03\u8868\u627e\u5f97\u6709\u70b9\u96be\u53d7\uff0c\u5f88\u5947\u602a\u4e3a\u4ec0\u4e48 Wikipedia \u4e0d\u7ed9\u51fa\u5b8c\u6574\u7684\u5206\u5e03\u8868\u3002\u4ee5\u6211\u7684\u5f3a\u8feb\u75c7\uff0c\u5982\u679c\u7f51\u5740\u548c\u5206\u5e03\u8868\u4e0d\u591f\u4f18\u96c5\u7684\u8bdd\uff0c\u6211\u4e5f\u8bb8\u4f1a\u81ea\u5df1\u6765\u505a\u8fd9\u4ef6\u4e8b\uff08\u9003\u3002</p>"},{"location":"math/probability/probability_statistics/note2/#_9","title":"\u53c2\u6570\u4f30\u8ba1","text":""},{"location":"math/probability/probability_statistics/note2/#_10","title":"\u7ea0\u504f\u65b9\u6cd5","text":"<p>\u65e0\u504f\u6027\u662f\u5bf9\u4f30\u8ba1\u91cf\u7684\u4e00\u4e2a\u6700\u5e38\u89c1\u7684\u91cd\u8981\u8981\u6c42\uff0c\u662f\u201c\u597d\u201d\u4f30\u8ba1\u7684\u6807\u51c6\u4e4b\u4e00\u3002\u5f53\u4f30\u8ba1\u91cf $\\hat{\\theta}$ \u4e0d\u6ee1\u8db3\u65e0\u504f\u6027\u65f6\uff0c\u5373 $E(\\hat{\\theta}) \\not = \\theta$ \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 $\\hat{\\theta}$ \u8fdb\u884c\u5fae\u8c03\uff0c\u4ee5\u4f7f\u5176\u6ee1\u8db3\u65e0\u504f\u6027\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u79f0\u4e3a\u7ea0\u504f\u3002</p> <p>\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u7ea0\u504f\u60c5\u5f62\uff1a\u5982\u679c $E(\\hat{\\theta})=a\\theta +b$\uff0c\u5176\u4e2d $a,b$ \u4e3a\u5e38\u6570\uff0c\u4e14 $a\\not =0$\uff0c\u5219 $\\frac{1}{a}(\\hat{\\theta}-b)$ \u662f\u5bf9 $\\theta$ \u7684\u65e0\u504f\u4f30\u8ba1\u3002</p>"},{"location":"math/probability/probability_statistics/note2/#_11","title":"\u67a2\u8f74\u91cf\u6cd5\u8865\u5145","text":"<p>\u7528\u67a2\u8f74\u91cf\u53d1\u6c42\u89e3\u7f6e\u4fe1\u533a\u95f4\u65f6\uff0c\u82e5\u5e38\u6570 $a,b$ \u662f\u4e0d\u552f\u4e00\u7684\uff0c\u5219\u6839\u636e Neyman \u539f\u5219\uff0c\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u80fd\u4f7f\u533a\u95f4\u5e73\u5747\u957f\u5ea6\u6700\u77ed\u7684 $a,b$\u3002</p> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5e38\u53d6 $a,b$ \u6ee1\u8db3\uff1a</p> <p>$$ P(G(X;\\theta)\\leq a) = P(G(X;\\theta)\\geq b) = \\alpha /2 $$</p> <p>\u8fd9\u6837\u5f97\u5230\u7684\u7f6e\u4fe1\u533a\u95f4\u79f0\u4e3a\u7b49\u5c3e\u7f6e\u4fe1\u533a\u95f4\u3002</p>"},{"location":"math/probability/probability_statistics/note2/#_12","title":"\u53cc\u4fa7\u7f6e\u4fe1\u4e0e\u5355\u4fa7\u7f6e\u4fe1","text":"<p>\u6ce8\u610f\u533a\u5206\u53cc\u4fa7\u7f6e\u4fe1\u548c\u5355\u4fa7\u7f6e\u4fe1\uff0c\u5728\u76f8\u540c\u6761\u4ef6\u4e0b\uff0c\u53cc\u4fa7\u7f6e\u4fe1\u533a\u95f4\u7684\u4e0b\u9650\uff08\u6216\u4e0a\u9650\uff09\u5e76\u4e0d\u7b49\u540c\u4e8e\u5355\u4fa7\u7f6e\u4fe1\u4e0b\u9650\uff08\u6216\u4e0a\u9650\uff09\u3002</p> <p>\u7279\u522b\u5730\uff0c\u5728\u4e0b\u8868\u4e2d\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u51e0\u4e2a\u53cc\u4fa7\u7f6e\u4fe1\u9650\u4e0e\u5355\u4fa7\u7f6e\u4fe1\u9650\u7684\u533a\u522b\uff0c\u6070\u6070\u662f\u4e0a $x_{\\alpha /2}$ \u5206\u4f4d\u6570\u548c\u4e0a $x_{\\alpha}$ \u5206\u4f4d\u6570\u7684\u533a\u522b\u3002</p>"},{"location":"math/probability/probability_statistics/note2/#_13","title":"\u6b63\u6001\u603b\u4f53\u53c2\u6570\u533a\u95f4\u4f30\u8ba1\u8868","text":"<p>\u524d\u4e09\u884c\u4e3a\u4e00\u4e2a\u6b63\u6001\u603b\u4f53\uff0c\u540e\u4e09\u884c\u4e3a\u4e24\u4e2a\u6b63\u6001\u603b\u4f53\uff1a</p> \u5f85\u4f30\u53c2\u6570 \u5176\u4ed6\u53c2\u6570 \u67a2\u8f74\u91cf\u53ca\u5176\u5206\u5e03 \u7f6e\u4fe1\u533a\u95f4 \u5355\u4fa7\u7f6e\u4fe1\u9650 $\\mu$ $\\sigma^ {2}$ \u5df2\u77e5 $\\frac{\\overline{X}-\\mu}{\\sigma /\\sqrt{n}} \\sim N(0,1)$ $\\left( \\overline{X} \\pm \\frac{\\sigma}{\\sqrt{n}}z_{\\alpha /2} \\right)$ $\\overline{X} \\pm \\frac{\\sigma}{\\sqrt{n}}z_{\\alpha}$ $\\mu$ $\\sigma^ {2}$ \u672a\u77e5 $\\frac{\\overline{X}-\\mu}{S /\\sqrt{n}} \\sim t(n-1)$ $\\left( \\overline{X} \\pm \\frac{S}{\\sqrt{n}}t_{\\alpha /2}(n-1) \\right)$ $\\overline{X} \\pm \\frac{S}{\\sqrt{n}}t_{\\alpha}(n-1)$ $\\sigma^ {2}$ $\\mu$ \u672a\u77e5 $\\frac{(n-1)S^ 2}{\\sigma^{2}} \\sim \\chi^{2}(n-1)$ $\\left( \\frac{(n-1)S^ 2}{\\chi_{\\alpha /2}^{2}(n-1)}, \\frac{(n-1)S^2}{\\chi_{1-\\alpha /2}^{2}(n-1)} \\right)$ $\\frac{(n-1)S^ 2}{\\chi_{\\alpha}^{2}(n-1)}, \\frac{(n-1)S^ 2}{\\chi_{1-\\alpha}^{2}(n-1)}$ $\\mu_{1}-\\mu_{2}$ $\\sigma_{1}^ {2}, \\sigma_{2}^ {2}$ \u5df2\u77e5 $\\frac{(\\overline{X}-\\overline{Y})-(\\mu_{1}-\\mu_{2})}{\\sqrt{\\frac{\\sigma_{1}^ {2}}{n_1}+\\frac{\\sigma_{2}^ {2}}{n_2}}} \\sim N(0,1)$ $\\left( (\\overline{X}-\\overline{Y}) \\pm z_{\\alpha /2}\\sqrt{\\frac{\\sigma_{1}^ {2}}{n_1}+\\frac{\\sigma_{2}^ {2}}{n_2}} \\right)$ $(\\overline{X}-\\overline{Y}) \\pm z_{\\alpha}\\sqrt{\\frac{\\sigma_{1}^ {2}}{n_1}+\\frac{\\sigma_{2}^ {2}}{n_2}}$ $\\mu_{1}-\\mu_{2}$ $\\sigma_{1}^ {2}, \\sigma_{2}^ {2}$ \u672a\u77e5 $\\frac{(\\overline{X}-\\overline{Y})-(\\mu_{1}-\\mu_{2})}{S_w\\sqrt{\\frac{1}{n_1}+\\frac{1}{n_2}}} \\sim t(n_1+n_2-2)$ $\\left( (\\overline{X}-\\overline{Y}) \\pm t_{\\alpha /2}(n_1+n_2-2)S_w\\sqrt{\\frac{1}{n_1}+\\frac{1}{n_2}} \\right)$ $(\\overline{X}-\\overline{Y}) \\pm t_{\\alpha}(n_1+n_2-2)S_w\\sqrt{\\frac{1}{n_1}+\\frac{1}{n_2}}$ $\\frac{\\sigma_{1}^ {2}}{\\sigma_{2}^ {2}}$ $\\mu_{1}, \\mu_{2}$ \u672a\u77e5 $\\frac{S_1^ 2/S_2^ 2}{\\sigma_{1}^ {2}/\\sigma_{2}^ {2}} \\sim F(n_1-1,n_2-1)$ $\\left( \\frac{S_1^ 2}{S_2^ 2}\\frac{1}{F_{\\alpha /2}(n_1-1,n_2-1)}, \\frac{S_1^ 2}{S_2^ 2}\\frac{1}{F_{1-\\alpha /2}(n_1-1,n_2-1)} \\right)$ $\\frac{S_1^ 2}{S_2^ 2}\\frac{1}{F_{\\alpha}(n_1-1,n_2-1)}, \\frac{S_1^ 2}{S_2^ 2}\\frac{1}{F_{1-\\alpha}(n_1-1,n_2-1)}$"},{"location":"math/probability/probability_statistics/note2/#_14","title":"\u5047\u8bbe\u68c0\u9a8c","text":""},{"location":"others/","title":"Others","text":"<p> \u7ea6 17 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u8fd9\u91cc\u7528\u6765\u5b58\u653e\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f\uff01</p>"}]}